import{e as v,kh as S,cJ as h,h as w,kj as k,c as y,ap as b,dz as E,ki as $,kl as C,km as F,kk as A,ek as P,dE as G,kn as I,P as H,dj as O,dF as R,hB as z,aD as Z,i7 as x,eN as L,bM as M,r as a,m as p,d as N}from"./index-DtL3GvY-.js";import{a as W}from"./normalizeUtilsSync-Q7wMTszy.js";import{u as j}from"./executeQueryForSnapping-WRGM643x.js";import{f as q}from"./FeatureStore-Bdbg8eqL.js";import{L as J}from"./QueryEngine-CZT-a_rO.js";import{A as g}from"./utils-DDixzkIm.js";import{o as T,i as B}from"./queryEngineUtils-BZSz9X00.js";import{i as m,r as D,n as _}from"./symbologySnappingCandidates-DvGyNMQ4.js";import"./queryUtils-CRjq5Dx4.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DVuQFYEV.js";import"./BoundsStore-LWZeXbvz.js";import"./PooledRBush-BlgA9e4V.js";import"./optimizedFeatureQueryEngineAdapter-DtvSySZM.js";import"./WhereClauseCache-BhCViNZx.js";import"./WhereClause-D_85KSno.js";import"./utils-CqBqH-rg.js";import"./utils-DNAQbzzP.js";import"./utils-QelRZs3K.js";import"./ClassBreaksDefinition-CFI1xdAL.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-CaBFLPdG.js";import"./cimSymbolUtils-izKr0_fQ.js";import"./VertexSnappingCandidate-BsLNXnJo.js";import"./PointSnappingHint-DUgIVWuR.js";const f="graphics-collections";let r=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="map-notes")return m();const s=async(n,o)=>(await S(e.whenLayerView(t),o)).elevationAlignPointsInFeatures(n,o);return m(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:s})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return D(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d",s=this._extrudedPolygonSymbolsCount>0;return i&&t.type!=="map-notes"&&s?_(s,(async(n,o)=>{const l=await e.whenLayerView(t);return h(o),l.queryForSymbologySnapping({candidates:n,spatialReference:e.spatialReference},o)})):_()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new w,this._memoizedMakeGetGroundElevation=k(B)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e))),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add((()=>this.getGraphicsLayers()),(i=>{this._updatingHandles.removeHandles(f);for(const s of i)this._addMany(s.graphics.toArray()),this.addHandles([s.on("graphic-update",(n=>this._onGraphicUpdate(n))),this._updatingHandles.addOnCollectionChange((()=>s.graphics),(n=>this._onGraphicsChanged(n)))],f)}),y);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:i})=>{$(i,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),b((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),y),E((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:i,coordinateHelper:{spatialReference:s}}=e,n=await C(this._mapSources((d=>this._fetchCandidatesForSource(d,e,t))));h(t);const o=this._memoizedMakeGetGroundElevation(this.view,s),l=n.flat().map((d=>T(d,o)));return F(i,l),l}async _fetchCandidatesForSource(e,t,i){var u;const s=A({parameters:t,mode:((u=this.view)==null?void 0:u.type)??"2d"}),n=await j(e.queryEngine,s,i);h(i);const o=await this._snappingElevationAligner.alignCandidates(n.candidates,t.coordinateHelper.spatialReference,i);h(i);const l=await this._symbologySnappingFetcher.fetch(o,i);h(i);const d=l.length===0?o:[...o,...l];return this._snappingElevationFilter.filter(s,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],i=new Map;for(const s of e)s.geometry!=null&&(this._needsInitializeProjection(s.geometry.spatialReference)?(t.push(s.geometry.spatialReference),i.set(s.uid,s)):this._add(s));this._createPendingAdd(t,i)}_createPendingAdd(e,t){if(!e.length)return;const i=P((async o=>{await G(e.map((l=>({source:l,dest:this.spatialReference}))),{signal:o}),this._markLoadedSpatialReferences(e);for(const l of t.values())this._add(l)}));this._updatingHandles.addPromise(i.promise);const s={task:i,graphics:t},n=()=>I(this._pendingAdds,s);i.promise.then(n,n),this._pendingAdds.push(s)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const i=t.wkt2||t.wkt;i&&this._loadedWkts.add(i)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=H.fromExtent(t));const i=this._ensureSource(t.type);if(i==null)return;const s=this._createOptimizedFeature(e.uid,t);s!=null&&(i.featureStore.add(s),g(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!O(e,this.spatialReference)}_createOptimizedFeature(e,t){const i=R(W(t),this.spatialReference);if(!i)return null;const s=this._ensureGeometryHasZ(i),n=z(s,this._hasZ,!1);return new Z(n,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=s=>{for(;s.length<3;)s.push(0)},i=e.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(t);break;case"polyline":i.paths.forEach((s=>s.forEach(t)));break;case"polygon":i.rings.forEach((s=>s.forEach(t)))}return i}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const i=this._createSource(e);return this._sources[e]=i,i}_createSource(e){const t=x.toJSON(e),i=this._hasZ,s=new q({geometryType:t,hasZ:i,hasM:!1});return{featureStore:s,queryEngine:new J({featureStore:s,fieldsIndex:M.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:t,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:L.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const i=t.uid;e.featureStore.has(i)&&(e.featureStore.removeById(t.uid),g(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:i,polyline:s,multipoint:n}=this._sources,o=[];return t!=null&&o.push(e(t)),i!=null&&o.push(e(i)),s!=null&&o.push(e(s)),n!=null&&o.push(e(n)),o}};a([p()],r.prototype,"getGraphicsLayers",void 0),a([p({constructOnly:!0})],r.prototype,"layerSource",void 0),a([p({constructOnly:!0})],r.prototype,"spatialReference",void 0),a([p({constructOnly:!0})],r.prototype,"view",void 0),a([p({readOnly:!0})],r.prototype,"updating",null),a([p({readOnly:!0})],r.prototype,"availability",void 0),a([p()],r.prototype,"_hasZ",null),a([p()],r.prototype,"_snappingElevationAligner",null),a([p()],r.prototype,"_snappingElevationFilter",null),a([p()],r.prototype,"_symbologySnappingFetcher",null),a([p()],r.prototype,"_extrudedPolygonSymbolsCount",void 0),r=a([N("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],r);const c="OBJECTID";export{r as GraphicsSnappingSource};
