import{dA as w,gn as y,go as I,eN as T,gp as V,at as u,f as H,eh as v,ao as n,gq as f,cN as C,bW as q,r as c,m as d,d as U}from"./index-CA3J3HgS.js";import"./UpdateTracking2D-CqGZGpN5.js";import"./CIMSymbolHelper-C68tE6Wf.js";import"./OverrideHelper-Ccm_Yyhj.js";import"./Container-Ckf_gxKJ.js";import"./WGLContainer-D6RjDQyD.js";import"./Utils-PFgmSdQk.js";import"./GridShader-I1U1IhbI.js";import"./pbf-Dp9wh2RO.js";import"./TechniqueType-pk2C5RYg.js";import"./FeatureCommandQueue-CNIENhp3.js";import"./PieChartMeshWriter-Bf14AIN2.js";import"./constants-BFLErLYb.js";import{O as b}from"./GraphicsView2D-C8lf4WT9.js";import{r as P,o as p,n as _}from"./imageUtils-BNqJk0Wr.js";import{S as Q}from"./LayerView2D-D1inZCJj.js";import{a as S}from"./HighlightGraphicContainer-0y5KgvaT.js";import{u as G}from"./LayerView-LfRtBo31.js";import{i as L}from"./RefreshableLayerView-G0vLJ6co.js";import{i as k}from"./highlightUtils-4Y7MSmIZ.js";import{_ as F,P as W}from"./MapServiceLayerViewHelper-OnEj067e.js";import{r as z}from"./drapedUtils-BzfEHRHA.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-B1sATo4A.js";import"./Rect-CUzevAry.js";import"./BoundingBox-G_oUBWBn.js";import"./callExpressionWithFeature-CdqjzejE.js";import"./WGLBrushVTLSymbol-BTMQ5naM.js";import"./ShaderCompiler-C94JGjW7.js";import"./ProgramTemplate-ClxdVwjR.js";import"./GraphShaderModule-kXHBb9ct.js";import"./utils-Cwo5sUy1.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-VGyWL_50.js";import"./heatmapTextureUtils-C_U0JpQW.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-JTbwbwzY.js";import"./libtess-huny4jw6.js";import"./AttributeStore-DHf4j7Tv.js";import"./queryUtils-KJi8X4BK.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BuGDNGmR.js";import"./normalizeUtilsSync-DFxj3Ye1.js";import"./BitmapTechnique-DwskDS8b.js";import"./bitmapUtils-DVu1EfbM.js";import"./TileContainer-DdSs2lwI.js";import"./AGraphicContainer-BnFppQWV.js";import"./TechniqueInstance-CIRzOJJU.js";import"./floorFilterUtils-MtPgm5NF.js";import"./sublayerUtils-D7vQ9ssr.js";import"./popupUtils-DN9oIyBS.js";const A=[0,0];let l=class extends L(P(Q(G))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){var t;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),(t=this._highlightView)==null||t.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,t==null?void 0:t.effectiveMinLOD,t==null?void 0:t.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(i,h)=>this.fetchTile(i,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),F(this,this.layer)){const i=this._highlightView=new b({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new W({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>i.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){var e,t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(e=this._popupHighlightHelper)==null||e.destroy(),(t=this._highlightView)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e,t){const i=k(e);if(i.length===0)return u();const h=(t==null?void 0:t.name)??H;return this._addHighlightGraphics(i,h),u((()=>!this.destroyed&&this._removeHighlightGraphics(i,h)))}_processHighlight(){var t;const e=this._getHighlights();(t=this._highlightView)==null||t.setHighlight(e)}_addHighlightGraphics(e,t){this._highlightGraphics.addMany(e),this._addHighlights(e.map((i=>i.uid)),t)}_removeHighlightGraphics(e,t){this._highlightGraphics.removeMany(e),this._removeHighlights(e.map((i=>i.uid)),t)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return v((t=this.layer.tileInfo)==null?void 0:t.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e))))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(A,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t={}){return this.tilemapCache?this._fetchTileWithTilemapCache(e,t):this._fetchTileWithoutTilemapCache(e,t)}async _fetchTileWithoutTilemapCache(e,t={}){const{signal:i,resamplingLevel:h=0}=t;try{return await this._fetchImage(e,i)}catch(s){if(n(s))throw s;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(e.id);if(r){const a=new f(r),o=await this._fetchTileWithoutTilemapCache(a,{...t,resamplingLevel:h+1});return _(this._tileInfoView,o,a,e)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(e,t={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=t,r=new f(0,0,0,0);let a,o=null;try{if(o=await i.fetchAvailabilityUpsample(e.level,e.row,e.col,r,{signal:h}),!this.resampling&&r.level!==e.level)return await C(t),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&o==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(e.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...t,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,e):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){n(t)||q.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([U("esri.views.2d.layers.TileLayerView2D")],l);const We=l;export{We as default};
