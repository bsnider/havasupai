import{r as o,m as f,d as m,bW as l,eO as c}from"./index-BdmtnMtL.js";import{R as x}from"./WhereClause-C4Vwr7Gy.js";import{K as g,k as y}from"./I3SUtil-FaJMuQYV.js";import{l as D}from"./timeSupport-Bwa76QPn.js";import{i as F}from"./timeSupport-LzrBd8D8.js";import{C as w}from"./I3SBinaryReader-aq1cfJyF.js";const A="updating";function N(n){return n==="updating"?null:n}function S(n){return n==="updating"}const k=n=>{let r=class extends n{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=e=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&l.getLogger(this).error("Error while evaluating definitionExpression: "+e),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&l.getLogger(this).error("Further errors are ignored")}}get parsedDefinitionExpression(){var e;if(!((e=this.i3slayer)!=null&&e.definitionExpression))return null;try{const t=x.create(this.i3slayer.definitionExpression,{fieldsIndex:this.i3slayer.fieldsIndex});if(!t.isStandardized)return l.getLogger(this).error("definitionExpression is using non standard function"),null;const i=[],s=t.fieldNames;return g(s,this.i3slayer.fieldsIndex,{missingFields:i}),i.length>0?(l.getLogger(this).error(`definitionExpression references unknown fields: ${i.join(", ")}`),null):(this._definitionExpressionErrors=0,t)}catch(t){return l.getLogger(this).error("Failed to parse definitionExpression: "+t),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:[]}_evaluateClause(e,t){if(e==null)return!0;try{return e.testFeature(t)}catch(i){return this.logError(i),!1}}_addDefinitionExpressionToQuery(e){if(!this.parsedDefinitionExpression)return e;const t=this.i3slayer.definitionExpression,i=e.clone();return i.where?i.where=`(${t}) AND (${i.where})`:i.where=t,i}};return o([f({readOnly:!0})],r.prototype,"parsedDefinitionExpression",null),o([f({readOnly:!0})],r.prototype,"definitionExpressionFields",null),r=o([m("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],r),r},C=n=>{let r=class extends n{get timeExtent(){var e;return F(this.i3slayer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}get mergedFilter(){var s;const{filter:e,timeExtent:t}=this;if(t==null)return e;const i=(e==null?void 0:e.clone())??new c;return t!=null&&(i.timeExtent=((s=i.timeExtent)==null?void 0:s.intersection(t))??t),i}getTimeFilterDependencies(){const{timeInfo:e}=this.i3slayer;if(e==null)return[];const{startField:t,endField:i}=e;return[t,i]}addTimeFilter(e,t){if(t==null)return;const{timeInfo:i}=this.i3slayer;if(i==null)return;const{startField:s,endField:u,useTime:a}=i;if(!a||s==null&&u==null)return;const p=i.toJSON(),d=t.toJSON();e.push(((h,E)=>_(h,E,p,d)))}};return o([f({readOnly:!0})],r.prototype,"timeExtent",null),o([f()],r.prototype,"mergedFilter",null),r=o([m("esri.views.3d.layers.support.TemporalSceneLayerView")],r),r};function _(n,r,e,t){var d;const i=(d=r.attributeInfo)==null?void 0:d.attributeData;if(i==null)return;const{startTimeField:s,endTimeField:u}=e;if(s!=null&&i[s]==null||u!=null&&i[u]==null)return;const a=D(e,t,new b(i));if(a==null)return;const{featureIds:p}=r;y(n,p,a)}class b{constructor(r){this.attributeData=r}getAttribute(r,e){return w(this.attributeData[e],r)}getAttributeAsTimestamp(r,e){const t=this.getAttribute(r,e);return typeof t=="string"?new Date(t).getTime():typeof t=="number"||t==null?t:null}}export{N as a,S as b,A as n,k as t,C as u};
