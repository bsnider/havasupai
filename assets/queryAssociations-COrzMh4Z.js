import{l as y,r as a,m,d,v as f,y as g,x as v,H as w,lj as j,bH as S,ck as $}from"./index-Ds3x37R4.js";import{d as I}from"./Association-D5EgcOwa.js";let o=class extends y{constructor(e){super(e),this.associations=[]}};a([m({type:[I],json:{write:!0}})],o.prototype,"associations",void 0),o=a([d("esri.rest.networks.support.QueryAssociationsResult")],o);function J(s){const{returnDeletes:e,elements:r,gdbVersion:n,moment:i}=s.toJSON();return{returnDeletes:e,elements:JSON.stringify(r.map((t=>({globalId:t.globalId,networkSourceId:t.networkSourceId,terminalId:t.terminalId})))),types:JSON.stringify(s.types.map((t=>$.toJSON(t)))).replaceAll('"connectivity"','"junctionJunctionConnectivity"'),gdbVersion:n,moment:i??Date.now()}}async function N(s,e,r){const n=f(s),i={...J(e),f:"json"},t=g({...n.query,...i}),c=v(t,{...r,method:"post"}),u=`${n.path}/associations/query`,{data:p}=await w(u,c),l=o.fromJSON(p);return e.types.includes("connectivity")&&j(S.getLogger("esri/rest/networks/support/QueryAssociationsParameters"),"types",{replacement:"Please use 'junction-junction-connectivity' instead of 'connectivity'.",see:"https://arcg.is/11Tr8a#types",version:"4.29",warnOnce:!0}),l}export{N as queryAssociations};
