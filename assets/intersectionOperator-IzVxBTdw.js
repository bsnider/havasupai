import{dD as p}from"./index-DtL3GvY-.js";import{o as c,u as f}from"./operatorIntersection-DLpcOAV3.js";import{fromGeometry as n,toGeometry as m,fromGeometryToGXGeometry as i,fromGeometries as s}from"./jsonConverter-CCE0HW-0.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-BUVSeX7E.js";import"./ProjectionTransformation-oWBTjYTq.js";import"./Envelope2D-zGBO_y2e.js";import"./Transformation2D-DNNU7gV_.js";import"./OperatorDefinitions-DP7_WWTp.js";function D(t,r){const o=n(t),e=o.getSpatialReference();return m(c(o.getGeometry(),i(r),e),e)}function L(t,r){const[o,e]=s(t);return f(o,i(r),e,7).map((a=>m(a,e))).filter(p)}export{D as execute,L as executeMany};
