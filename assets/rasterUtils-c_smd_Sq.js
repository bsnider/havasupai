import{eQ as g,cy as T,cv as _,cw as f,eR as A,S as h,cx as p,eS as E}from"./index-DXVHLZmj.js";function G(e,n,t="nearest",a=!1){const u=!(a&&n.pixelType==="u8"),o=u?_.FLOAT:_.UNSIGNED_BYTE,l=n.pixels==null||n.pixels.length===0?null:u?n.getAsRGBAFloat():n.getAsRGBA(),c=e.capabilities.textureFloatLinear,i=new g;return i.width=n.width,i.height=n.height,i.internalFormat=u?T.RGBA32F:p.RGBA,i.samplingMode=!c||t!=="bilinear"&&t!=="cubic"?f.NEAREST:f.LINEAR,i.dataType=o,i.wrapMode=A.CLAMP_TO_EDGE,new h(e,i,l)}function O(e,n){const{spacing:t,offsets:a,coefficients:u,size:[o,l]}=n,c=t[0]>1,i=new g;i.width=c?4*o:o,i.height=l,i.internalFormat=T.RGBA32F,i.dataType=_.FLOAT,i.samplingMode=f.NEAREST,i.wrapMode=A.CLAMP_TO_EDGE;const m=new Float32Array(c?o*l*16:2*a.length);if(c&&u!=null)for(let r=0,s=0;r<u.length;r++)m[s++]=u[r],r%3==2&&(m[s++]=1);else for(let r=0;r<l;r++)for(let s=0;s<o;s++){const d=4*(r*o+s),w=2*(s*l+r);m[d]=a[w],m[d+1]=a[w+1],m[d+3]=a[w]===-1?0:1}return new h(e,i,m)}function M(e,n){const t=new g;return t.internalFormat=p.RGBA,t.width=n.length/4,t.height=1,t.samplingMode=f.NEAREST,t.wrapMode=A.CLAMP_TO_EDGE,new h(e,t,n)}function S(e,n,t){const a=new g;return a.internalFormat=p.ALPHA,a.pixelFormat=p.ALPHA,a.dataType=_.UNSIGNED_BYTE,a.width=t[0],a.height=t[1],a.samplingMode=f.NEAREST,a.wrapMode=A.CLAMP_TO_EDGE,new h(e,a,n)}function C(e,n,t,a=1,u=!0){return{u_flipY:u,u_applyTransform:!!e,u_opacity:a,u_transformSpacing:e?e.spacing:E,u_transformGridSize:e?e.size:E,u_targetImageSize:n,u_srcImageSize:t}}function F(e,n){return{u_colormapOffset:n||0,u_colormapMaxIndex:e?e.length/4-1:0}}function R(e){return{u_bandCount:e.bandCount,u_minOutput:e.minOutput,u_maxOutput:e.maxOutput,u_minCutOff:e.minCutOff,u_maxCutOff:e.maxCutOff,u_factor:e.factor,u_useGamma:e.useGamma,u_gamma:e.gamma,u_gammaCorrection:e.gammaCorrection}}function L(e){return{u_hillshadeType:e.hillshadeType,u_sinZcosAs:e.sinZcosAs,u_sinZsinAs:e.sinZsinAs,u_cosZs:e.cosZs,u_weights:e.weights,u_factor:e.factor,u_minValue:e.minValue,u_maxValue:e.maxValue}}export{R as _,S as c,C as f,L as g,M as l,O as m,F as p,G as s};
