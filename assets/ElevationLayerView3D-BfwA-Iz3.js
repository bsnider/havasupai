const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/containsOperator-BvsMQ54_.js","assets/ProjectionTransformation-BVrUE7Ks.js","assets/Envelope2D-zGBO_y2e.js","assets/Point2D-BUVSeX7E.js","assets/Transformation2D-DNNU7gV_.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-Ds3x37R4.js","assets/index-Bq0sc0Rv.css","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-CGQ8gE7F.js","assets/apiConverter-nC8nXvrF.js","assets/intersectsOperator-CaV5FwRm.js","assets/OperatorIntersects-5s2Yl965.js","assets/intersectionOperator-CPCrZ9Au.js","assets/operatorIntersection-Bw-9qLyS.js","assets/simplifyOperator-CXvC30NZ.js","assets/operatorSimplify-gxeXczTm.js"])))=>i.map(i=>d[i]);
import{_ as P,d4 as I,fE as C,z as M,L as z,K as G,d3 as S,lp as b,bH as L,r as x,m as R,d as j}from"./index-Ds3x37R4.js";import{s as F,a as U}from"./LercDecoder-BYPF9LAO.js";import{l as k}from"./LayerView3D-CXCqTGin.js";import{p as H}from"./TiledLayerView3D-B4dvI3hF.js";import{u as K}from"./LayerView-B2e2cy0J.js";class Z{constructor(){this.modifications=[]}async apply(o,t,e){if(this.modifications.length!==0&&(V??(V=Promise.all([P(()=>import("./containsOperator-BvsMQ54_.js").then(i=>i.c),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10])),P(()=>import("./intersectsOperator-CaV5FwRm.js").then(i=>i.i),__vite__mapDeps([11,1,2,3,4,5,6,7,8,9,12,10])),P(()=>import("./intersectionOperator-CPCrZ9Au.js").then(i=>i.i),__vite__mapDeps([13,6,7,3,1,2,4,5,8,9,14,10]))])),O=await V,!I(e)))for(const i of this.modifications)i.apply(o,t)}}class B{constructor(o,t){this.type=o,this.polygon=t}apply(o,t){if(this.type!=="replace")return;const{polygon:e}=this,[i,a,l]=O,{extent:h,spatialReference:y}=t,_=C(h,y);if(a.accelerateGeometry(e),!a.execute(e,_))return;i.accelerateGeometry(e),l.accelerateGeometry(e);const{width:n,height:d,values:m}=o,g=e.hasZ?e.rings.reduce(((r,p)=>p.reduce(((c,u)=>Math.min(c,u[2]??1/0)),r)),1/0):1/0,f=g===1/0?0:g;if(i.execute(e,_))m.fill(f);else{const r=J(t,e,[n,d]);if(!r||r.rings.every((c=>c.length===0)))return;const p=N(t,r,n,d);for(let c=d-1;c>=0;--c)for(let u=0;u<n;++u){const $=(c+1)*(n+2)+(u+1);let w=0;for(let E=-1;E<=1;++E){const q=$+E*(n+2);for(let T=-1;T<=1;++T)w=Math.max(w,p[q+T])}const D=c*n+u;m[D]=w===0?m[D]:f}}}}let V,O;function J(s,o,t){const[e,i,a,l]=s.extent,{spatialReference:h}=s,[y,_]=t,n=2,d=(a-e)/(y-1),m=(l-i)/(_-1),g=new M({xmin:e-n*d,ymin:i-n*m,xmax:a+n*d,ymax:l+n*m,spatialReference:h}),f=O[2].execute(o,g);return(f==null?void 0:f.type)==="polygon"?f:null}function N(s,o,t,e){const i=new OffscreenCanvas(t+2,e+2).getContext("2d",{willReadFrequently:!0});if(!i)throw new Error("failed to create canvas");const[a,l,h,y]=s.extent,_=h-a,n=y-l;i.fillStyle="black",i.clearRect(0,0,t,e);const d=new Path2D;for(const r of o.rings)if(r.length>0){const p=new Path2D;let c=!0;for(const[u,$]of r){const w=(u-a)/_*(t-1)+1+A,D=(y-$)/n*(e-1)+1+A;c?(c=!1,p.moveTo(w,D)):p.lineTo(w,D)}p.closePath(),d.addPath(p)}i.fillStyle="white",i.fill(d,"evenodd");const m=i.getImageData(0,0,t+2,e+2),g=(t+2)*(e+2),f=new Uint8Array(g);for(let r=0;r<g;++r)f[r]=m.data[4*r+0]>0?1:0;return f}const A=.5;let v=class extends H(k(K)){constructor(){super(...arguments),this.type="elevation-3d",this.modifications=new Z}get tileInfo(){return this.layer.tileInfo}initialize(){var a,l,h;const s=this.view,o=(a=s.map)==null?void 0:a.allLayers,t=o&&o.includes(this.layer),e=(h=(l=s.map)==null?void 0:l.ground)==null?void 0:h.layers,i=e&&e.includes(this.layer);if(t&&!i){const y=new z("layerview:elevation-layer-only",`3D elevation layer '${this.layer.id}' can only be added to layers in map.ground`);this.addResolvingPromise(Promise.reject(y))}this._lercDecoder=F(s.resourceController),this._addTilingSchemeMatchPromise()}destroy(){this._lercDecoder=G(this._lercDecoder)}async fetchElevationTile(s,o){const t=await this._fetchTileData(s.lij,o);if(!I(o))return t&&await this.modifications.apply(t,s,o.signal),t}async _fetchTileData(s,o){const t=this.layer;if(S(t)){const l=await t.fetchTile(s[0],s[1],s[2],{noDataValue:b,signal:o.signal});return I(o)?void L.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true."):l}const e=this.getTileUrl(s),i=await o.requester.request(e,"binary",o),a=await this._lercDecoder.decode(i,{noDataValue:b},o.signal);if(a)return new U(a);throw new Error("LERC decoding failed")}async setModifications(s){if(this.modifications.modifications.length=0,!s||s.length===0)return;this._simplifyOperatorPromise??(this._simplifyOperatorPromise=P(()=>import("./simplifyOperator-CXvC30NZ.js").then(t=>t.s),__vite__mapDeps([15,3,1,2,4,5,6,7,8,9,16,10])));const o=await this._simplifyOperatorPromise;for(const t of s){const e=t.geometry;if((e==null?void 0:e.type)==="polygon"){const i=o.execute(e);if((i==null?void 0:i.type)==="polygon"){const a=new B(t.type,i);this.modifications.modifications.push(a)}else L.getLogger(this).warn("Failed to simplify modification polygon")}else L.getLogger(this).warn("Invalid modification added to elevation layer: "+(e?`non polygon geometry ${e.type}`:"no geometry"))}}};x([R()],v.prototype,"layer",void 0),x([R()],v.prototype,"tileInfo",null),x([R()],v.prototype,"modifications",void 0),v=x([j("esri.views.3d.layers.ElevationLayerView3D")],v);const te=v;export{te as default};
