import{r as t,m as s,j$ as j,d as u,Q as y,cB as h,a1 as w,a3 as O,a2 as S,a4 as g}from"./index-DXVHLZmj.js";import{t as x}from"./utils-DTbkSr7n.js";import"./applyEditsUtils-BBzxtI4G.js";import"./MeshTransform-DzRlq1Pf.js";import"./editingSupport-DPQ0KF-S.js";let o=class extends y{constructor(i){super(i),this.error=null,this.geometry=null,this.name=null}};t([s({type:Object})],o.prototype,"error",void 0),t([s({type:j})],o.prototype,"geometry",void 0),t([s({type:String})],o.prototype,"name",void 0),o=t([u("esri.rest.networks.circuits.support.CircuitVerifyResult")],o);const a=o;let r=class extends y{constructor(e){super(e),this.circuits=[],this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,c){return x(e)}};t([s({type:[a],json:{type:[a],write:!0}})],r.prototype,"circuits",void 0),t([s({type:Date,json:{type:Number,write:{writer:(i,e)=>{e.moment=i?i.getTime():null}}}})],r.prototype,"moment",void 0),t([s({type:Boolean,json:{type:Boolean,write:!0}})],r.prototype,"exceededTransferLimit",void 0),t([s({type:[Object],json:{type:[Object],write:!0}})],r.prototype,"serviceEdits",void 0),t([h("serviceEdits")],r.prototype,"readServiceEdits",null),r=t([u("esri.rest.networks.circuits.support.VerifyCircuitsResult")],r);async function J(i,e,c){const p=w(i),n=e.toJSON();e.circuits&&(n.circuits=JSON.stringify(e.circuits));const m={...n,f:"json"},l=O({...p.query,...m}),d=S(l,{...c,method:"post"}),f=`${p.path}/circuits/verify`,{data:v}=await g(f,d);return r.fromJSON(v)}export{J as verifyCircuits};
