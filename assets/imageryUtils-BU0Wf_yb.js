import{P as o,$ as c}from"./utils-qf3RWmx_.js";import{a as p}from"./rasterFieldUtils-64y26Z6E.js";import{gA as g,gE as u,gD as i,gC as v}from"./index-BdmtnMtL.js";const y="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",T="imagery-tile-layer-save",I="imagery-tile-layer-save-as",l="WCS",w="wcs-layer-save",x="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:a}=e,r=p(a)[0];return{isValid:(r==null?void 0:r.datasetFormat)==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(e){const a=e.layerJSON;return Promise.resolve(a&&Object.keys(a).length?a:null)}async function A(e,a){const{parsedUrl:r,title:t,fullExtent:s}=e;a.url=r.path,a.title||(a.title=t);try{a.extent=await g(s)}catch{a.extent=void 0}u(a,i.METADATA),v(a,i.TILED_IMAGERY,e.type==="imagery-tile")}async function $(e,a){const r=e.type==="imagery"?f:e.type==="imagery-tile"?T:w,t=e.type==="wcs"?l:y;return o({layer:e,itemType:t,validateLayer:m,createItemData:n,errorNamePrefix:r},a)}async function h(e,a,r){const t=e.type==="imagery"?d:e.type==="imagery-tile"?I:x,s=e.type==="wcs"?l:y;return c({layer:e,itemType:s,validateLayer:m,createItemData:n,errorNamePrefix:t,newItem:a,setItemProperties:A},r)}export{$ as save,h as saveAs};
