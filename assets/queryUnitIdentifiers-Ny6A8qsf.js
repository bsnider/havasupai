import{l as y,r,m as i,T as u,d as g,v as m,y as b,x as j,H as U}from"./index-Ds3x37R4.js";let s=class extends y{constructor(n){super(n),this.container=null,this.ranges=null}readContainer(n,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(n,e){return[...e.gaps.map((t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0}))),...e.unitIdentifiers.map((t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}})))]}};r([i({type:Object})],s.prototype,"container",void 0),r([u("container",["sourceId","globalId"])],s.prototype,"readContainer",null),r([i({type:[Object]})],s.prototype,"ranges",void 0),r([u("ranges",["gaps","unitIdentifiers"])],s.prototype,"readRanges",null),s=r([g("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],s);async function h(n,e,t){const o=m(n),a=e.toJSON();e.objects&&(a.objects=JSON.stringify(e.objects));const d={...a,f:"json"},p=b({...o.query,...d}),l=j(p,{...t,method:"post"}),c=`${o.path}/unitIdentifiers/query`,{data:f}=await U(c,l);return f.objects.map((I=>s.fromJSON(I)))}export{h as queryUnitIdentifiers};
