import{p as D,lY as O,lZ as P,O as x,az as q,aQ as E,l_ as G,l$ as H,m0 as A,m1 as B,aH as J,cD as N}from"./index-Ds3x37R4.js";async function U(t,d,l,p,o){const{elevationProvider:f,renderCoordsHelper:i}=t,{elevationInfo:u}=d,{pointsInFeatures:b,spatialReference:g}=p,h=D.fromJSON(g),y=O(u,!0),I=await P(y,h,o);x(o);const c=[],e=new Set,s=new Set,a=new E,n=q(0,0,0,D.WGS84),r=new B,S=J();n.spatialReference=h;const z=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:w,points:v}of b){const m=l(w);if(m==null){for(const R of v)c.push(R.z??0);e.add(w);continue}m.isDraped&&s.add(w);const j=m.graphic.geometry;a.setFromElevationInfo(G(j,u)),a.updateFeatureExpressionInfoContext(I,m.graphic,d);for(const{x:R,y:C,z:F}of v)n.x=R,n.y=C,n.z=F??0,await H(n,S,z,0,{signal:o}),A(S,f,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function W(t,d,l){if(t==null||d.candidates.length===0)return $;const p=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],f=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?N():null,b=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(s,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,h,r,l)},{candidates:g,spatialReference:h}=d;for(let e=0;e<g.length;++e){const s=g[e],{objectId:a}=s,n=typeof a=="number"?p==null?void 0:p.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(b(s,n)),f.push(e))}if(o.length===0)return $;const y=await Promise.all(o);x(l);const I=[],c=[];for(let e=0;e<y.length;++e){const s=y[e],a=f[e];for(const n of s)I.push(n),c.push(a)}return{candidates:I,sourceCandidateIndices:c}}const $={candidates:[],sourceCandidateIndices:[]};export{U as l,W as r};
