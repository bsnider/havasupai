const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Ds3x37R4.js","assets/index-Bq0sc0Rv.css"])))=>i.map(i=>d[i]);
import{F as f,G as m,I as w,J as T,K as g,L as S,M as _,H as n,N as b,_ as d,O as c,Q as I,r as s,m as o,T as h,U as $,V as O,d as E}from"./index-Ds3x37R4.js";import{p as L}from"./ArcGISCachedService-DXfWN_ew.js";import{s as D,a as j}from"./LercDecoder-BYPF9LAO.js";import"./TileInfoTilemapCache-Bwt0JI2i.js";import"./TilemapCache-CFOMssXp.js";let a=class extends L(f(m(w(T(I))))){constructor(...t){super(...t),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=D()}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}destroy(){this._lercDecoder=g(this._lercDecoder)}readCapabilities(t,i){const e=i.capabilities&&i.capabilities.split(",").map((r=>r.toLowerCase().trim()));return e?{operations:{supportsTileMap:e.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(t,i){let e=i.currentVersion;return e||(e=9.3),e}load(t){const i=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{if(e.typeKeywords){for(let r=0;r<e.typeKeywords.length;r++)if(e.typeKeywords[r].toLowerCase()==="elevation 3d layer")return!0}throw new S("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},t).catch(_).then((()=>this._fetchImageService(i)))),Promise.resolve(this)}fetchTile(t,i,e,r){const l=r==null?void 0:r.signal,y={responseType:"array-buffer",signal:l},v={noDataValue:r==null?void 0:r.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(t,i,e,r))).then((()=>n(this.getTileUrl(t,i,e),y))).then((p=>this._lercDecoder.decode(p.data,v,l))).then((p=>new j(p)))}getTileUrl(t,i,e){const r=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,l=b({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${t}/${i}/${e}${l?"?"+l:""}`}async queryElevation(t,i){const{ElevationQuery:e}=await d(()=>import("./index-Ds3x37R4.js").then(r=>r.Jq),__vite__mapDeps([0,1]));return c(i),new e().query(this,t,i)}async createElevationSampler(t,i){const{ElevationQuery:e}=await d(()=>import("./index-Ds3x37R4.js").then(r=>r.Jq),__vite__mapDeps([0,1]));return c(i),new e().createSampler(this,t,i)}_fetchTileAvailability(t,i,e,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(t,i,e,r):Promise.resolve("unknown")}async _fetchImageService(t){var r;if(this.sourceJSON)return this.sourceJSON;const i={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:t},e=await n(this.parsedUrl.path,i);e.ssl&&(this.url=(r=this.url)==null?void 0:r.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[u]}};s([o({readOnly:!0})],a.prototype,"capabilities",void 0),s([h("service","capabilities",["capabilities"])],a.prototype,"readCapabilities",null),s([o({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),s([o({readOnly:!0,type:$})],a.prototype,"heightModelInfo",void 0),s([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([o({type:["show","hide"]})],a.prototype,"listMode",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),s([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),s([o({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),s([o()],a.prototype,"sourceJSON",void 0),s([o({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),s([o(O)],a.prototype,"url",void 0),s([o()],a.prototype,"version",void 0),s([h("version",["currentVersion"])],a.prototype,"readVersion",null),a=s([E("esri.layers.ElevationLayer")],a);const u=Symbol("default-fetch-tile");a.prototype.fetchTile[u]=!0;const U=a;export{U as default};
