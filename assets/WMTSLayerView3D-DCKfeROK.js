import{cX as d,es as f,a3 as m,bH as n,r as l,m as a,d as u}from"./index-Ds3x37R4.js";import{l as c}from"./LayerView3D-CXCqTGin.js";import{p}from"./TiledLayerView3D-B4dvI3hF.js";import{i as g}from"./fetchTile-CgJHy7mI.js";import{u as y}from"./LayerView-B2e2cy0J.js";import{i as I}from"./RefreshableLayerView-Bz7uUOz8.js";let r=class extends I(p(c(y))){constructor(){super(...arguments),this.type="wmts-3d"}initialize(){this._getCompatibleTileInfoMatrixSet((t=>this._getTileInfoSupportError(t.tileInfo,t.fullExtent)));const e=d((()=>{var t,i;return(i=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:i.tilingSchemeLocked})).then((()=>{const t=this._getCompatibleTileInfoMatrixSet((i=>this._getTileInfoError(i.tileInfo,i.fullExtent)));t!=null&&(t.id!==null&&this.layer.activeLayer.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),t.tileInfo&&(this.tileInfo=t.tileInfo),this.layer.fullExtent=t.fullExtent)}));this.addResolvingPromise(e),this.when((()=>this._postInitialize()))}refresh(){this.emit("data-changed")}canResume(){if(!super.canResume())return!1;const e=this.layer.activeLayer.tileMatrixSet;return e!=null&&!this._getTileInfoError(e.tileInfo,e.fullExtent)}async fetchTile(e,t){return g(this,e,t)}async doRefresh(){this.suspended||this.emit("data-changed")}_postInitialize(){this._updatingHandles.add((()=>{var e,t;return(t=(e=this.layer)==null?void 0:e.activeLayer)==null?void 0:t.styleId}),(()=>this.refresh())),this._updatingHandles.add((()=>{var e;return(e=this.layer)==null?void 0:e.activeLayer}),(e=>{const t=this._getCompatibleTileInfoMatrixSet((i=>this._getTileInfoError(i.tileInfo,i.fullExtent)),!0);t&&t.id!=null&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()}))}_getCompatibleTileInfoMatrixSet(e,t=!1){const i=f(this.layer);if(i!=null){if(m.isCollection(i))return i.find((h=>{const s=e(h);return s!=null&&(t?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",s):this.addResolvingPromise(Promise.reject(s))),s==null}));const o=e(i);return o!=null&&(t?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",o):this.addResolvingPromise(Promise.reject(o))),i}return null}_getTileInfoError(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)}};l([a()],r.prototype,"layer",void 0),l([a()],r.prototype,"suspended",void 0),l([a()],r.prototype,"tileInfo",void 0),r=l([u("esri.views.3d.layers.WMTSLayerView3D")],r);const w=r;export{w as default};
