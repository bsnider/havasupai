import{r as i,pu as j,pv as E,pw as Q,u as Y,l9 as Z,l8 as B,l6 as G,k$ as J,bi as V,oA as tt,oB as et,m6 as st,oC as ot,bX as it,oD as rt,oE as at,oF as nt,bZ as pt,px as dt,py as L}from"./index-Ds3x37R4.js";import{n as lt}from"./WGLContainer-TrZCBzw7.js";import{o as ht}from"./FeatureCommandQueue-IYLbFcQN.js";import{t as U}from"./utils-ehcGqGxa.js";import{j as ut,_ as P,y as ct,X as ft,c as x,e as vt,d as mt,w as yt,f as q,g as n,r as wt,U as xt,m as W,i as gt,P as F,v as _t,t as Mt}from"./GraphShaderModule-BAPxSWsA.js";import{e as $t}from"./TechniqueType-pk2C5RYg.js";class C extends gt{}i([q(0,x)],C.prototype,"pos",void 0),i([q(1,x)],C.prototype,"uv",void 0);class St extends _t{}class N extends F{}i([n(wt)],N.prototype,"dvs",void 0);class m extends F{}i([n(x)],m.prototype,"perspective",void 0),i([n(x)],m.prototype,"texSize",void 0),i([n(P)],m.prototype,"wrapAroundShift",void 0),i([n(P)],m.prototype,"opacity",void 0),i([n(xt)],m.prototype,"texture",void 0);class w extends ut{constructor(){super(...arguments),this.type="OverlayShader"}vertex(e){const t=e.uv.divide(this.config.texSize),s=new P(1).add(ct(t,this.config.perspective)),o=new ft(e.pos.add(new x(this.config.wrapAroundShift,0)),1),r=this.transform.dvs.multiply(o);return{uv:t,glPosition:new vt(r.xy.multiply(s),0,s)}}fragment(e){const t=mt(this.config.texture,e.uv).multiply(this.config.opacity),s=new yt;return s.fragColor=t,s}}i([n(N)],w.prototype,"transform",void 0),i([n(m)],w.prototype,"config",void 0),i([j(0,W(C))],w.prototype,"vertex",null),i([j(0,W(St))],w.prototype,"fragment",null);class bt extends Mt{constructor(){super(...arguments),this.type=$t.Overlay,this._mesh=null,this.shaders={overlay:new w}}render(e,t){const{context:s,painter:o}=e,r=this._getMesh(e,t);o.setPipelineState(U);const{isWrapAround:p,wrapAroundShift:u}=t.config,c={...t.config,wrapAroundShift:0},f={shader:this.shaders.overlay,uniforms:{transform:t.transform,config:c},defines:null,optionalAttributes:null,useComputeBuffer:!1};o.setPipelineState({...U,stencil:{write:!1,test:{compare:Q.EQUAL,op:{fail:E.KEEP,zFail:E.KEEP,zPass:E.REPLACE},ref:0,mask:255}}}),o.submitDrawMeshUntyped(s,f,r),p&&(c.wrapAroundShift=u,o.submitDrawMeshUntyped(s,f,r))}shutdown(){Y(this._mesh)}_getMesh(e,t){const{context:s}=e;if(this._mesh){const o=this._mesh.vertexBuffers.get("positions");if(!o)throw new Error("Buffer not found");o.buffer.setData(t.position)}else{const o=t.index!=null?t.index.length:t.position.length/2;this._mesh=new ht(s,{vertex:{positions:{data:t.position,attributes:[new B("pos",2,G.FLOAT,0,8)]},uvs:{data:t.tex,attributes:[new B("uv",2,G.UNSIGNED_SHORT,0,4)]}},index:t.index!=null?{index:{data:t.index}}:void 0,groups:[{index:t.index!=null?"index":void 0,primitive:Z.TRIANGLE_STRIP}],parts:[{group:0,start:0,count:o}]})}return this._mesh}}class Dt extends lt{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=J(),this._overlayTechnique=new bt}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}doRender(e){if(e.drawPhase!==V.MAP||!this.visible)return;super.doRender(e);const t=this._overlayTechnique;for(const s of this.children)s.draw(e,t)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(e){const{state:t}=e,{id:s,size:o,pixelRatio:r,resolution:p,rotation:u,viewpoint:c,displayMat3:f}=t;if(this._viewStateId===s)return;const g=L(u),d=r*o[0],v=r*o[1];this._localOrigin=c.targetGeometry.clone();const{x:y,y:$}=this._localOrigin,_=tt(y,t.spatialReference);this._localOrigin.x=_,this._localOrigin.y=$;const S=p*d,b=p*v,a=et(this._dvsMat3);st(a,a,f),ot(a,a,it(d/2,v/2)),rt(a,a,at(d/S,-v/b,1)),nt(a,a,-g),this._viewStateId=s}_updateOverlays(e,t){const{state:s}=e,{rotation:o,spatialReference:r,worldScreenWidth:p,size:u,viewpoint:c}=s,f=this._localOrigin;let g,d=0;const v=pt(r);if(v&&r.isWrappable){const y=u[0],$=u[1],_=L(o),S=Math.abs(Math.cos(_)),b=Math.abs(Math.sin(_)),a=Math.round(y*S+$*b),[D,T]=v.valid,l=dt(r),{x:z,y:k}=c.targetGeometry,K=[z,k],O=[0,0];s.toScreen(O,K);const M=[0,0];let R;R=a>p?.5*p:.5*a;const I=Math.floor((z+.5*l)/l),X=D+I*l,H=T+I*l,A=[O[0]+R,0];s.toMap(M,A),M[0]>H&&(d=l),A[0]=O[0]-R,s.toMap(M,A),M[0]<X&&(d=-l),g={worldWidth:l,xBounds:[D,T]}}for(const y of t)y.updateDrawCoords(f,d,s,g)}}export{Dt as u};
