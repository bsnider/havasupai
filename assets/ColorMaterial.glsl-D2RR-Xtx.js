import{vm as A,Eq as C,Er as P,FF as $,FG as y,Eu as I,Et as b,Ev as S,Es as F,aM as p,Fz as D,Ex as _,Ey as w,EB as R,EC as N,_ as M,ED as L,EE as x,EF as V,EG as q,EH as U,EI as j,EJ as B,Fd as H,EL as W,EM as z,EN as G,FA as Q,EK as J,EQ as g,ER as K,mo as v,rO as Y,ES as k,r as a,ET as i,pF as l,FH as f,Ff as O,FI as X,EW as Z,rU as ee,tD as te,df as se,E_ as re,FJ as ae,FK as ie,oq as oe,EY as ne}from"./index-Ds3x37R4.js";import{r as le}from"./TriangleMaterial-K3vSxC87.js";function E(s){const e=new A,{vertex:t,fragment:o,attributes:n,varyings:u}=e,{vvColor:h,hasVertexColors:c}=s;return C(t,s),e.include(P,s),e.include($,s),e.include(y,s),e.include(I,s),o.include(b,s),e.include(S,s),e.include(F,s),n.add(p.POSITION,"vec3"),h&&n.add(p.COLORFEATUREATTRIBUTE,"float"),c||u.add("vColor","vec4"),u.add("vpos","vec3",{invariant:!0}),t.uniforms.add(new D("uColor",(d=>d.color))),t.main.add(_`
      vpos = position;
      forwardNormalizedVertexColor();
      forwardObjectAndLayerIdColor();

      ${c?"vColor *= uColor;":h?"vColor = uColor * interpolateVVColor(colorFeatureAttribute);":"vColor = uColor;"}
      forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);
      gl_Position = transformPosition(proj, view, vpos);`),o.include(w),o.main.add(_`discardBySlice(vpos);
discardByTerrainDepth();
outputColorHighlightOID(vColor, vpos, vColor.rgb);`),e}const pe=Object.freeze(Object.defineProperty({__proto__:null,build:E},Symbol.toStringTag,{value:"Module"}));class ue extends R{constructor(e,t){super(e,t,new N(pe,(()=>M(()=>Promise.resolve().then(()=>fe),void 0))))}_createPipeline(e,t){const{oitPass:o,output:n,transparent:u,cullFace:h,draped:c,hasOccludees:d,polygonOffset:T}=e,m=o===L.NONE;return x({blending:g(n)&&u?Q(o):null,culling:G(h),depthTest:c?null:{func:z(o)},depthWrite:W(e),drawBuffers:H(n,J(o,n)),colorWrite:B,stencilWrite:d?j:null,stencilTest:d?t?q:U:null,polygonOffset:m?T?he:null:V(e)})}initializePipeline(e){return this._occludeePipelineState=this._createPipeline(e,!0),this._createPipeline(e,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}const he={factor:1,units:1};class r extends K{constructor(){super(...arguments),this.cullFace=v.None,this.hasVertexColors=!1,this.transparent=!1,this.discardInvisibleFragments=!1,this.polygonOffset=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.objectAndLayerIdColorInstanced=!1,this.vvColor=!1,this.draped=!1,this.textureCoordinateType=Y.None,this.emissionSource=k.None,this.occlusionPass=!1,this.hasVvInstancing=!0,this.vvSize=!1,this.vvOpacity=!1,this.snowCover=!1}}a([i({count:v.COUNT})],r.prototype,"cullFace",void 0),a([i()],r.prototype,"hasVertexColors",void 0),a([i()],r.prototype,"transparent",void 0),a([i()],r.prototype,"discardInvisibleFragments",void 0),a([i()],r.prototype,"polygonOffset",void 0),a([i()],r.prototype,"enableOffset",void 0),a([i()],r.prototype,"writeDepth",void 0),a([i()],r.prototype,"hasOccludees",void 0),a([i()],r.prototype,"terrainDepthTest",void 0),a([i()],r.prototype,"cullAboveTerrain",void 0),a([i()],r.prototype,"objectAndLayerIdColorInstanced",void 0),a([i()],r.prototype,"vvColor",void 0),a([i()],r.prototype,"draped",void 0);class Oe extends le{constructor(e){super(e,de),this._configuration=new r,this.supportsEdges=!0,this.produces=new Map([[l.OPAQUE_MATERIAL,t=>this._isOpaqueMaterialPass(t)],[l.OPAQUE_MATERIAL_WITHOUT_NORMALS,t=>this._isOpaqueNoSSAODepthPass(t)],[l.TRANSPARENT_MATERIAL,t=>f(t)&&this._transparent&&this.parameters.writeDepth],[l.TRANSPARENT_MATERIAL_WITHOUT_NORMALS,t=>O(t)&&this._transparent&&this.parameters.writeDepth],[l.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,t=>f(t)&&this._transparent&&!this.parameters.writeDepth],[l.DRAPED_MATERIAL,t=>X(t)]])}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasVertexColors=this.parameters.hasVertexColors&&!this.parameters.vvColor,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this._transparent,this._configuration.discardInvisibleFragments=this._transparent&&!this._isOpaquePass(e)&&this.parameters.discardInvisibleFragments,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=t.hasOccludees,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<Z,this._configuration.terrainDepthTest=t.terrainDepthTest&&g(e),this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.draped=this.parameters.draped,this._configuration}get visible(){return this.parameters.color[3]>=ee}get _transparent(){return this.parameters.color[3]<1||this.parameters.forceTransparentMode}_isOpaquePass(e){return this._isOpaqueMaterialPass(e)||this._isOpaqueNoSSAODepthPass(e)}_isOpaqueMaterialPass(e){return e===te.Highlight||f(e)&&!this._transparent}_isOpaqueNoSSAODepthPass(e){return O(e)&&this.parameters.writeDepth&&!this._transparent}createGLMaterial(e){return new ce(e)}createBufferWriter(){const e=se().vec3f(p.POSITION);return ae()&&e.vec4u8(p.OLIDCOLOR),this.parameters.vvColor?e.f32(p.COLORFEATUREATTRIBUTE):e.vec4u8(p.COLOR),new re(e)}}class ce extends ne{beginSlot(e){return this.getTechnique(ue,e)}}class de extends ie{constructor(){super(...arguments),this.color=oe,this.forceTransparentMode=!1,this.writeDepth=!0,this.hasVertexColors=!1,this.polygonOffset=!1,this.hasSlicePlane=!1,this.cullFace=v.None,this.draped=!1,this.discardInvisibleFragments=!1}}const fe=Object.freeze(Object.defineProperty({__proto__:null,build:E},Symbol.toStringTag,{value:"Module"}));export{Oe as A};
