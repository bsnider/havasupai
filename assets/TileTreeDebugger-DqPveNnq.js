import{e as M,a9 as P,aa as L,ab as d,ac as S,ad as j,ae as x,af as O,ag as A,ah as k,ai as T,aj as E,r as h,m as u,d as J}from"./index-CxDa6KP7.js";const N=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let r=class extends M{constructor(a){super(a),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._symbols=N.map((l=>new P({color:[l[0],l[1],l[2],.6],outline:{color:"black",width:1}}))),this._enabled=!0}initialize(){this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(a){this._enabled!==a&&(this._enabled=a,this.update())}update(){if(!this._enabled)return void this.clear();const a=e=>{if(e.label!=null)return e.label;let s=e.lij.toString();return e.loadPriority!=null&&(s+=` (${e.loadPriority})`),e.measures&&(s+=`[${e.measures.lodLevel}]`),s},l=this.getTiles(),y=new Array,g=new Set((this._labels.size,this._labels.keys()));l.forEach(((e,s)=>{var w;const t=e.lij.toString();g.delete(t);const z=((w=e.measures)==null?void 0:w.lodLevel)??e.level,p=e.geometry;if(this.enablePolygons&&!this._polygons.has(t)){const o=new L({geometry:p,symbol:this._symbols[z%this._symbols.length]});this._polygons.set(t,o),y.push(o)}if(this.enableLabels){const o=a(e),_=s/(l.length-1),c=S(0,200,_),m=S(20,6,_)/.75,v=e.loadPriority!=null&&e.loadPriority>=l.length,f=new d([c,v?0:c,v?0:c]),$=this.view.type==="3d"?()=>new j({verticalOffset:new A({screenLength:40/.75}),callout:new O({color:new d("white"),border:new T({color:new d("black")})}),symbolLayers:new x([new k({text:o,halo:{color:"white",size:1/.75},material:{color:f},size:m})])}):()=>new E({text:o,haloColor:"white",haloSize:1/.75,color:f,size:m}),n=this._labels.get(t);if(n){const i=$();n.symbol!=null&&JSON.stringify(i)===JSON.stringify(n.symbol)||(n.symbol=i)}else{const i=new L({geometry:p.extent.center,symbol:$()});this._labels.set(t,i),y.push(i)}}}));const b=new Array;g.forEach((e=>{const s=this._polygons.get(e);s!=null&&(b.push(s),this._polygons.delete(e));const t=this._labels.get(e);t!=null&&(b.push(t),this._labels.delete(e))})),this.view.graphics.removeMany(b),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};h([u({constructOnly:!0})],r.prototype,"view",void 0),h([u({readOnly:!0})],r.prototype,"updating",void 0),h([u()],r.prototype,"enabled",null),r=h([J("esri.views.support.TileTreeDebugger")],r);export{r as d};
