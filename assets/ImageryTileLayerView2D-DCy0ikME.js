import{k_ as ns,me as A,ch as Qe,k$ as ze,oB as ls,oC as We,bX as Me,oF as us,s2 as cs,m6 as xt,s1 as _t,r as u,pu as Ue,pv as Ne,pw as hs,R as ps,ep as ds,cj as ms,cg as fs,eq as gs,S as ys,oz as Fe,uM as le,bi as Xe,c7 as vt,px as ws,e as bs,h as xs,dM as _s,gp as mt,z as vs,mg as Cs,gn as Ts,go as Rs,em as Ss,cn as ft,sh as Ps,ay as Is,ad as Pe,bH as Ie,m as S,d as Ee,ca as zs,E3 as Ct,m8 as ks,ae as Be,af as $s,c as Ms}from"./index-Ds3x37R4.js";import{o as gt}from"./multidimensionalUtils-CG741cWU.js";import{f as Fs,d as Bs,h as Vs}from"./RasterVFDisplayObject-V8cY03nn.js";import{S as Ds}from"./LayerView2D-CuuPUfRQ.js";import{r as Os}from"./rasterFieldUtils-Cu8O4Bgc.js";import{z as ye,c as As,H as Gs,S as Us}from"./vectorFieldUtils-BPY8xDNu.js";import{x as qs}from"./clipUtils-CKJLXonj.js";import{m as js,c as Ls,s as Es,l as Ye}from"./rasterUtils-D1894VJZ.js";import{i as Tt}from"./TileContainer-BG7YbpB2.js";import{z as X,Z as J,I as P,M as K,T as lt,Y as W,e as w,d as T,q as B,c as x,N as Ws,O as yt,X as b,k as q,B as Rt,y as L,g as m,U as se,P as I,j as St,w as Pt,V as j,f as It,r as be,_ as d,K as v,$ as ue,m as qe,i as zt,v as kt,n as N,D as Je,p as Ke,Q as D,a0 as Q,A as ee,W as Y,t as ut,a1 as ge,a as $t,E as je,u as O,b as fe,a2 as ie,a3 as Ns,G as re,a4 as Zs,a5 as Hs,a6 as Qs,a7 as Xs,a8 as Ys,a9 as Js,aa as Ks,ab as ei,ac as ti,ad as si,ae as ii,af as ri,s as ai,ag as oi,F as ni,ah as li,ai as ui,aj as ci,ak as hi,al as pi,am as di,an as mi,ao as Ze,ap as fi,C as ct,x as gi,aq as yi,ar as wi,as as bi}from"./GraphShaderModule-BAPxSWsA.js";import{t as z}from"./TechniqueType-pk2C5RYg.js";import{m as xi}from"./bitmapUtils-BE7JGShX.js";import{D as we,z as _i}from"./utils-DzInHlGV.js";import{g as wt,a as bt,i as vi,u as Ci}from"./RawBlockCache-BaB-kp2C.js";import{e as Ti,x as Ri}from"./rasterProjectionHelper-DEDinKKk.js";import{f as Si}from"./ImageryTileLayerView-9FeU4mD7.js";import{u as Pi}from"./LayerView-B2e2cy0J.js";import{i as Ii}from"./RefreshableLayerView-Bz7uUOz8.js";import"./utils-DSFVOAAV.js";import"./dataUtils-Cxih6PDB.js";import"./WGLBrushVTLSymbol-DjhwW74T.js";import"./WGLContainer-TrZCBzw7.js";import"./Utils-Cg5ubyWr.js";import"./BoundingBox-ojS2WC6-.js";import"./ShaderCompiler-C94JGjW7.js";import"./ProgramTemplate-9qDW07lG.js";import"./Container-c-WAtzQc.js";import"./constants-BFLErLYb.js";import"./timeSupport-DDgy1azU.js";import"./popupUtils-B7wJAZVr.js";const zi={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};let ki=class extends ns{constructor(e=null,s=null,t=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._maskTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._mask=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=s,this.interpolation=t}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){var s;this._rasterTexture!==e&&((s=this._rasterTexture)==null||s.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(this.processedTexture=A(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||zi}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get mask(){return this._mask}set mask(e){this._mask!==e&&(this._mask=e,this._maskTexture=A(this._maskTexture))}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?Qe.LINEAR:Qe.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=A(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){var t,a;const s=e||this.projected;return[s?this.width:((t=this.source)==null?void 0:t.width)||this.width,s?this.height:((a=this.source)==null?void 0:a.height)||this.height]}getRasterCellSize(){var a;const e=(a=this.rawPixelData)==null?void 0:a.srcPixelSize,{projected:s,resolution:t}=this;return e&&!s?[e.x,e.y]:[t,t]}_createTransforms(){return{displayViewScreenMat3:ze()}}setTransform(e){const s=ls(this.transforms.displayViewScreenMat3),[t,a]=e.toScreenNoRotation([0,0],[this.x,this.y]),r=this.resolution/this.pixelRatio/e.resolution,o=r*this.width,n=r*this.height,l=Math.PI*this.rotation/180;We(s,s,Me(t,a)),We(s,s,Me(o/2,n/2)),us(s,s,-l),We(s,s,Me(-o/2,-n/2)),cs(s,s,Me(o,n)),xt(this.transforms.displayViewScreenMat3,e.displayViewMat3,s)}getTextures({forProcessing:e=!1,useProcessedTexture:s=!1}={}){const t=s?this._processedTexture??this._rasterTexture:this._rasterTexture,a=[],r=[];return t?(this._transformGridTexture&&!this.projected&&(r.push(this._transformGridTexture),a.push("u_transformGrid")),r.push(t),a.push("u_image"),!this._colormapTexture||!s&&e||(r.push(this._colormapTexture),a.push("u_colormap")),this._maskTexture&&(r.push(this._maskTexture),a.push("u_mask")),{names:a,textures:r}):{names:a,textures:r}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const s=this._isValidSource(this.source);s&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(s?(this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=js(e,this.transformGrid)),this._mask&&!this._maskTexture&&(this._maskTexture=Ls(e,this._mask,[this.width,this.height]))):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach((s=>s==null?void 0:s.dispose())),e.length=0,this.processed=!!this.processedTexture)}_createOrDestroyRasterTexture(e){var o;const s=(o=this.source)==null?void 0:o.extractBands(this.bandIds);if(!this._isValidSource(s))return void(this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null));const t=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(t)return;this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const a=this._getTextureSamplingMethod(this.interpolation),r=this.isRendereredSource;this._rasterTexture=Es(e,s,a,r),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const s=this._rasterTextureBandIds;return!(s==null&&e==null||s&&e&&s.join("")===e.join(""))}_isValidSource(e){var s;return e!=null&&((s=e.pixels)==null?void 0:s.length)>0}_getTextureSamplingMethod(e){const{type:s}=this.symbolizerParameters,t=s==="lut"&&!this.symbolizerParameters.isClassBreaks||s==="hillshade"||s==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||t||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const s=this._colormap,t=this.symbolizerParameters.colormap;return t?s?t.length!==s.length||t.some(((a,r)=>a!==s[r]))?(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),this._colormapTexture=Ye(e,t),void(this._colormap=t)):void 0:(this._colormapTexture=Ye(e,t),void(this._colormap=t)):(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),void(this._colormap=null))}_disposeTextures(e=!1){e?this.projected&&(this._transformGridTexture=A(this._transformGridTexture)):(this._rasterTexture=A(this._rasterTexture),this._colormapTexture=A(this._colormapTexture),this._transformGridTexture=A(this._transformGridTexture),this._maskTexture=A(this._maskTexture),this._rasterTextureBandIds=null,this._colormap=null,this._colormapTextureInvalidated=!0),this._processedTexture=A(this._processedTexture)}},$i=class extends _t{constructor(e,s,t,a,r,o,n=null){super(e,s,t,a,r,o),this.bitmap=null,this.bitmap=new ki(n,null,null),this.bitmap.coordScale=[r,o],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:ze(),tileMat3:ze()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}};function Mi(i,e,s,t){const a=X(e.multiply(s)),r=new J(new P(a.x),new P(a.y)),o=new J(r.x.add(1),r.y),n=new J(r.x,r.y.add(1)),l=new J(r.x.add(1),r.y.add(1)),c=K(i,r,new P(0)),p=K(i,o,new P(0)),h=K(i,n,new P(0)),f=K(i,l,new P(0)),g=lt(e.multiply(s)),y=W(c,p,g.x),_=W(h,f,g.x),R=W(y,_,g.y);if(!t)return R;const $=new w(c.a,p.a,h.a,f.a),C=$.xy.multiply($.zw),E=X(C.x.multiply(C.y).add(.5)),_e=R.multiply(E),os=we(E).multiply(T(i,e));return _e.add(os)}class ve extends I{}function Fi(i,e){const s=T(e.transformTexture,i);return new x(s.r,s.g)}function Bi(i,e){const{transformTexture:s,targetImageSize:t,transformSpacing:a}=e,r=X(i.multiply(t)),o=new x(4,1),n=X(r.divide(a)).multiply(o),l=lt(r.add(new x(.5,.5)).divide(a)),c=new J(yt(n.x),yt(n.y)),p=new b(l,1);return q(Rt(l.x,l.y),Vi(s,c,p),Di(s,c,p))}function Vi(i,e,s){const t=K(i,e,new P(0)),a=new J(e.x.add(1),e.y),r=K(i,a,new P(0));return new x(L(t.rgb,s),L(r.rgb,s))}function Di(i,e,s){const t=new J(e.x.add(2),e.y),a=K(i,t,new P(0)),r=new J(e.x.add(3),e.y),o=K(i,r,new P(0));return new x(L(a.rgb,s),L(o.rgb,s))}function Oi(i){const e=B(new x(-1e-5,-1e-5),i).multiply(B(i,new x(1.00001,1.00001))),s=we(e.x.multiply(e.y));return new Ws(s)}function Mt(i,e,s=!1){return e?s?Fi(i,e):Bi(i,e):i}function Ft(i,e,s){const{bicubic:t=!1,bilinear:a=!1,nearestOnEdge:r=!1}=s??{};return t||a?t?xi(e.texture,i,e.srcImageSize):Mi(e.texture,i,e.srcImageSize,r):T(e.texture,i)}u([m(se)],ve.prototype,"transformTexture",void 0),u([m(x)],ve.prototype,"targetImageSize",void 0),u([m(x)],ve.prototype,"transformSpacing",void 0),u([m(x)],ve.prototype,"transformGridSize",void 0);let Bt=class extends zt{};u([It(0,x)],Bt.prototype,"position",void 0);let Ai=class extends kt{},ce=class extends I{};u([m(se)],ce.prototype,"texture",void 0),u([m(be)],ce.prototype,"dvsMat3",void 0),u([m(x)],ce.prototype,"coordScale",void 0),u([m(x)],ce.prototype,"srcImageSize",void 0),u([m(d)],ce.prototype,"opacity",void 0);class Vt extends I{}u([m(se)],Vt.prototype,"maskTexture",void 0);class G extends St{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1}vertex(e){const s=e.position,{dvsMat3:t,coordScale:a}=this.config,r=t.multiply(new b(s.multiply(a),1));return{uv:s,glPosition:new w(r,1)}}fragment(e){const s=new Pt,t=Mt(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection),a=q(Oi(t),new w(0,0,0,0),this._colorize(t));let r=a.a.multiply(this.config.opacity);if(this.applyPixelMask){const o=this._getPixelMask(e.uv);r=r.multiply(o)}return s.fragColor=new w(a.rgb,1).multiply(r),s}_getPixel(e){const{config:s,bicubic:t,bilinear:a,nearestOnEdge:r}=this;return Ft(e,s,{bicubic:t,bilinear:a,nearestOnEdge:r})}_getPixelMask(e){const{maskTexture:s}=this.pixelMaskConfig,t=T(s,e);return j(t.a)}}u([v],G.prototype,"applyProjection",void 0),u([v],G.prototype,"lookupProjection",void 0),u([v],G.prototype,"bilinear",void 0),u([v],G.prototype,"bicubic",void 0),u([v],G.prototype,"nearestOnEdge",void 0),u([v],G.prototype,"applyPixelMask",void 0),u([m(ce)],G.prototype,"config",void 0),u([ue(ve)],G.prototype,"projectionConfig",void 0),u([ue(Vt)],G.prototype,"pixelMaskConfig",void 0),u([Ue(0,qe(Bt))],G.prototype,"vertex",null),u([Ue(0,qe(Ai))],G.prototype,"fragment",null);let te=class extends I{};function ke(i,e,s,t=!0){const{colormapTexture:a,colormapOffset:r,colormapMaxIndex:o}=s,n=i.r.multiply(e).subtract(r),l=N(n,new d(0),o),c=new x(l.add(.5).divide(o.add(1)),0),p=T(a,c),h=new w(p.rgb,p.a.multiply(i.a));if(t)return h;const f=B(new d(0),n).multiply(B(n,s.colormapMaxIndex));return h.multiply(f)}u([m(se)],te.prototype,"colormapTexture",void 0),u([m(d)],te.prototype,"colormapOffset",void 0),u([m(d)],te.prototype,"colormapMaxIndex",void 0);let Dt=class extends G{constructor(){super(...arguments),this.type="RasterColorizerLUTShader"}_colorize(e){const s=this._getPixel(e);return ke(s,new d(1),this.colormapConfig,!1)}};u([m(te)],Dt.prototype,"colormapConfig",void 0);function Ot(i){const e=new w(0,-.3333333333333333,.6666666666666666,-1),s=q(Je(i.y,i.z),new w(i.zy,e.wz),new w(i.yz,e.xy)),t=q(Je(i.x,s.x),new w(s.xyw,i.x),new w(i.x,s.yzx)),a=t.x.subtract(Ke(t.w,t.y)),r=new d(1e-10),o=t.w.subtract(t.y),n=a.multiply(6).add(r),l=D(o.divide(n).add(t.z)),c=t.x.add(r),p=Ke(a.divide(c),new d(1));return new b(l,p,t.x)}function At(i){const e=new w(1,.6666666666666666,.3333333333333333,3),s=D(lt(i.xxx.add(e.xyz)).multiply(6).subtract(e.www)),t=N(s.subtract(e.xxx),new b(0,0,0),new b(1));return i.z.multiply(W(e.xxx,t,i.y))}let Z=class extends I{};function U(i){const e=D(i),s=B(e,new x(1,1)).multiply(e),t=new d(2).subtract(e),a=B(new d(1),e).multiply(t);return s.add(a)}function $e(i,e,s){const t=new d(1).divide(s),a=T(i,U(t.multiply(new x(-1,-1)).add(e))),r=T(i,U(t.multiply(new x(0,-1)).add(e))),o=T(i,U(t.multiply(new x(1,-1)).add(e))),n=T(i,U(t.multiply(new x(-1,0)).add(e))),l=T(i,U(e)),c=T(i,U(t.multiply(new x(1,0)).add(e))),p=T(i,U(t.multiply(new x(-1,1)).add(e))),h=T(i,U(t.multiply(new x(0,1)).add(e))),f=T(i,U(t.multiply(new x(1,1)).add(e))),g=new w(a.a,r.a,o.a,n.a),y=new w(c.a,p.a,h.a,f.a),_=g.multiply(y),R=_.xy.multiply(_.zw),$=R.x.multiply(R.y).multiply(l.a),C=new Q(new d(0),10);return C[0]=a.r,C[1]=r.r,C[2]=o.r,C[3]=n.r,C[4]=l.r,C[5]=c.r,C[6]=p.r,C[7]=h.r,C[8]=f.r,C[9]=$,C}function ht(i,e){const s=new w(i[5],i[3],i[7],i[1]).multiply(2),t=new b(i[2],s[0],i[8]),a=new b(i[0],s[1],i[6]),r=L(t.subtract(a),new b(1)),o=new b(i[6],s[2],i[8]),n=new b(i[0],s[3],i[2]),l=L(o.subtract(n),new b(1));return new x(r,l).multiply(e)}function Gt(i,e,s){const{factor:t}=e,a=ht(i,t),r=ee(L(a,a).add(1)),o=i[9],{sinZsinAs:n,sinZcosAs:l,cosZs:c,weights:p}=e;if(!s){const y=He({sinZsinA:n[0],sinZcosA:l[0],cosZ:c[0],weights:new d(1),dzxy:a,dzd:r});return new w(y,y,y,o)}const h=He({sinZsinA:new b(n[0],n[1],n[2]),sinZcosA:new b(l[0],l[1],l[2]),cosZ:new b(c[0],c[1],c[2]),weights:new b(p[0],p[1],p[2]),dzxy:a,dzd:r}),f=He({sinZsinA:new b(n[3],n[4],n[5]),sinZcosA:new b(l[3],l[5],l[5]),cosZ:new b(c[3],c[4],c[5]),weights:new b(p[3],p[4],p[5]),dzxy:a,dzd:r}),g=L(h.add(f),new b(1));return new w(g,g,g,o)}function He(i){const e=i.sinZsinA.multiply(i.dzxy.y),s=i.sinZcosA.multiply(i.dzxy.x),t=e.subtract(s),a=i.cosZ.add(t).divide(i.dzd);return a.multiply(B(new d(0),a)).multiply(i.weights)}function Ut(i,e){const{pixelSizeFactor:s}=i,t=[i.factor[0]/e[0],i.factor[1]/e[1]];if(s>0){const{zFactor:a,pixelSizePower:r,gcsFactor:o}=i,n=e[0]*o,l=e[1]*o;t[0]=(a+n**r*s)/(8*n),t[1]=(a+l**r*s)/(8*l)}return t}u([m(Q.ofType(d,6))],Z.prototype,"sinZcosAs",void 0),u([m(Q.ofType(d,6))],Z.prototype,"sinZsinAs",void 0),u([m(Q.ofType(d,6))],Z.prototype,"cosZs",void 0),u([m(Q.ofType(d,6))],Z.prototype,"weights",void 0),u([m(d)],Z.prototype,"minValue",void 0),u([m(d)],Z.prototype,"maxValue",void 0),u([m(x)],Z.prototype,"factor",void 0);let Ce=class extends G{constructor(){super(...arguments),this.type="RasterColorizerShadedReliefShader",this.applyColormap=!1,this.isMultidirectional=!1}_colorize(e){const{texture:s}=this.config,t=$e(s,e,this.config.srcImageSize),a=Gt(t,this.hillshadeConfig,this.isMultidirectional);if(!this.applyColormap)return new w(a.x,a.x,a.x,a.a);const{minValue:r,maxValue:o}=this.hillshadeConfig,n=this._getPixel(e),l=o.subtract(r),c=n.r.subtract(r),p=N(c.divide(l),new d(0),new d(1)),h=ke(new w(p,p,p,1),new d(255),this.colormapConfig),f=Ot(h.xyz),g=At(new b(f.xy,a.x));return new w(g,h.a.multiply(a.a))}};u([v],Ce.prototype,"applyColormap",void 0),u([v],Ce.prototype,"isMultidirectional",void 0),u([m(Z)],Ce.prototype,"hillshadeConfig",void 0),u([ue(te)],Ce.prototype,"colormapConfig",void 0);let H=class extends I{};function Gi(i,e){const{minCutOff:s,maxCutOff:t,factor:a,minOutput:r}=e;return N(i,s,t).subtract(s).multiply(a).add(r)}function Ui(i,e){const{minCutOff:s,maxCutOff:t,minOutput:a,maxOutput:r,gamma:o,gammaCorrection:n}=e,l=N(i,s,t).subtract(s),c=t.subtract(s),p=l.divide(c),h=B(new d(1),o),f=j(o.subtract(1)),g=r.subtract(a),y=new b(1),_=Y(y.divide(g),p.multiply(n)),R=we(h.multiply(f).multiply(_)),$=Y(p,y.divide(o)),C=R.multiply(g).multiply($).add(a);return N(C,a,r)}function qt(i,e,s,t=255){const a=s?Ui(i.rgb,e).divide(t):Gi(i.rgb,e);return new w(a,i.a)}u([m(d)],H.prototype,"minOutput",void 0),u([m(d)],H.prototype,"maxOutput",void 0),u([m(b)],H.prototype,"minCutOff",void 0),u([m(b)],H.prototype,"maxCutOff",void 0),u([m(b)],H.prototype,"factor",void 0),u([m(b)],H.prototype,"gamma",void 0),u([m(b)],H.prototype,"gammaCorrection",void 0);let ae=class extends G{constructor(){super(...arguments),this.type="RasterColorizerStretchShader",this.isMultiband=!0,this.applyColormap=!1,this.useGamma=!1,this.noOp=!1}_colorize(e){const s=this._getPixel(e);if(this.noOp)return s;let t=qt(s,this.stretchConfig,this.useGamma);if(this.isMultiband)return t;if(t=new w(t.rrr,t.a),this.applyColormap){const a=this.useGamma?255:1;t=ke(t,new d(a),this.colormapConfig)}return t}};u([v],ae.prototype,"isMultiband",void 0),u([v],ae.prototype,"applyColormap",void 0),u([v],ae.prototype,"useGamma",void 0),u([v],ae.prototype,"noOp",void 0),u([m(H)],ae.prototype,"stretchConfig",void 0),u([ue(te)],ae.prototype,"colormapConfig",void 0);let qi=class extends ut{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=z.RasterColorizer,this.shaders={lut:new Dt,stretch:new ae,shadedRelief:new Ce}}render(e,s){for(const t of s.bitmaps){if(!t.source||t.suspended)continue;e.timeline.begin(this.name);const{painter:a}=e;a.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:t.stencilRef,compare:hs.EQUAL,op:{fail:Ne.KEEP,zFail:Ne.KEEP,zPass:Ne.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),t.updateTexture(e),t.processedTexture||t.updateProcessedTexture();const{type:r}=t.symbolizerParameters,o=r==="stretch"?this._getStretchOptions(t):r==="lut"?this._getLutOptions(t):this._getShadedReliefOptions(t);t.interpolation!=="bilinear"||e.context.capabilities.textureFloatLinear||(o.defines.bilinear=!0),a.submitDrawMesh(e.context,o,a.quadMesh),e.timeline.end(this.name)}}_getLutOptions(e){const{config:s,projectionConfig:t,colormapConfig:a,pixelMaskConfig:r,projectionDefines:o}=this._getCommonConfig(e),n=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:t,config:s,colormapConfig:a,pixelMaskConfig:r},defines:{...o,...n,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(e){const s=e.symbolizerParameters,{config:t,projectionConfig:a,colormapConfig:r,pixelMaskConfig:o,projectionDefines:n}=this._getCommonConfig(e),l=this._getInterpolationDefines(e.interpolation,s.bandCount===1);return{shader:this.shaders.stretch,uniforms:{projectionConfig:a,config:t,stretchConfig:s,colormapConfig:r,pixelMaskConfig:o},defines:{...n,...l,isMultiband:s.bandCount>1,applyColormap:!!r,useGamma:s.useGamma,noOp:e.isRendereredSource&&!e.processed,applyPixelMask:!!o},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(e){const s=e.symbolizerParameters,{config:t,projectionConfig:a,colormapConfig:r,pixelMaskConfig:o,projectionDefines:n}=this._getCommonConfig(e),l=this._getInterpolationDefines(e.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:a,config:t,hillshadeConfig:s,colormapConfig:r,pixelMaskConfig:o},defines:{...n,...l,isMultidirectional:s.hillshadeType>0,applyColormap:!!r,applyPixelMask:!!o},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(e){const{coordScale:s,computedOpacity:t,transforms:a}=e,{names:r,textures:o}=e.getTextures({useProcessedTexture:e.processed}),n=o[r.indexOf("u_image")],l=e.getRasterTextureSize(),c={texture:{texture:n,unit:0},dvsMat3:a.displayViewScreenMat3,coordScale:s,srcImageSize:l,opacity:t},p=o[r.indexOf("u_transformGrid")],{transformGrid:h}=e,f=!(!p||!h),g=f?{transformTexture:{texture:p,unit:2},targetImageSize:[e.width,e.height],transformSpacing:h.spacing,transformGridSize:h.size}:void 0,y=o[r.indexOf("u_colormap")],{colormap:_,colormapOffset:R}=e.symbolizerParameters,$=y&&_?{colormapTexture:{texture:y,unit:1},colormapOffset:R??0,colormapMaxIndex:_.length/4-1}:void 0,C=o[r.indexOf("u_mask")];return{config:c,projectionConfig:g,colormapConfig:$,pixelMaskConfig:C?{maskTexture:{texture:C,unit:3}}:void 0,projectionDefines:{applyProjection:f,lookupProjection:f&&h.spacing[0]===1}}}_getInterpolationDefines(e,s){const t=e==="bilinear"&&s;return{bilinear:t,bicubic:e==="cubic",nearestOnEdge:t}}};function jt(i,e){const s=new ds;return s.width=i,s.height=e,s.internalFormat=ms.RGBA32F,s.samplingMode=Qe.NEAREST,s.dataType=fs.FLOAT,s.isImmutable=!0,s.wrapMode=gs.CLAMP_TO_EDGE,s}function ji(i,e,s){const t=jt(e,s);return new ys(i,t)}function Lt(i,e,s){const t=jt(e,s);return new ps(i,t)}let F=class extends ut{shutdown(e){var s;super.shutdown(e),(s=this._fbo)==null||s.dispose(),this._fbo=void 0}render(e,s){const{rasterFunction:t}=e;if(!t)return;const{context:a}=e,r="indexedColormap"in t.parameters?Ye(a,t.parameters.indexedColormap):void 0,o=t.name==="Reproject",n=a.getBoundFramebufferObject(),l=a.getViewport();for(const c of s.bitmaps){const p=o?!(c.rasterTexture&&c.projected):!c.processed;if(!c.source||!p||c.suspended)continue;e.timeline.begin(this.name);const{painter:h}=e;h.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:Fe.ONE,dstRGB:Fe.ZERO,srcAlpha:Fe.ONE,dstAlpha:Fe.ZERO}}}),o||(c.processedTexture=A(c.processedTexture)),c.updateTexture(e);const[f,g]=c.getRasterTextureSize(o),y=f===le&&g===le,_=y?s.processorFbo:Lt(a,f,g);a.bindFramebuffer(_),a.setViewport(0,0,_.width,_.height),this._process(e,c,r);const R=ji(e.context,f,g);if(_.copyToTexture(0,0,f,g,0,0,R),o)c.rasterTexture=R;else{const $=e.hasBranches?t.id:0;c.functionTextures[$]=R}y||_.dispose(),e.timeline.end(this.name)}r==null||r.dispose(),a.bindFramebuffer(n),a.setViewport(l.x,l.y,l.width,l.height)}_getCommonConfig(e,s){var p,h;const{rasterFunction:t,hasBranches:a}=e,{raster:r,rasters:o}=t.parameters,n=a?(r==null?void 0:r.id)??((h=(p=o==null?void 0:o.filter((f=>f.name!=="Constant")))==null?void 0:p[0])==null?void 0:h.id)??-1:0,l=s.functionTextures[n]??s.rasterTexture,c=t.name==="Reproject";return{texture:{texture:l,unit:0},srcImageSize:s.getRasterTextureSize(c)}}_getMultipleInputConfig(e,s){return s!=null&&s.length?s.length===2?{twoRasterConfig:this._getTwoInputConfig(s,e)}:s.length===3?{threeRasterConfig:this._getThreeInputConfig(s,e)}:{}:{}}_getConstantCount(e){return(e==null?void 0:e.filter((s=>s.name==="Constant")).length)??0}_getTextures(e,s){return e.filter((t=>t.name!=="Constant")).map((t=>t.id!=null&&t.name!=="Identity"?s.functionTextures[t.id]:s.rasterTexture))}_getTwoInputConfig(e,s){const t=this._getTextures(e,s),a=t[1]?{texture:t[1],unit:1}:void 0,r=e.findIndex((n=>n.name==="Constant")),o=r===0?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:a,image1Const:r>-1?e[r].parameters.value:0,imageSwap:o}}_getThreeInputConfig(e,s){const t=this._getTextures(e,s);let a=0,r=0,o=new Float32Array([1,0,0,0,1,0,0,0,1]);const n=t[1]?{texture:t[1],unit:1}:void 0,l=t[2]?{texture:t[2],unit:2}:void 0,c=[];if(e.forEach(((p,h)=>p.name==="Constant"&&c.push(h))),c.length===1)a=e[c[0]].parameters.value,o=c[0]===0?new Float32Array([0,1,0,0,0,1,1,0,0]):c[0]===1?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(c.length===2){a=e[c[0]].parameters.value,r=e[c[1]].parameters.value;const p=e.findIndex((h=>h.name!=="Constant"));o=p===0?new Float32Array([1,0,0,0,1,0,0,0,1]):p===1?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:n,image2:l,image1Const:a,image2Const:r,imageSwap:o}}},Et=class extends zt{};u([It(0,x)],Et.prototype,"position",void 0);let Li=class extends kt{},et=class extends I{};u([m(se)],et.prototype,"texture",void 0),u([m(x)],et.prototype,"srcImageSize",void 0);let k=class extends St{vertex(e){return{uv:e.position,glPosition:new w(_i(e.position),0,1)}}fragment(e){const s=new Pt,t=Mt(e.uv),a=this._process(t);return s.fragColor=new w(a.rgb,1).multiply(a.a),s}_getPixel(e){return Ft(e,this.config)}};u([m(et)],k.prototype,"config",void 0),u([Ue(0,qe(Et))],k.prototype,"vertex",null),u([Ue(0,qe(Li))],k.prototype,"fragment",null);let Wt=class extends I{};u([m(x)],Wt.prototype,"cellSize",void 0);let Nt=class extends k{constructor(){super(...arguments),this.type="AspectShader"}_process(e){const{texture:s}=this.config,t=$e(s,e,this.config.srcImageSize),a=new x(1).divide(this.aspectConfig.cellSize.multiply(8)),{x:r,y:o}=ht(t,a),n=ge(o),l=t[9].multiply(j(D(r).add(D(n)))),c=D(j(r)),p=new d(3.14159265359),h=new d(0),f=B(h,n).multiply(.5).multiply(p).add(B(n,h).multiply(1.5).multiply(p)),g=$t(new d(2.5).multiply(p).add(je(n,ge(r))),new d(2).multiply(p)),y=W(f,g,c).multiply(180).divide(p);return new w(y,y,y,l)}};u([m(Wt)],Nt.prototype,"aspectConfig",void 0);let Ei=class extends F{constructor(){super(...arguments),this.name="RasterAspectProcessor",this.type=z.Aspect,this.shaders={aspect:new Nt}}_process(e,s){const t={cellSize:s.getRasterCellSize()},a=this._getCommonConfig(e,s),r={shader:this.shaders.aspect,uniforms:{config:a,aspectConfig:t},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,r,o.quadMesh)}};function M(i){const e=j(i),s=i.add(D(e).subtract(1));return e.multiply(e).divide(s)}function xe(i){return new w(X(i.rgb.add(.5)),i.a)}function Zt(i,e){return B(e.x,i).multiply(B(i,e.y))}function Wi(i,e,s){const t=new b(i);let a=new b(0,0,0),r=new d(0);for(let o=0;o<s/3;o++){const n=9*o,l=new b(e[n],e[n+3],e[n+6]),c=new b(e[n+1],e[n+4],e[n+7]),p=B(l,t).multiply(B(t,c)),h=new b(e[n+2],e[n+5],e[n+8]);r=W(r,h.x,p.x),r=W(r,h.y,p.y),r=W(r,h.z,p.z),a=a.add(p)}return{mapValue:r,includeMask:j(L(a,new b(1,1,1)))}}class Ht extends I{}u([m(be)],Ht.prototype,"bandIndexMat3",void 0);let Qt=class extends I{};u([m(b)],Qt.prototype,"adjustments",void 0);let Te=class extends k{constructor(){super(...arguments),this.type="BandArithmeticShader",this.isOutputRounded=!1}_process(e){const s=this._getPixel(e),t=this.bandArithmeticConfig.bandIndexMat3.multiply(s.rgb),a=this._processIndex(t),r=new w(a,a,a,s.a);return this.isOutputRounded?xe(r):r}_processIndex(e){var r;const{r:s,g:t}=e,a=(r=this.adjustmentConfig)==null?void 0:r.adjustments;switch(this.indexType){case"ndxi":{const o=s.subtract(t),n=s.add(t);return o.multiply(M(n))}case"sr":return s.multiply(M(t));case"ci":return s.multiply(M(t)).subtract(1);case"savi":{const{x:o}=a,n=s.subtract(t),l=s.add(t).add(o);return n.multiply(M(l)).multiply(o.add(1))}case"tsavi":{const{x:o,y:n,z:l}=a,c=l.multiply(o.multiply(o).add(1)).subtract(n.multiply(o)),p=o.multiply(s.subtract(o.multiply(t)).subtract(n)),h=n.multiply(s).add(t).add(c);return p.multiply(M(h))}case"msavi":{const o=s.multiply(2).add(1),n=o.multiply(o).subtract(s.subtract(t).multiply(8));return o.subtract(ee(n)).multiply(.5)}case"gemi":{const o=s.multiply(s).subtract(t.multiply(t)).multiply(2).add(s.multiply(1.5)).add(t.multiply(.5)),n=s.add(t).add(.5),l=o.multiply(M(n)),c=l.multiply(we(l.multiply(.25))),p=t.subtract(.125).multiply(M(we(t)));return c.subtract(p)}case"pvi":{const{x:o,y:n}=a,l=ee(o.multiply(o).add(1));return s.subtract(t.multiply(o)).subtract(n).multiply(M(l))}case"vari":{const o=e.g.subtract(e.r),n=e.g.add(e.r).subtract(e.b);return o.multiply(M(n))}case"rtvicore":return s.subtract(t).multiply(100).subtract(s.subtract(e.b).multiply(10));case"bai":{const o=Y(new d(.1).subtract(t),new d(2)),n=Y(new d(.06).subtract(s),new d(2));return M(o.add(n))}case"evi":{const o=e.b,n=s.add(t.multiply(6)).subtract(o.multiply(7.5)).add(1);return s.subtract(t).multiply(2.5).multiply(M(n))}case"wndwi":{const{r:o,g:n,b:l}=e,c=a.x,p=c.multiply(n),h=c.multiply(l),f=o.add(p).add(l).subtract(h);return o.subtract(p).subtract(l).add(h).multiply(M(f))}case"mtvi":{const o=e.b,n=Y(s.multiply(2).add(1),new d(2)),l=s.multiply(6).subtract(ee(t).multiply(5)),c=ee(n.subtract(l).subtract(.5)),p=s.subtract(o).multiply(1.2),h=t.subtract(o).multiply(2.5);return p.subtract(h).multiply(1.5).multiply(M(c))}default:return s}}};u([v],Te.prototype,"indexType",void 0),u([v],Te.prototype,"isOutputRounded",void 0),u([m(Ht)],Te.prototype,"bandArithmeticConfig",void 0),u([ue(Qt)],Te.prototype,"adjustmentConfig",void 0);let Ni=class extends F{constructor(){super(...arguments),this.name="RasterBandArithmeticProcessor",this.type=z.BandArithmetic,this.shaders={bandArithmetic:new Te}}_process(e,s){const t=e.rasterFunction.parameters,a={indexType:t.indexType,isOutputRounded:t.isOutputRounded},r={bandIndexMat3:t.bandIndexMat3},o=t.adjustments?{adjustments:[...t.adjustments]}:void 0,n=this._getCommonConfig(e,s),l={shader:this.shaders.bandArithmetic,uniforms:{config:n,bandArithmeticConfig:r,adjustmentConfig:o},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:p}=e;c.submitDrawMesh(p,l,c.quadMesh)}},Xt=class extends k{constructor(){super(...arguments),this.type="ColormapToRGBShader"}_process(e){const s=this._getPixel(e),t=ke(s,new d(1),this.colormapConfig,!1);return new w(t.xyz.multiply(255),t.a)}};u([m(te)],Xt.prototype,"colormapConfig",void 0);class Zi extends F{constructor(){super(...arguments),this.name="RasterColormapToRGBProcessor",this.type=z.ColormapToRGB,this.shaders={colormapToRGB:new Xt}}_process(e,s,t){const a=e.rasterFunction.parameters,r={colormapTexture:{texture:t,unit:1},colormapOffset:a.offset,colormapMaxIndex:a.indexedColormap.length/4-1},o=this._getCommonConfig(e,s),n={shader:this.shaders.colormapToRGB,uniforms:{config:o,colormapConfig:r},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}}let Ve=class extends I{};u([m(se)],Ve.prototype,"image1",void 0),u([m(d)],Ve.prototype,"image1Const",void 0),u([m(be)],Ve.prototype,"imageSwap",void 0);let he=class extends I{};u([m(se)],he.prototype,"image1",void 0),u([m(se)],he.prototype,"image2",void 0),u([m(d)],he.prototype,"image1Const",void 0),u([m(d)],he.prototype,"image2Const",void 0),u([m(be)],he.prototype,"imageSwap",void 0);const pt=i=>{class e extends i{constructor(){super(...arguments),this.constantCount=0,this.imageCount=1}_getRasterValues(t){const{imageCount:a}=this;if(a===1){const r=T(this.config.texture,t);return{a:r.r,b:r.g,c:r.b,alpha:r.a}}if(a===2){const r=this._getTwoValues(t);return{a:r.a,b:r.b,c:r.b,alpha:r.alpha}}return this._getThreeValues(t)}_getTwoValues(t){const a=T(this.config.texture,t);if(this.constantCount===1){const{imageSwap:n,image1Const:l}=this.twoRasterConfig,c=n.multiply(new b(a.r,l,0));return{a:c.x,b:c.y,alpha:a.a}}const{image1:r}=this.twoRasterConfig,o=T(r,t);return{a:a.r,b:o.r,alpha:a.a.multiply(o.a)}}_getThreeValues(t){const a=T(this.config.texture,t),{imageSwap:r,image1:o,image2:n,image1Const:l,image2Const:c}=this.threeRasterConfig;if(this.constantCount===2){const f=r.multiply(new b(a.r,l,c));return{a:f.x,b:f.y,c:f.z,alpha:a.a}}if(this.constantCount===1){const f=T(o,t),g=r.multiply(new b(a.r,f.r,l));return{a:g.x,b:g.y,c:g.z,alpha:a.a.multiply(f.a)}}const p=T(o,t),h=T(n,t);return{a:a.r,b:p.r,c:h.r,alpha:a.a.multiply(p.a).multiply(h.a)}}}return u([v],e.prototype,"constantCount",void 0),u([v],e.prototype,"imageCount",void 0),u([ue(Ve)],e.prototype,"twoRasterConfig",void 0),u([ue(he)],e.prototype,"threeRasterConfig",void 0),e};let Hi=class extends pt(k){constructor(){super(...arguments),this.type="CompositeBandShader"}_process(e){const{a:s,b:t,c:a,alpha:r}=this._getRasterValues(e);return new w(s,t,a,r)}},Qi=class extends F{constructor(){super(...arguments),this.name="RasterCompositeBandProcessor",this.type=z.CompositeBand,this.shaders={compositeBand:new Hi}}_process(e,s){const{rasters:t}=e.rasterFunction.parameters,a={constantCount:this._getConstantCount(t),imageCount:(t==null?void 0:t.length)??1},r=this._getMultipleInputConfig(s,t),o=this._getCommonConfig(e,s),n={shader:this.shaders.compositeBand,uniforms:{config:o,...r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}};class dt extends I{}u([m(x)],dt.prototype,"domainRange",void 0);class De extends pt(k){constructor(){super(...arguments),this.type="LocalShader",this.isOutputRounded=!1}_process(e){if(this.operationName==="conditional")return this._conditional(e);const{a:s,b:t,alpha:a}=this._getRasterValues(e),{value:r,alpha:o}=this._compute(s,t,a);return this._processResult(r,o)}_processResult(e,s){const t=Zt(e,this.domainRangeConfig.domainRange),a=new w(e,e,e,s).multiply(t);return this.isOutputRounded?xe(a):a}_compute(e,s,t){const{operationName:a}=this;let r;switch(a){case"plus":r=e.add(s);break;case"minus":r=e.subtract(s);break;case"times":r=e.multiply(s);break;case"divide":case"floatdivide":r=e.multiply(M(s)),t=t.multiply(O(D(j(s))));break;case"floordivide":r=X(e.multiply(M(s))),t=t.multiply(O(D(j(s))));break;case"square":r=e.multiply(e);break;case"sqrt":r=ee(e);break;case"power":r=Y(e,s);break;case"ln":r=q(re(e,new d(0)),fi(e),new d(0)),t=t.multiply(this._isAboveZero(e));break;case"log10":r=q(re(e,new d(0)),Ze(e).multiply(M(Ze(new d(10)))),new d(0)),t=t.multiply(this._isAboveZero(e));break;case"log2":r=q(re(e,new d(0)),Ze(e),new d(0)),t=t.multiply(this._isAboveZero(e));break;case"exp":r=mi(e);break;case"exp10":r=Y(new d(10),e);break;case"exp2":r=Y(new d(2),e);break;case"rounddown":r=X(e);break;case"roundup":r=di(e);break;case"int":r=j(e).multiply(X(D(e)));break;case"mod":r=$t(e,s);break;case"negate":r=ge(e);break;case"abs":r=D(e);break;case"acos":{const o=this._isAbsBiggerThanOne(e);r=q(o,new d(0),pi(e)),t=q(o,new d(0),t);break}case"acosh":r=hi(e);break;case"asin":{const o=this._isAbsBiggerThanOne(e);r=q(o,new d(0),ci(e)),t=q(o,new d(0),t);break}case"asinh":r=ui(e);break;case"atan":r=je(e);break;case"atanh":{const o=this._isAbsBiggerThanOne(e);r=q(o,new d(0),li(e)),t=q(o,new d(0),t);break}case"atan2":r=je(e,s);break;case"cos":r=ni(e);break;case"cosh":r=oi(e);break;case"sin":r=ai(e);break;case"sinh":r=ri(e);break;case"tan":r=ii(e);break;case"tanh":r=si(e);break;case"bitwiseand":r=new d(ti(new P(e),new P(s)));break;case"bitwiseor":r=new d(ei(new P(e),new P(s)));break;case"bitwiseleftshift":r=new d(Ks(new P(e),new P(s)));break;case"bitwiserightshift":r=new d(Js(new P(e),new P(s)));break;case"bitwisenot":r=new d(Ys(new P(e)));break;case"bitwisexor":r=new d(Xs(new P(e),new P(s)));break;case"booleanand":r=O(Qs(ie(e,new d(0)),ie(s,new d(0))));break;case"booleanor":r=O(Hs(ie(e,new d(0)),ie(s,new d(0))));break;case"booleannot":r=O(fe(e,new d(0)));break;case"booleanxor":r=O(Zs(ie(e,new d(0)),ie(s,new d(0))));break;case"greaterthan":r=O(re(e,s));break;case"greaterthanequal":r=O(Ns(e,s));break;case"lessthan":r=O(Je(e,s));break;case"lessthanequal":r=O(Rt(e,s));break;case"equalto":r=O(fe(e,s));break;case"notequal":r=O(ie(e,s));break;case"isnull":r=O(fe(t,new d(0))),t=new d(1);break;case"setnull":{const o=O(fe(e,new d(0)));r=o.multiply(s),t=t.multiply(o);break}default:r=e}return{value:r,alpha:t}}_conditional(e){const{a:s,b:t,c:a,alpha:r}=this._getRasterValues(e),o=new d(D(j(s))),n=W(a,t,o);return this._processResult(n,r)}_isAboveZero(e){return O(re(e,new d(0)))}_isAbsBiggerThanOne(e){return re(D(e),new d(1))}}u([v],De.prototype,"operationName",void 0),u([v],De.prototype,"isOutputRounded",void 0),u([m(dt)],De.prototype,"domainRangeConfig",void 0);let Oe=class extends pt(k){constructor(){super(...arguments),this.type="ComputeChangeShader",this.isOutputRounded=!1}_process(e){const{a:s,b:t,alpha:a}=this._getRasterValues(e);let r=s.subtract(t);this.method==="relative-difference"&&(r=r.multiply(M(ct(D(s),D(t)))));const o=Zt(r,this.domainRangeConfig.domainRange),n=new w(r,r,r,a).multiply(o);return this.isOutputRounded?xe(n):n}};u([v],Oe.prototype,"method",void 0),u([v],Oe.prototype,"isOutputRounded",void 0),u([m(dt)],Oe.prototype,"domainRangeConfig",void 0);let Xi=class extends F{constructor(){super(...arguments),this.name="RasterComputeChangeProcessor",this.type=z.ComputeChange,this.shaders={computeChange:new Oe}}_process(e,s){const t=e.rasterFunction.parameters,{rasters:a}=t,r={constantCount:this._getConstantCount(a),imageCount:a.length,method:t.method,isOutputRounded:t.isOutputRounded},o={domainRange:t.domainRange},{twoRasterConfig:n}=this._getMultipleInputConfig(s,a),l=this._getCommonConfig(e,s),c={shader:this.shaders.computeChange,uniforms:{config:l,domainRangeConfig:o,twoRasterConfig:n},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:p,context:h}=e;p.submitDrawMesh(h,c,p.quadMesh)}},tt=class extends I{};u([m(d)],tt.prototype,"contrastOffset",void 0),u([m(d)],tt.prototype,"brightnessOffset",void 0);let Yt=class extends k{constructor(){super(...arguments),this.type="ContrastBrightnessShader"}_process(e){const{rgb:s,a:t}=this._getPixel(e),{contrastOffset:a,brightnessOffset:r}=this.contrastBrightnessConfig,o=new d(255),n=new d(128),l=s.multiply(200),c=o.multiply(100),p=o.multiply(2).multiply(r),h=l.subtract(c).add(p),f=gi([fe(a,new d(-100)),new b(n)],[fe(a,new d(100)),j(h).add(1).divide(2).multiply(o)],[re(a,new d(0)),h.divide(new d(100).subtract(a).multiply(2)).add(n)],[!0,h.multiply(a.add(100)).divide(2e4).add(n)]);return xe(new w(f,t))}};u([m(tt)],Yt.prototype,"contrastBrightnessConfig",void 0);class Yi extends F{constructor(){super(...arguments),this.name="RasterContrastBrightnessProcessor",this.type=z.ContrastBrightness,this.shaders={contrastBrightness:new Yt}}_process(e,s){const t=this._getCommonConfig(e,s),a=e.rasterFunction.parameters,r={shader:this.shaders.contrastBrightness,uniforms:{config:t,contrastBrightnessConfig:a},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,r,o.quadMesh)}}let st=class extends I{};u([m(wi.ofType(d,5,5,!0))],st.prototype,"kernel",void 0),u([m(x)],st.prototype,"clampRange",void 0);let Ae=class extends k{constructor(){super(...arguments),this.type="ConvolutionShader",this.rows=3,this.cols=3}_process(e){const{rows:s,cols:t}=this,a=new x(Math.floor(s/2),Math.floor(t/2)),{texture:r,srcImageSize:o}=this.config,n=new d(1).divide(o),{kernel:l}=this.convolutionConfig,c=yi(l,{initialValue:new w(0,0,0,1),xRange:[0,s],yRange:[0,t],callback:(h,f,g,y)=>{const _=new x(new d(g),new d(y)).subtract(a).multiply(n),R=T(r,U(e.add(_))),$=R.rgb.multiply(f).add(h.rgb),C=R.a.multiply(h.a);return new w($,C)}}),{clampRange:p}=this.convolutionConfig;return new w(N(c.rgb,p.x,p.y),1).multiply(c.a)}};u([v],Ae.prototype,"rows",void 0),u([v],Ae.prototype,"cols",void 0),u([m(st)],Ae.prototype,"convolutionConfig",void 0);let Ji=class extends F{constructor(){super(...arguments),this.name="RasterConvolutionProcessor",this.type=z.Convolution,this.shaders={convolution:new Ae}}_process(e,s){const t=e.rasterFunction.parameters,a={rows:t.kernelRows,cols:t.kernelCols},r={kernel:[...t.kernel],clampRange:t.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.convolution,uniforms:{config:o,convolutionConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}},Jt=class extends I{};u([m(d)],Jt.prototype,"zlFactor",void 0);let it=class extends k{constructor(){super(...arguments),this.type="CurvatureShader"}_process(e){const{texture:s}=this.config,t=$e(s,e,this.config.srcImageSize),a=t[3].add(t[5]).multiply(.5).subtract(t[4]),r=t[1].add(t[7]).multiply(.5).subtract(t[4]),{zlFactor:o}=this.curvatureConfig,{curvatureType:n}=this;let l;if(n==="standard")l=ge(o).multiply(a.add(r));else{const c=t[2].subtract(t[0]).add(t[6]).subtract(t[8]).divide(4),p=t[5].subtract(t[3]).divide(2),h=t[1].subtract(t[7]).divide(2),f=p.multiply(p),g=h.multiply(h),y=p.multiply(h),_=o.divide(f.add(g));l=n==="profile"?L(new b(a,r,c),new b(f,g,y)).multiply(_):L(new b(a,r,ge(c)),new b(g,f,y)).multiply(ge(_))}return new w(l,l,l,t[9])}};u([v],it.prototype,"curvatureType",void 0),u([m(Jt)],it.prototype,"curvatureConfig",void 0);let Ki=class extends F{constructor(){super(...arguments),this.name="RasterCurvatureProcessor",this.type=z.Curvature,this.shaders={curvature:new it}}_process(e,s){const t=e.rasterFunction.parameters,a={curvatureType:t.curvatureType},r=s.getRasterCellSize(),o={zlFactor:200*t.zFactor/r[0]/r[1]},n=this._getCommonConfig(e,s),l={shader:this.shaders.curvature,uniforms:{config:n,curvatureConfig:o},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:p}=e;c.submitDrawMesh(p,l,c.quadMesh)}},Kt=class extends I{};u([m(be)],Kt.prototype,"bandIndexMat3",void 0);let es=class extends k{constructor(){super(...arguments),this.type="ExtractBandShader"}_process(e){const s=this._getPixel(e),t=this.extractBandConfig.bandIndexMat3.multiply(s.rgb);return new w(t,s.a)}};u([m(Kt)],es.prototype,"extractBandConfig",void 0);let er=class extends F{constructor(){super(...arguments),this.name="RasterExtractBandProcessor",this.type=z.ExtractBand,this.shaders={extractBand:new es}}_process(e,s){const t={bandIndexMat3:e.rasterFunction.parameters.bandIndexMat3},a=this._getCommonConfig(e,s),r={shader:this.shaders.extractBand,uniforms:{config:a,extractBandConfig:t},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,r,o.quadMesh)}};class ts extends I{}u([m(x)],ts.prototype,"clampRange",void 0);class pe extends k{constructor(){super(...arguments),this.type="FocalStatisticsShader",this.rows=3,this.cols=3,this.fill=!1}_process(e){const s=this._process1(e),t=B(new d(1),s.a);if(!this.fill)return this._clamp(s.rgb,t);const a=this._getPixel(e),r=W(s.rgb,a.rgb,a.a);return this._clamp(r,t)}_clamp(e,s){const{clampRange:t}=this.focalStatisticsConfig;return new w(N(e,t.x,t.y),1).multiply(s)}_process1(e){const{texture:s,srcImageSize:t}=this.config,{rows:a,cols:r}=this,o=new x(Math.floor(a/2),Math.floor(r/2)),n=new d(1).divide(t),l=this._getPixel(e),{statisticsType:c}=this,p=c==="min"||c==="max"?new w(l.rgb,0):new w(0,0,0,0);switch(c){case"min":return this._stat(a,r,p,((h,f,g)=>{const y=new x(new d(f),new d(g)).subtract(o).multiply(n),_=T(s,U(e.add(y))),R=Ke(h.rgb,_.rgb);return new w(R,h.a.add(_.a))}));case"max":return this._stat(a,r,p,((h,f,g)=>{const y=new x(new d(f),new d(g)).subtract(o).multiply(n),_=T(s,U(e.add(y))),R=ct(h.rgb,_.rgb);return new w(R,h.a.add(_.a))}));case"mean":{const h=this._stat(a,r,p,((g,y,_)=>{const R=new x(new d(y),new d(_)).subtract(o).multiply(n),$=T(s,U(e.add(R))),C=g.rgb.add($.rgb.multiply($.a));return new w(C,g.a.add($.a))})),f=h.rgb.multiply(M(h.a));return new w(f,h.a)}case"stddev":{const h=this._stat(a,r,p,((_,R,$)=>{const C=new x(new d(R),new d($)).subtract(o).multiply(n),E=T(s,U(e.add(C))),_e=_.rgb.add(E.rgb.multiply(E.a));return new w(_e,_.a.add(E.a))})),f=this._stat(a,r,p,((_,R,$)=>{const C=new x(new d(R),new d($)).subtract(o).multiply(n),E=T(s,U(e.add(C))),_e=_.rgb.add(E.a.multiply(E.rgb).multiply(E.rgb));return new w(_e,_.a.add(E.a))})),g=M(f.a),y=ee(f.subtract(h.multiply(h).multiply(g)).multiply(g));return new w(y.rgb,h.a)}default:return l}}_stat(e=3,s=3,t,a){const r=new P(0).setMutable().setDebugName("StatColIterator"),o=new P(0).setMutable().setDebugName("StatRowIterator"),n=t.setMutable().setDebugName("StatAccumulator"),l=a(n,r,o).setDebugName("StatPredicate");return bi({iterX:r,iterY:o,accumulator:n},w,l,(({out:p,iterX:h,iterY:f,accumulator:g,subgraph:y})=>`
  for (${f} = 0; ${f} < ${e}; ${f}++) {
    for (${h} = 0; ${h} < ${s}; ${h}++) {
  
    ${y.body}
  
    ${g} = ${y.varName};
    }
  }
  ${p} = ${g};
  `)).setDebugName("statBody")}}u([v],pe.prototype,"rows",void 0),u([v],pe.prototype,"cols",void 0),u([v],pe.prototype,"statisticsType",void 0),u([v],pe.prototype,"fill",void 0),u([m(ts)],pe.prototype,"focalStatisticsConfig",void 0);class tr extends F{constructor(){super(...arguments),this.name="RasterFocalStatisticsProcessor",this.type=z.Statistics,this.shaders={focalStatistics:new pe}}_process(e,s){const t=e.rasterFunction.parameters,a={rows:t.kernelRows,cols:t.kernelCols,statisticsType:t.statisticsType,fill:t.fillNoDataOnly},r={clampRange:t.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.focalStatistics,uniforms:{config:o,focalStatisticsConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}}class ss extends I{}u([m(b)],ss.prototype,"weights",void 0);let is=class extends k{constructor(){super(...arguments),this.type="GrayscaleShader"}_process(e){const s=this._getPixel(e),{weights:t}=this.grayscaleConfig,a=L(t,s.rgb);return new w(a,a,a,s.a)}};u([m(ss)],is.prototype,"grayscaleConfig",void 0);let sr=class extends F{constructor(){super(...arguments),this.name="RasterGrayscaleProcessor",this.type=z.Grayscale,this.shaders={grayscale:new is}}_process(e,s){const t={weights:e.rasterFunction.parameters.weights},a=this._getCommonConfig(e,s),r={shader:this.shaders.grayscale,uniforms:{config:a,grayscaleConfig:t},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,r,o.quadMesh)}},Le=class extends k{constructor(){super(...arguments),this.type="HillshadeShader",this.isMultidirectional=!1}_process(e){const{texture:s}=this.config,t=$e(s,e,this.config.srcImageSize),a=Gt(t,this.hillshadeConfig,this.isMultidirectional);return new w(a.rgb.multiply(255),a.a)}};u([v],Le.prototype,"isMultidirectional",void 0),u([m(Z)],Le.prototype,"hillshadeConfig",void 0);let ir=class extends F{constructor(){super(...arguments),this.name="RasterHillshadeProcessor",this.type=z.Hillshade,this.shaders={hillshade:new Le}}_process(e,s){const t=e.rasterFunction.parameters,a={isMultidirectional:t.hillshadeType>0},r=s.getRasterCellSize(),o=Ut(t,r),n={...t,factor:o,minValue:0,maxValue:8e3},l=this._getCommonConfig(e,s),c={shader:this.shaders.hillshade,uniforms:{config:l,hillshadeConfig:n},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:p,context:h}=e;p.submitDrawMesh(h,c,p.quadMesh)}},rr=class extends F{constructor(){super(...arguments),this.name="RasterLocalProcessor",this.type=z.Local,this.shaders={local:new De}}_process(e,s){var f;const t=e.rasterFunction.parameters,a={constantCount:this._getConstantCount(t.rasters),imageCount:t.imageCount,operationName:t.operationName,isOutputRounded:t.isOutputRounded},r={domainRange:t.domainRange},o=t.operationName==="conditional"?t.rasters:(f=t.rasters)==null?void 0:f.slice(0,2),n=this._getMultipleInputConfig(s,o),l=this._getCommonConfig(e,s),c={shader:this.shaders.local,uniforms:{config:l,domainRangeConfig:r,...n},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:p,context:h}=e;p.submitDrawMesh(h,c,p.quadMesh)}};class rt extends I{}u([m(Q.ofType(d,6))],rt.prototype,"includedRanges",void 0),u([m(Q.ofType(d,ye))],rt.prototype,"noDataValues",void 0);let at=class extends k{constructor(){super(...arguments),this.type="MaskShader",this.isMultiband=!0}_process(e){const s=this._getPixel(e),t=this._computeNoDataFactor(s.r),a=this._computeRangeFactor(s.rgb);let r;if(this.isMultiband){const o=this._computeNoDataFactor(s.g),n=this._computeNoDataFactor(s.b),l=new b(t,o,n).multiply(a);r=l.x.multiply(l.y).multiply(l.z)}else r=t.multiply(a.x);return s.multiply(r)}_computeNoDataFactor(e){const{noDataValues:s}=this.maskConfig;let t=new b(1);for(let a=0;a<ye/3;a++){const r=3*a,o=new b(s[r+0],s[r+1],s[r+2]),n=D(j(o.subtract(e)));t=t.multiply(n)}return t.x.multiply(t.y).multiply(t.z)}_computeRangeFactor(e){const{includedRanges:s}=this.maskConfig,t=new b(s[0],s[2],s[4]),a=new b(s[1],s[3],s[5]);return B(t,e).multiply(B(e,a))}};u([v],at.prototype,"isMultiband",void 0),u([m(rt)],at.prototype,"maskConfig",void 0);let ar=class extends F{constructor(){super(...arguments),this.name="RasterMaskProcessor",this.type=z.Mask,this.shaders={mask:new at}}_process(e,s){const t=e.rasterFunction.parameters,a={isMultiband:t.bandCount>1},r={includedRanges:[...t.includedRanges],noDataValues:[...t.noDataValues]},o=this._getCommonConfig(e,s),n={shader:this.shaders.mask,uniforms:{config:o,maskConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}};class rs extends I{}u([m(be)],rs.prototype,"bandIndexMat3",void 0);class ot extends k{constructor(){super(...arguments),this.type="NDVIShader",this.scaled=!0}_process(e){const s=this._getPixel(e),{r:t,g:a}=this.ndviConfig.bandIndexMat3.multiply(s.rgb),r=t.subtract(a),o=t.add(a),n=r.multiply(M(o));if(!this.scaled)return new w(n,n,n,s.a);const l=X(n.multiply(100).add(100.5));return new w(l,l,l,s.a)}}u([v],ot.prototype,"scaled",void 0),u([m(rs)],ot.prototype,"ndviConfig",void 0);let or=class extends F{constructor(){super(...arguments),this.name="RasterNDVIProcessor",this.type=z.NDVI,this.shaders={ndvi:new ot}}_process(e,s){const t=e.rasterFunction.parameters,a={scaled:t.scaled},r={bandIndexMat3:t.bandIndexMat3},o=this._getCommonConfig(e,s),n={shader:this.shaders.ndvi,uniforms:{config:o,ndviConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}},de=class extends I{};u([m(Q.ofType(d,3*ye))],de.prototype,"rangeMaps",void 0),u([m(Q.ofType(d,2*ye))],de.prototype,"noDataRanges",void 0),u([m(d)],de.prototype,"unmatchMask",void 0),u([m(d)],de.prototype,"replacementValue",void 0),u([m(x)],de.prototype,"clampRange",void 0);class nt extends k{constructor(){super(...arguments),this.type="RemapShader"}_process(e){const s=this._getPixel(e),{rangeMaps:t,unmatchMask:a,clampRange:r,replacementValue:o}=this.remapConfig,{mapValue:n,includeMask:l}=Wi(s.r,t,ye),c=this.replaceUnmatched?o:a.multiply(s.r),p=W(c,n,l),h=N(p,r.x,r.y),f=this._computeNoDataFactor(s.rrr).multiply(ct(a,l));return new w(h,h,h,s.a).multiply(f)}_computeNoDataFactor(e){const{noDataRanges:s}=this.remapConfig;let t=new b(0,0,0);for(let a=0;a<ye/3;a++){const r=6*a,o=new b(s[r],s[r+2],s[r+4]),n=new b(s[r+1],s[r+3],s[r+5]);t=t.add(B(o,e).multiply(B(e,n)))}return we(j(L(t,new b(1,1,1))))}}u([m(de)],nt.prototype,"remapConfig",void 0),u([v],nt.prototype,"replaceUnmatched",void 0);let nr=class extends F{constructor(){super(...arguments),this.name="RasterRemapProcessor",this.type=z.Remap,this.shaders={remap:new nt}}_process(e,s){const t=e.rasterFunction.parameters,a={replaceUnmatched:t.allowUnmatched&&t.replacementValue!=null},r={rangeMaps:[...t.rangeMaps],noDataRanges:[...t.noDataRanges],unmatchMask:t.allowUnmatched?1:0,replacementValue:t.replacementValue??0,clampRange:t.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.remap,uniforms:{config:o,remapConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}},lr=class extends G{constructor(){super(...arguments),this.type="ReprojectShader"}_colorize(e){return this._getPixel(e)}},ur=class extends F{constructor(){super(...arguments),this.name="RasterReprojectProcessor",this.type=z.Reproject,this.shaders={reproject:new lr}}_process(e,s){const t=e.rasterFunction.parameters,a=this._getInterpolationDefines(s.interpolation,!!t.requireNNEdge),{config:r,projectionConfig:o,projectionDefines:n}=this._getReprojectConfig(s),l={shader:this.shaders.reproject,uniforms:{config:r,projectionConfig:o},defines:{...n,...a,applyPixelMask:!1},optionalAttributes:null,useComputeBuffer:!1},{interpolation:c}=s;s.interpolation="nearest";const{painter:p,context:h}=e;p.submitDrawMesh(h,l,p.quadMesh),s.interpolation=c,s.projected=!0}_getReprojectConfig(e){const{source:s}=e,{names:t,textures:a}=e.getTextures({forProcessing:!0}),r={texture:{texture:a[t.indexOf("u_image")],unit:0},dvsMat3:new Float32Array([2,0,0,0,2,0,-1,-1,0]),coordScale:[1,1],srcImageSize:[s.width,s.height],opacity:1},o=a[t.indexOf("u_transformGrid")],{transformGrid:n}=e,l=!(!o||!n);return{config:r,projectionConfig:l?{transformTexture:{texture:o,unit:1},targetImageSize:[e.width,e.height],transformSpacing:n.spacing,transformGridSize:n.size}:void 0,projectionDefines:{applyProjection:l,lookupProjection:l&&n.spacing[0]===1}}}_getInterpolationDefines(e,s){const t=e==="bilinear"&&s;return{bilinear:t,bicubic:e==="cubic",nearestOnEdge:t}}};class as extends Le{constructor(){super(...arguments),this.type="ShadedReliefShader"}_process(e){const s=super._process(e),{minValue:t,maxValue:a}=this.hillshadeConfig,r=this._getPixel(e),o=a.subtract(t),n=r.r.subtract(t),l=N(n.divide(o),new d(0),new d(1)),c=ke(new w(l,l,l,1),new d(255),this.colormapConfig),p=Ot(c.xyz),h=At(new b(p.xy,s.x.divide(255))).multiply(255);return new w(h,c.a.multiply(s.a))}}u([m(te)],as.prototype,"colormapConfig",void 0);class cr extends F{constructor(){super(...arguments),this.name="RasterShadedReliefProcessor",this.type=z.ShadedRelief,this.shaders={shadedRelief:new as}}_process(e,s,t){const a=e.rasterFunction.parameters,r={isMultidirectional:a.hillshadeType>0},o=s.getRasterCellSize(),n=Ut(a,o),l={...a,factor:n},c={colormapTexture:{texture:t,unit:1},colormapOffset:a.offset,colormapMaxIndex:a.indexedColormap.length/4-1},p=this._getCommonConfig(e,s),h={shader:this.shaders.shadedRelief,uniforms:{config:p,hillshadeConfig:l,colormapConfig:c},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:f,context:g}=e;f.submitDrawMesh(g,h,f.quadMesh)}}let Re=class extends I{};u([m(d)],Re.prototype,"pixelSizePower",void 0),u([m(d)],Re.prototype,"pixelSizeFactor",void 0),u([m(d)],Re.prototype,"zFactor",void 0),u([m(x)],Re.prototype,"cellSize",void 0);class Ge extends k{constructor(){super(...arguments),this.type="SlopeShader",this.isOutputRounded=!1,this.percentRise=!1}_process(e){const{cellSize:s,pixelSizePower:t,pixelSizeFactor:a,zFactor:r}=this.slopeConfig,o=Y(s,new x(t)).multiply(a).add(r).divide(s.multiply(8)),{texture:n}=this.config,l=$e(n,e,this.config.srcImageSize),{x:c,y:p}=ht(l,o),h=ee(c.multiply(c).add(p.multiply(p))),f=this.percentRise?h.multiply(100):je(h).multiply(57.2957795),g=new w(f,f,f,l[9]);return this.isOutputRounded?xe(g):g}}u([v],Ge.prototype,"isOutputRounded",void 0),u([v],Ge.prototype,"percentRise",void 0),u([m(Re)],Ge.prototype,"slopeConfig",void 0);let hr=class extends F{constructor(){super(...arguments),this.name="RasterSlopeProcessor",this.type=z.Slope,this.shaders={slope:new Ge}}_process(e,s){const t=e.rasterFunction.parameters,a={isOutputRounded:t.isOutputRounded,percentRise:t.slopeType==="percent-rise"},r={cellSize:s.getRasterCellSize(),pixelSizePower:t.slopeType==="adjusted"?t.pixelSizePower:0,pixelSizeFactor:t.slopeType==="adjusted"?t.pixelSizeFactor:0,zFactor:t.zFactor},o=this._getCommonConfig(e,s),n={shader:this.shaders.slope,uniforms:{config:o,slopeConfig:r},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}};class Se extends k{constructor(){super(...arguments),this.type="StretchShader",this.isMultiband=!0,this.isOutputRounded=!1,this.useGamma=!1}_process(e){const s=this._getPixel(e);let t=qt(s,this.stretchConfig,this.useGamma,1);return this.isMultiband||(t=new w(t.rrr,t.a)),this.isOutputRounded?xe(t):t}}u([v],Se.prototype,"isMultiband",void 0),u([v],Se.prototype,"isOutputRounded",void 0),u([v],Se.prototype,"useGamma",void 0),u([m(H)],Se.prototype,"stretchConfig",void 0);let pr=class extends F{constructor(){super(...arguments),this.name="RasterStretchProcessor",this.type=z.Stretch,this.shaders={stretch:new Se}}_process(e,s){const t=e.rasterFunction.parameters,a={isMultiband:t.bandCount>1,isOutputRounded:t.isOutputRounded,useGamma:t.useGamma},r=this._getCommonConfig(e,s),o={shader:this.shaders.stretch,uniforms:{config:r,stretchConfig:t},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,o,n.quadMesh)}};const dr=new Map([["Aspect",Ei],["BandArithmetic",Ni],["ColormapToRGB",Zi],["CompositeBand",Qi],["ComputeChange",Xi],["ContrastBrightness",Yi],["Convolution",Ji],["Curvature",Ki],["ExtractBand",er],["Grayscale",sr],["Hillshade",ir],["Local",rr],["Mask",ar],["NDVI",or],["Remap",nr],["Reproject",ur],["ShadedRelief",cr],["Slope",hr],["Statistics",tr],["Stretch",pr]]);class mr extends ut{constructor(){super(...arguments),this.type=z.RasterProcessor,this.shaders={},this._techniques=new Map}shutdown(e){var s;super.shutdown(e),(s=this._fbo)==null||s.dispose(),this._fbo=void 0;for(const t of this._techniques.values())t.shutdown();this._techniques.clear()}render(e,s){this._fbo??(this._fbo=Lt(e.context,le,le));let{name:t}=e.rasterFunction;if(t==="Arithmetic"&&(t="Local"),!this._techniques.has(t)){const a=dr.get(t);if(!a)return;this._techniques.set(t,new a)}this._techniques.get(t).render(e,{...s,processorFbo:this._fbo})}}let fr=class extends Tt{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const s=this._getTileBounds(e),[t,a]=this.tileInfoView.tileInfo.size,r=this.tileInfoView.getTileResolution(e.level);return new $i(e,r,s[0],s[3],t,a)}onAttach(){super.onAttach(),this._colorizerTechnique=new qi,this._processorTechnique=new mr}onDetach(){var e,s;super.onDetach(),(e=this._colorizerTechnique)==null||e.shutdown(),this._colorizerTechnique=void 0,(s=this._processorTechnique)==null||s.shutdown(),this._processorTechnique=void 0}doRender(e){var a;if(!this.visible||e.drawPhase!==Xe.MAP||!this._colorizerTechnique)return;const{rasterFunctionChain:s}=this;if((a=s==null?void 0:s.functions)!=null&&a.length){if(!this._processorTechnique)return;const{functions:r,hasBranches:o}=s;for(const n of r){if(n.name==="Constant"||n.name==="Identity")continue;e.rasterFunction=n,e.hasBranches=o,super.doRender(e);const l=this.children.map((c=>c.bitmap));this._processorTechnique.render(e,{bitmaps:l})}}e.rasterFunction=null,super.doRender(e);const t=this.children.map((r=>r.bitmap));this._colorizerTechnique.render(e,{bitmaps:t})}_getTileBounds(e){const s=this.tileInfoView.getTileBounds(vt(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:t}=this.tileInfoView,a=ws(t.spatialReference);if(a){const r=t.lodAt(e.level);if(!r)return s;const{resolution:o}=r,n=o*t.size[0];s[0]=a*e.world+t.origin.x+e.col*n,s[2]=s[0]+n}}return s}};const gr=[0,0];let V=class extends bs{constructor(){super(...arguments),this._updatingHandles=new xs,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=_s((async(i={})=>{const e=this._rasterFunctionState,s=i.reprocess||e==="gpu"&&!this.canUseWebGLForProcessing||e==="cpu"&&this.canUseWebGLForProcessing;if(s&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState,{type:a}=this;return i.refetch||a!=="raster"&&s||t==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(i.signal))}))}destroy(){this._updatingHandles.destroy()}get canUseWebGLForProcessing(){return!1}get canUseLocalSymbolizerParams(){return(this.canUseWebGLForProcessing||this.type==="rasterVF")&&!this.layerView.hasTilingEffects}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(i){this._set("useWebGLForProcessing",i)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(i){if(this._tileStrategy&&this.useProgressiveUpdate!==i){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(i);this._tileStrategy=new mt({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",i),this.layerView.requestUpdate()}}update(i){var r;this._fetchQueue.pause(),this._fetchQueue.state=i.state,this._tileStrategy.update(i),this._fetchQueue.resume();const{extent:e,resolution:s,scale:t}=i.state,a=this._tileInfoView.getClosestInfoForScale(t);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const o=this._srcResolutions[a.level],n="toJSON"in e?e:vs.fromJSON(e);wt(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,s,o,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((r=this.previousLOD)==null?void 0:r.level)!==a.level&&(this.previousLOD=a,this._symbolizerParams!=null&&this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const i=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(i),this.layerView.requestUpdate()}get updating(){var i;return this._globalUpdateRequested||((i=this._updatingHandles)==null?void 0:i.updating)}attach(){const i=Cs();this._maxIndexedColormapSize=4*(i.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new Ts(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new Rs({tileInfoView:this._tileInfoView,concurrency:e,process:(t,a)=>this._fetchTile(t,a),priority:Ss.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new mt({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,bt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(i){const e=this.container.createTile(i);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(i){this._fetchQueue.abort(i.key.id),this.container.removeChild(i),i.once("detach",(()=>{i.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(i=null){const e=i==null||i.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;i=i||this._tileInfoView.tileInfo.size;const[s,t]=i,a=new As({width:s,height:t,pixels:[new Uint8Array(s*t)],mask:new Uint8Array(s*t),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=a),a}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:i,raster:e}=this.layer,s="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return i!=null&&i.length&&(s!=null&&s.length)&&e.rasterInfo.bandCount!==1?i.map((t=>s[Math.min(t,s.length-1)])):"rasterFunction"in e?s:i}updateRasterFunctionParameters(){}_fetchTile(i,e){const s=this._getFetchOptions(i.level,e.signal);return this.fetchTile(i,s)}_getFetchOptions(i,e){var c;const{canUseWebGLForProcessing:s}=this,{layerView:t}=this,{tileInfo:a}=t,r=!a.isWrappable&&Ti(t.view.spatialReference)!=null,o=s&&this.layer.raster.hasUniqueSourceStorageInfo,{layer:n}=this.layerView,l=(c=n.serviceRasterInfo)!=null&&c.storageInfo.isBsqTile?n.bandIds:void 0;return{allowPartialFill:!0,datumTransformation:t.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[i],timeExtent:t.timeExtent,tileInfo:a,bandIds:l,disableWrapAround:r}}_getCacheSize(i){return i?40:0}_initializeTileInfo(){const{layerView:i}=this,e=i.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:p}=this.layer.tileInfo,h=p.map((({scale:g})=>g)),f=ft.create({spatialReference:e,size:le,scales:h,origin:c});return i.set("tileInfo",f),void(this._srcResolutions=p.map((({resolution:g})=>({x:g,y:g}))))}const{scales:s,srcResolutions:t,isCustomTilingScheme:a}=Ri(this.layer.serviceRasterInfo,e,{tileSize:le,alignGlobalDatasetWithAGOL:!0}),r=ft.create({spatialReference:e,size:le,scales:s}),o=r.origin.x===0;Ps(i.fullExtent);const{xmin:n,ymax:l}=i.fullExtent;(o||a&&r.origin.x>n)&&(r.origin=new Is({x:n,y:l,spatialReference:e})),this._isCustomTilingScheme=a,i.set("tileInfo",r),this._srcResolutions=t??[]}_canUseLayerLODs(){var a;const{layer:i,layerView:e}=this;if(i.raster.tileType!=="Map")return!1;const{lods:s}=i.tileInfo,t=(a=e.view.constraints)==null?void 0:a.effectiveLODs;return(t==null?void 0:t.length)===s.length&&t.every((({scale:r},o)=>Math.abs(r-s[o].scale)<.001))}_computeFetchConcurrency(){const{blockBoundary:i}=this.layer.serviceRasterInfo.storageInfo,e=i[i.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(i,e){var s;if(!this._fetchQueue.has(i.key.id)){try{const t=await this._fetchQueue.push(i.key),a=this._getBandIds();let r=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){r=!1;try{await this._redrawImage((s=this._abortController)==null?void 0:s.signal)}catch(l){Pe(l)&&Ie.getLogger(this).error(l)}this._globalUpdateRequested=!1}this.canUseLocalSymbolizerParams&&this._symbolizerParams==null&&this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(gr,i.key),n=this._tileInfoView.getTileResolution(i.key);await this.updateTileSource(i,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:a,coords:o,resolution:n}),i.once("attach",(()=>this.layerView.requestUpdate())),this.container.addChild(i)}catch(t){Pe(t)||Ie.getLogger(this).error(t)}this.layerView.requestUpdate()}}async _redrawImage(i){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(i):(this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map((async s=>this.updateTileSymbolizerParameters(s,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(i){const e=this._getFetchOptions(this.previousLOD.level,i),s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!(s!=null&&s.pixelBlock))return;const{resolution:t}=this.previousLOD,{isBsqTile:a}=this.layer.raster.rasterInfo.storageInfo,r=a?null:this._getBandIds(),o=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(r),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:r});!this.canUseWebGLForProcessing&&o&&o.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(o.factor=o.factor.map((n=>255*n)),o.minOutput=Math.round(255*o.minOutput),o.maxOutput=Math.round(255*o.maxOutput)),this._globalSymbolizerParams=o}_updateSymbolizerParams(){const{resolution:i}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:i,y:i},bandIds:e})}_updateBlockCacheRegistry(i=!1){var l;const{layer:e,layerView:s}=this,{raster:t}=e,{multidimensionalDefinition:a}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:s.timeExtent}),r=t.rasterInfo.multidimensionalInfo?t.getSliceIndex(a):null,o=t.rasterInfo.storageInfo.isBsqTile&&((l=e.bandIds)!=null&&l.length)?e.bandIds:null,n=vi(t.rasterId,r,o);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&bt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Ci(n,t.rasterInfo),i){const{view:c}=s,p=this._tileInfoView.getClosestInfoForScale(c.scale),h=this._srcResolutions[p.level];wt(n,this._blockCacheRegistryId,c.extent,c.resolution,h,t.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const i=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh((e=>i.push(this._enqueueTileFetch(e)))),await this._updatingHandles.addPromise(Promise.allSettled(i))}};u([S()],V.prototype,"_globalUpdateRequested",void 0),u([S()],V.prototype,"attached",void 0),u([S()],V.prototype,"canUseWebGLForProcessing",null),u([S()],V.prototype,"canUseLocalSymbolizerParams",null),u([S()],V.prototype,"container",void 0),u([S()],V.prototype,"layer",void 0),u([S()],V.prototype,"layerView",void 0),u([S()],V.prototype,"scheduler",void 0),u([S()],V.prototype,"type",void 0),u([S()],V.prototype,"useWebGLForProcessing",null),u([S()],V.prototype,"useProgressiveUpdate",null),u([S()],V.prototype,"timeExtent",void 0),u([S()],V.prototype,"updating",null),V=u([Ee("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],V);let oe=class extends V{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){var r;const{loaded:i,symbolizer:e}=this.layer;if(!i||!e)return!1;const s=(r=e.lookup.colormapLut)==null?void 0:r.indexedColormap,t=s&&s.length>this._maxIndexedColormapSize,a=Gs(this.layer.serviceRasterInfo);return!(zs("ios")&&a>4)&&this.useWebGLForProcessing&&e.canRenderInWebGL&&!t&&!(this.layer.interpolation==="majority"&&Ct(this.layer))}attach(){super.attach(),this.container=new fr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(i,e){return this.layer.fetchTile(i.level,i.row,i.col,e)}updateRasterFunctionParameters(){var f;const{raster:i,type:e}=this.layer,{container:s}=this;if(i.datasetFormat!=="Function"||e==="wcs")return s.rasterFunctionChain=null,s.children.forEach((g=>{const{bitmap:y}=g;y&&(y.suspended=!0,y.processed=!1,y.projected&&(y.invalidateTexture(),y.rasterTexture=null))})),void(this._rasterFunctionState="na");const t=this._rasterFunctionState,{rasterFunction:a,primaryRasters:r}=i,o=a.supportsGPU&&(!r||r.rasters.length<=1),n=o?a.flatWebGLFunctionChain:null,{renderer:l}=this.layer,c=!o||!(n!=null&&n.functions.length)||(l==null?void 0:l.type)==="raster-stretch"&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;s.rasterFunctionChain=c?null:this._addProjection(n);const p=a==null?"na":s.rasterFunctionChain?"gpu":"cpu",h=t===p||t==="na"&&p==="cpu"&&((f=n==null?void 0:n.functions)==null?void 0:f.length)===0;s.children.forEach((g=>{const{bitmap:y}=g;y&&(y.suspended=!h,y.processed=!1,y.processedTexture=null)})),this._rasterFunctionState=p}async updateTileSource(i,e){const s=this._getBandIds(),t=this._getLayerInterpolation(),{canUseWebGLForProcessing:a}=this,{source:r,globalSymbolizerParams:o,suspended:n,coords:l,resolution:c}=e,p=this.layerView.hasTilingEffects?o:e.symbolizerParams,{bitmap:h}=i;if([h.x,h.y]=l,h.resolution=c,(r==null?void 0:r.pixelBlock)!=null){const y={extent:r.extent,pixelBlock:r.pixelBlock,srcPixelSize:r.srcTilePixelSize};if(h.rawPixelData=y,a)h.source=r.pixelBlock,h.isRendereredSource=!1;else{const _=await this.layer.applyRenderer(y,(o==null?void 0:o.type)==="stretch"?o:void 0);h.source=_,h.isRendereredSource=!0}h.symbolizerParameters=a?p:null,h.transformGrid=a?r.transformGrid:null}else{const y=this.createEmptyTilePixelBlock();h.source=y,h.symbolizerParameters=a?p:null,h.transformGrid=null}const{isBsqTile:f}=this.layer.raster.rasterInfo.storageInfo;h.bandIds=a&&!f?s:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=t,h.suspended=n;const{raster:g}=this.layer;if(Os(g)){const y=g.getClippingGeometry(this.layerView.view.spatialReference);if(y){const _=g.getTileExtentFromTileInfo(i.key.level,i.key.row,i.key.col,this._tileInfoView.tileInfo);h.mask=qs({srcExtent:_,geometry:y,size:[h.width,h.height]})}}h.invalidateTexture()}async updateTileSymbolizerParameters(i,e){const{local:s,global:t}=e,a=this._getBandIds(),r=this._getLayerInterpolation(),{canUseWebGLForProcessing:o}=this,{bitmap:n}=i,{rawPixelData:l}=n;o||l==null?(n.isRendereredSource&&l!=null&&(n.source=l.pixelBlock),n.isRendereredSource=!1):(n.source=await this.layer.applyRenderer(l,(t==null?void 0:t.type)==="stretch"?t:void 0),n.isRendereredSource=!0),n.symbolizerParameters=o?this.layerView.hasTilingEffects?t:s:null;const{isBsqTile:c}=this.layer.raster.rasterInfo.storageInfo;n.bandIds=o&&!c?a:null,n.interpolation=r,n.suspended=!1}_getLayerInterpolation(){const{interpolation:i,renderer:e}=this.layer;if(!e)return i;const s=e.type;return s==="raster-colormap"||s==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?i==="bilinear"||i==="cubic"?"bilinear":"nearest":i}_addProjection(i){var e;return(e=i==null?void 0:i.functions)!=null&&e.length&&!i.hasFocalFunction&&i.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:i.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),i}};u([S()],oe.prototype,"canUseWebGLForProcessing",null),u([S()],oe.prototype,"container",void 0),u([S()],oe.prototype,"layer",void 0),u([S()],oe.prototype,"type",void 0),oe=u([Ee("esri.views.2d.layers.imagery.ImageryTileView2D")],oe);class yr extends _t{constructor(e,s,t,a,r,o,n=null){super(e,s,t,a,r,o),this.tileData=new Fs(n),this.tileData.coordScale=[r,o],this.tileData.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:ze(),tileMat3:ze()}}setTransform(e){super.setTransform(e);const s=this.resolution/(e.resolution*e.pixelRatio),t=this.transforms.tileMat3,[a,r]=this.tileData.offset,o=[this.x+a*this.resolution,this.y-r*this.resolution],[n,l]=e.toScreenNoRotation([0,0],o),{symbolTileSize:c}=this.tileData.symbolizerParameters,p=Math.round((this.width-this.tileData.offset[0])/c)*c,h=Math.round((this.height-this.tileData.offset[1])/c)*c,f=p/this.rangeX*s,g=h/this.rangeY*s;ks(t,f,0,0,0,g,0,n,l,1),xt(this.transforms.displayViewScreenMat3,e.displayViewMat3,t),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class wr extends Tt{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const s=this.tileInfoView.getTileBounds(vt(),e),[t,a]=this.tileInfoView.tileInfo.size,r=this.tileInfoView.getTileResolution(e.level);return new yr(e,r,s[0],s[3],t,a)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Bs],target:()=>this.children.map((t=>t.tileData)),drawPhase:Xe.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===Xe.MAP&&this.symbolTypes.forEach((s=>{e.renderPass=s,super.doRender(e)}))}}let me=class extends V{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}async fetchTile(i,e){var t;e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(i.level,i.row,i.col,e);return((t=this.layer.serviceRasterInfo)==null?void 0:t.dataType)==="vector-magdir"&&(s!=null&&s.pixelBlock)&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,"vector-magdir",e)),s}updateTileSource(i,e){const s=e.symbolizerParams,{tileData:t}=i;t.key=i.key,t.width=this._tileInfoView.tileInfo.size[0],t.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:a}=s,{source:r}=e;if(t.offset=this._getTileSymbolOffset(t.key,a),(r==null?void 0:r.pixelBlock)!=null){const o={extent:r.extent,pixelBlock:r.pixelBlock};t.rawPixelData=o,t.symbolizerParameters=s,t.source=this._sampleVectorFieldData(r.pixelBlock,s,t.offset)}else{const o=[Math.round((this._tileInfoView.tileInfo.size[0]-t.offset[0])/a),Math.round((this._tileInfoView.tileInfo.size[1]-t.offset[1])/a)],n=this.createEmptyTilePixelBlock(o);t.source=n,t.symbolizerParameters=s}return t.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(i,e){var n;const s=e.local,{symbolTileSize:t}=s,{tileData:a}=i;a.offset=this._getTileSymbolOffset(a.key,t);const r=a.symbolizerParameters.symbolTileSize;a.symbolizerParameters=s;const o=(n=a.rawPixelData)==null?void 0:n.pixelBlock;return o!=null&&r!==t&&(a.source=this._sampleVectorFieldData(o,a.symbolizerParameters,a.offset)),Promise.resolve()}attach(){super.attach(),this.container=new wr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=Be((()=>this.layer.renderer),(i=>this._updateSymbolType(i)))}detach(){var i;super.detach(),this.container.removeAllChildren(),(i=this._handle)==null||i.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(i,e){const s=i.col*this._tileInfoView.tileInfo.size[0]%e,t=i.row*this._tileInfoView.tileInfo.size[1]%e;return[s>e/2?e-s:-s,t>e/2?e-t:-t]}_sampleVectorFieldData(i,e,s){const{symbolTileSize:t}=e;return Us(i,"vector-uv",t,s)}_updateSymbolType(i){(i==null?void 0:i.type)==="vector-field"&&(this.container.symbolTypes=i.style==="wind-barb"?["scalar","triangle"]:i.style==="simple-scalar"?["scalar"]:["triangle"])}};u([S()],me.prototype,"container",void 0),u([S()],me.prototype,"layer",void 0),u([S()],me.prototype,"type",void 0),me=u([Ee("esri.views.2d.layers.imagery.VectorFieldTileView2D")],me);let ne=class extends Si(Ii(Ds(Pi))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(i){this._useWebGLForProcessing=i,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=i)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(i){this._useProgressiveUpdate=i,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=i)}get displayParameters(){const{layer:i}=this,e=this._get("displayParameters");return i.renderer&&i.visible?{bandIds:i.bandIds,renderer:i.renderer,interpolation:i.interpolation,multidimensionalDefinition:i.multidimensionalDefinition,rasterFunction:i.type==="imagery-tile"?i.rasterFunction:null}:e}update(i){var e;(e=this.subview)==null||e.update(i),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([Be((()=>this.displayParameters),((i,e)=>{var c,p,h,f;const s=i.interpolation!==(e==null?void 0:e.interpolation)&&(i.interpolation==="majority"||(e==null?void 0:e.interpolation)==="majority")&&Ct(this.layer),t=!!((p=(c=this.layer.serviceRasterInfo)==null?void 0:c.storageInfo)!=null&&p.isBsqTile)&&((h=i.bandIds)==null?void 0:h.join())!==((f=e==null?void 0:e.bandIds)==null?void 0:f.join()),a=i.renderer!==(e==null?void 0:e.renderer)&&this._getSubviewType(e==null?void 0:e.renderer)!==this._getSubviewType(i.renderer);a&&this._updateSubview();const r=i.multidimensionalDefinition!==(e==null?void 0:e.multidimensionalDefinition),o=i.rasterFunction!==(e==null?void 0:e.rasterFunction),n=o&&!this._useWebGLForProcessing,l=r||s||a||n||t;this.subview.redrawOrRefetch({refetch:l,reprocess:o}).catch((g=>{Pe(g)||Ie.getLogger(this).error(g)})),this.notifyChange("updating")})),Be((()=>this.layer.multidimensionalSubset??null),((i,e)=>{const{multidimensionalDefinition:s}=this.layer;s!=null&&gt(s,i)!==gt(s,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch((t=>{Pe(t)||Ie.getLogger(this).error(t)})),this.notifyChange("updating"))}),$s),Be((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch((i=>{Pe(i)||Ie.getLogger(this).error(i)}))}),Ms)])}detach(){var i;this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(i=this.subview)==null||i.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){var a;const{renderer:i}=this.layer;if(!i)return;const e=this._getSubviewType(i);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(a=this.subview)==null||a.destroy(),this.subview=null}const{layer:s}=this;let t;if(t=e==="rasterVF"?new me({layer:s,layerView:this,scheduler:this.scheduler}):e==="flow"?new Vs({layer:s,layerView:this,scheduler:this.scheduler}):new oe({layer:s,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in t&&(t.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in t&&(t.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in t){const{subview:r}=this;t.previousLOD=r&&"previousLOD"in r?r.previousLOD:null}this._attachSubview(t),this.subview=t,this.requestUpdate()}_attachSubview(i){i&&!i.attached&&(i.attach(),i.attached=!0,this.container.addChildAt(i.container,0))}_detachSubview(i){i!=null&&i.attached&&(this.container.removeChild(i.container),i.detach(),i.attached=!1)}_getSubviewType(i){const e=i==null?void 0:i.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};u([S()],ne.prototype,"subview",void 0),u([S()],ne.prototype,"useWebGLForProcessing",null),u([S()],ne.prototype,"useProgressiveUpdate",null),u([S({readOnly:!0})],ne.prototype,"displayParameters",null),ne=u([Ee("esri.views.2d.layers.ImageryTileLayerView2D")],ne);const Ja=ne;export{Ja as default};
