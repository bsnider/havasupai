import{Q as x,r as t,m as l,d as p,ae as L,eo as m,fY as b,my as w,ep as S,a0 as g,cB as v}from"./index-BdmtnMtL.js";import{l as E}from"./Analysis-DKxx33qe.js";import{c as j}from"./SlicePlane-BvNb6Yq7.js";let a=class extends x{constructor(e){super(e),this.layerId=""}static fromLayer(e){return new this({layerId:e.type==="building-component"?e.layer.id:e.id,sublayerId:e.type==="building-component"?e.id:void 0})}};t([l({type:String,json:{write:{isRequired:!0}}})],a.prototype,"layerId",void 0),t([l({type:Number,json:{write:!0}})],a.prototype,"sublayerId",void 0),a=t([p("esri.analysis.support.SliceAnalysisExcludedLayer")],a);let r=class extends E{constructor(e){super(e),this.type="slice",this.tiltEnabled=!1,this.shape=null,this.excludeGroundSurface=!1}get excludedLayers(){return this._get("excludedLayers")||new L}set excludedLayers(e){this._set("excludedLayers",m(e,this._get("excludedLayers")))}writeExcludedLayers(e,n,s,o){e.length!==0&&(n[s]=e.toArray().map((u=>a.fromLayer(u).toJSON(o))))}readExcludedLayers(e,n,s){var u;const o=s==null?void 0:s.initiator;o&&((u=s==null?void 0:s.hooks)==null||u.onAfterLoad((async()=>{for(const c of e){const{layerId:h,sublayerId:y}=a.fromJSON(c,s),i=o.allLayers.find((({id:d})=>d===h));if(i)if(y!=null&&"allSublayers"in i){await i.load();const d=i.allSublayers.find((({id:f})=>f===y));d&&"type"in d&&d.type==="building-component"&&this.excludedLayers.add(d)}else this.excludedLayers.add(i)}})))}get valid(){var e;return((e=this.shape)==null?void 0:e.position)!=null}equals(e){return this===e||super.equals(e)&&b(this.shape,e.shape)&&this.tiltEnabled===e.tiltEnabled&&w(this.excludedLayers.toArray(),e.excludedLayers.toArray())&&this.excludeGroundSurface===e.excludeGroundSurface}clear(){this.shape=null}};t([l({type:["slice"],json:{read:!1,write:{isRequired:!0}}})],r.prototype,"type",void 0),t([l({type:Boolean,nonNullable:!0,json:{write:!0,default:!1}})],r.prototype,"tiltEnabled",void 0),t([l({types:{key:"type",base:null,typeMap:{plane:j},defaultKeyValue:"plane"},json:{write:{isRequired:!0}}})],r.prototype,"shape",void 0),t([l({cast:S,clonable:e=>e.slice(),json:{type:[a],write:!0}})],r.prototype,"excludedLayers",null),t([g("excludedLayers")],r.prototype,"writeExcludedLayers",null),t([v("excludedLayers")],r.prototype,"readExcludedLayers",null),t([l({type:Boolean,nonNullable:!0,json:{write:!0}})],r.prototype,"excludeGroundSurface",void 0),t([l({readOnly:!0})],r.prototype,"valid",null),r=t([p("esri.analysis.SliceAnalysis")],r);const q=r;export{q as default};
