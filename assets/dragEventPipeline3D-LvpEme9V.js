import{f7 as D,aL as E,f8 as S,f9 as x,fa as m,fb as $,fc as y,fd as g,fe as H,aU as i,ff as N,fg as U,fh as h,fi as I,fj as G,bh as P,fk as A,fl as k,eI as M,fm as R,fn as q,fo as F,fp as b,fq as C,fr as L,fs as _,aW as j,aV as z}from"./index-CxDa6KP7.js";import{w as B}from"./InteractiveToolBase-CkW_XXCD.js";function J(n,r){return O(n,(()=>r))}function en(n){return O(n,(r=>r.plane))}function O(n,r){const t=i(),l=i();let s=!1;return e=>{const o=r(e);if(e.action==="start"){const c=m(e.screenStart,$(y.get())),u=g(n.state.camera,c,w);u!=null&&(s=H(o,u,t))}if(!s)return null;const a=m(e.screenEnd,$(y.get())),f=g(n.state.camera,a,w);return f==null?null:H(o,f,l)?{...e,renderStart:t,renderEnd:l,plane:o,ray:f}:null}}function K(n,r,t=0,l=null,s=null){let e=null;return o=>{if(o.action==="start"&&(e=n.sceneIntersectionHelper.intersectElevationFromScreen(S(o.screenStart.x,o.screenStart.y),r,t,s),e!=null&&l!=null&&!x(e,e,l))||e==null)return null;const a=n.sceneIntersectionHelper.intersectElevationFromScreen(S(o.screenEnd.x,o.screenEnd.y),r,t,s);return a!=null&&(l==null||x(a,a,l))?{...o,mapStart:e,mapEnd:a}:null}}function Q(n,r,t,l=null,s=null){return K(n,t,D(r,n,t),l,s)}function tn(n,r,t,l){const s=t.toMap(n.screenStart);return s!=null?Q(r,s,t.elevationInfo,l):null}function V(n,r){const t=T,l=v,s=k();n.renderCoordsHelper.worldUpAtPosition(r,t);const e=M(q(s),t,R(l,r,n.state.camera.eye));return M(e,e,t),F(r,e,s)}function rn(n,r,t){let l=null;const s=new B;return s.next(J(n,V(n,r))).next(W(n,r)).next(X(n,t)).next((e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,l=e})),e=>(l=null,s.execute(e),l)}function W(n,r){const t=i(),l=b(r);n.renderCoordsHelper.worldUpAtPosition(r,t);const s=i(),e=i(),o=a=>(R(a,a,r),L(t,a,a),n.viewingMode==="global"&&b(a)*Math.sign(_(t,a))<.001-l&&R(a,j(a,t,.001),r),z(a,a,r),a);return a=>(a.renderStart=o(C(s,a.renderStart)),a.renderEnd=o(C(e,a.renderEnd)),a)}function ln(n,r){const t=l=>{const s=m(l,$(Y)),e=g(n.state.camera,s,w);if(e==null)return null;const o=A(r,e,T,v);return o==null?void 0:o[0]};return l=>{const s=t(l.screenStart);if(s==null)return null;const e=t(l.screenEnd);return e==null?null:{...l,renderStart:s,renderEnd:e}}}function X(n,r){const t=n.renderCoordsHelper;return l=>{const s=t.fromRenderCoords(l.renderStart,new E({spatialReference:r})),e=t.fromRenderCoords(l.renderEnd,new E({spatialReference:r}));return s!=null&&e!=null?{...l,mapStart:s,mapEnd:e}:null}}var p;function sn(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function an(n,r=null){const t=new U(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=h.MIN,t.options.hud=!1;const l=S(),s={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},e=i(),o=r??n.spatialReference,a=c=>{n.map.ground&&n.map.ground.opacity<1?s.exclude.add(I):s.exclude.delete(I),n.sceneIntersectionHelper.intersectIntersectorScreen(m(c,l),t,s);const u=t.results.min;let d;if(u.getIntersectionPoint(e))d=u.intersector===G.TERRAIN?p.GROUND:p.OTHER;else{if(!t.results.ground.getIntersectionPoint(e))return null;d=p.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(e,new E({spatialReference:o})),surfaceType:d}};let f;return c=>{if(c.action==="start"){const d=a(c.screenStart);f=d!=null?d.location:null}if(f==null)return null;const u=a(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:f,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(p||(p={}));const Y=P(),T=i(),v=i(),w=N();export{ln as A,an as B,en as C,X as F,rn as G,Q as M,tn as N,J as T,p as q,sn as z};
