import{dy as G,b1 as S,tw as D,di as T,Z as E,ic as B,r as c,m as p,d as v,pB as $,tx as U,fj as M,fM as H,ty as P,tz as A,tA as x,pC as V,tB as N,hu as Q,cp as J,aZ as q,cJ as z,tC as j,tD as W,tE as Z,tF as Y,e as K,oM as X,bc as ee,oc as re,ml as k,c5 as te,bm as I,u as se,dz as ne,ap as L,am as ie,dt as ae,at as oe}from"./index-CA3J3HgS.js";import{t as de}from"./FeatureLayerViewBase3D-BDoXbqQp.js";import{n as le}from"./utils-m7ja8c8d.js";import{k as ue}from"./LodRenderer-DM8sLoGG.js";import{s as ce}from"./highlightUtils-CnlLgv1H.js";import"./HeatmapDensity.glsl-B_OIS_nP.js";import"./timeSupport-DcIyHYOr.js";import"./dehydratedFeatureComparison-CiK2oDXJ.js";import"./utils-CRPjFoLJ.js";import"./cimSymbolUtils-BcwtBP16.js";import"./queryForSymbologySnapping-BCqXCgd4.js";import"./Graphics3DFeatureProcessor-CHfoj6UN.js";import"./hash-CcEbRgUF.js";import"./renderingInfoUtils-BYCrXbyj.js";import"./ExtentSet-DXI8r6hA.js";import"./optimizedFeatureQueryEngineAdapter-D-Nn7S_S.js";import"./PooledRBush-Cb3BoktC.js";import"./popupUtils-DN9oIyBS.js";import"./Graphics3DObjectStates-DF91xPx2.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-MtPgm5NF.js";import"./QueryEngine-DCvQaN7A.js";import"./WhereClauseCache-D2VgBJCm.js";import"./WhereClause-BOYDU9pU.js";import"./timeSupport-BuGDNGmR.js";import"./queryUtils-KJi8X4BK.js";import"./json-Wa8cmqdu.js";import"./utils-DGVF6jG4.js";import"./utils-eCvMMq1J.js";import"./utils-BxmdUlsO.js";import"./ClassBreaksDefinition-lrne2JzL.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-BK3ig2v2.js";import"./featureServiceUtils-FjGB6lKb.js";import"./FeatureStore-Ck5uMFdq.js";import"./BoundsStore-BTrQ3Oww.js";import"./heatmapTextureUtils-C_U0JpQW.js";import"./LayerView3D-JeQQWbeY.js";import"./query-CVPM8w9Y.js";import"./pbfQueryUtils-BUDaWyVi.js";import"./pbf-Dp9wh2RO.js";import"./EventedSet-DST62ekg.js";import"./FeatureLayerView-DAmyGq9C.js";import"./FeatureIdInfo-iL5WjyEH.js";import"./constants-B4mRqufT.js";import"./featurePopupQueryUtils-CDtam6DV.js";import"./LayerView-LfRtBo31.js";import"./RefreshableLayerView-G0vLJ6co.js";let m=class extends G{constructor(e){super(e),this.schedule=null,this._workerUpdating=!0}get updating(){return this._workerUpdating}initialize(){const{layer:e,layerView:r,viewSpatialReference:s,renderSpatialReference:n}=this,a=e.elevationInfo;this._elevationContext=S.fromElevationInfo(a),this._workerHandle=new he(this.schedule,{createTexture:async({data:i,parameters:o})=>({result:await this.renderer.createTexture(i,o),transferList:[]}),releaseTexture:async({uid:i})=>(await this.renderer.releaseTexture(i),g),createMaterial:async({materialJSON:i})=>(await this.renderer.createMaterial(i),g),destroyMaterial:async({materialId:i})=>(await this.renderer.destroyMaterial(i),g),createDirectRenderer:async({materialId:i})=>(await this.renderer.createDirectRenderer(i),g),destroyDirectRenderer:async({materialId:i})=>(await this.renderer.destroyDirectRenderer(i),g),createLoDRenderer:async({rendererId:i,lodRenderGeometry:o},d)=>(await this.renderer.createLoDRenderer(i,o,(d==null?void 0:d.signal)??void 0),g),destroyLoDRenderer:async({rendererId:i},o)=>(await this.renderer.destroyLoDRenderer(i,(o==null?void 0:o.signal)??void 0),g),dispatchRenderCommands:async({commands:i})=>(await this.renderer.executeRenderCommands(i),g),applyElevationAlignment:async({mapPoints:i})=>{const{viewSpatialReference:o,elevationProvider:d,renderCoordsHelper:u}=this,h=le(i,o,this._elevationContext,d,u);return{result:h,transferList:[h.buffer]}}}),this.addResolvingPromise((async()=>{var d,u,h,l;await e.load();const i={url:((d=e.parsedUrl)==null?void 0:d.path)??"",baseQuery:e.createQuery().toJSON(),objectIdField:e.objectIdField,capabilities:e.capabilities,fieldIndex:e.fieldsIndex.toJSON(),timeInfo:(u=e.timeInfo)==null?void 0:u.toJSON(),elevationInfo:a==null?void 0:a.toJSON(),fullExtent:(h=e.fullExtent)==null?void 0:h.toJSON(),renderer:(l=e.renderer)==null?void 0:l.toJSON()},o={fullOpacity:r.fullOpacity};await this._workerHandle.invokeMethod("setup",{viewSpatialReference:s.toJSON(),renderSpatialReference:n.toJSON(),viewingMode:this.viewingMode,layerInfo:i,layerViewInfo:o})})()),this.addHandles(this._workerHandle.on("notify-updating",(({updating:i})=>{this._workerUpdating=i})))}onTileTreeChange(e){this._workerHandle.invokeMethod("onTileTreeChange",{tiles:e.items.map(pe)})}onElevationChange(e){var r;this._workerHandle.invokeMethod("onElevationChange",{context:e.context,spatialReference:(r=e.spatialReference)==null?void 0:r.toJSON(),extent:D(e.extent)})}onLayerViewOpacityChange(e){this._workerHandle.invokeMethod("onLayerViewOpacityChange",e)}onRendererChange(e){const r=e==null?void 0:e.toJSON();this._workerHandle.invokeMethod("onRendererChange",r)}async executeQuery(e,r){const s=await this._workerHandle.invokeMethod("executeQuery",e==null?void 0:e.toJSON(),r),n=T.fromJSON(s);return this._ensureLayerOnFeatures(n),n}async executeQueryForIds(e,r){return await this._workerHandle.invokeMethod("executeQueryForIds",e==null?void 0:e.toJSON(),r)}async executeQueryForCount(e,r){return await this._workerHandle.invokeMethod("executeQueryForCount",e==null?void 0:e.toJSON(),r)}async executeQueryForExtent(e,r){const{count:s,extent:n}=await this._workerHandle.invokeMethod("executeQueryForExtent",e==null?void 0:e.toJSON(),r);return{count:s,extent:E.fromJSON(n)}}async executeQueryForLatestObservations(e,r){const s=await this._workerHandle.invokeMethod("executeQueryForLatestObservations",e==null?void 0:e.toJSON(),r),n=T.fromJSON(s);return this._ensureLayerOnFeatures(n),n}_ensureLayerOnFeatures(e){const{layer:r}=this;for(const s of e.features)s.layer=r,s.sourceLayer=r}};c([p()],m.prototype,"updating",null),c([p({constructOnly:!0})],m.prototype,"schedule",void 0),c([p({constructOnly:!0})],m.prototype,"layer",void 0),c([p({constructOnly:!0})],m.prototype,"layerView",void 0),c([p({constructOnly:!0})],m.prototype,"viewSpatialReference",void 0),c([p({constructOnly:!0})],m.prototype,"renderSpatialReference",void 0),c([p({constructOnly:!0})],m.prototype,"viewingMode",void 0),c([p({constructOnly:!0})],m.prototype,"renderer",void 0),c([p({constructOnly:!0})],m.prototype,"elevationProvider",void 0),c([p({constructOnly:!0})],m.prototype,"renderCoordsHelper",void 0),c([p()],m.prototype,"_workerUpdating",void 0),m=c([v("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorkerHandle")],m);let he=class extends B{constructor(e,r){super("Feature3DPipelineWorker","setup",{},e,{strategy:"dedicated",client:r})}};function pe({id:t,lij:e,extent:r}){return{id:t,lij:e,extent:r}}const g={result:void 0};let F=class extends ${constructor(e){super(e),this._glMaterials=null,this._produces=new Map,this._renderGeometries=new Map,this._vaoCache=null,this._drawParameters=new U,this._bufferWriter=null,this.slicePlaneEnabled=!1,this.isGround=!1,this.type=e.material instanceof H?M.HUD:M.OBJECT,this.layerViewUid=e.layerViewUid}get produces(){return this._produces}get numFeatures(){let r=0;return this._renderGeometries.forEach((s=>r+=s.numElements/6)),r}get usedMemory(){let e=0;return this._renderGeometries.forEach((r=>{e+=r.vao.usedMemory})),e}intersect(e,r,s,n){const{material:a,_bufferWriter:i,layerViewUid:o,_renderGeometries:d}=this;i.intersect!=null&&d.forEach((({buffer:u,localOrigin:h,items:l})=>i.intersect(u.data,a.parameters,h,e,s,n,((f,w,y,R)=>{if(!l.visibilities[y])return;const b=l.objectIds[y];e.handleObjectIntersection({object:{id:A,graphicUid:b,layerViewUid:o,boundingVolumeWorldSpace:new P,geometries:[{material:a}]},geometryId:0,primitiveIndex:y},f,w,null,R)}))))}initialize(){this._bufferWriter=this.material.createBufferWriter(),this.material.produces.forEach(((e,r)=>{this._produces.set(r,(s=>s!==x.Highlight&&s!==x.ShadowHighlight&&e(s)))}))}destroy(){this._glMaterials.dispose();const e=this._renderGeometries.keys();for(const r of e)this.removeRenderGeometryBuffer(r)}acquireTechniques(e){const r=this.material;if(!r.shouldRender(e))return null;const{output:s,bind:n}=e,a=r.produces.get(n.slot);if(!(a!=null&&a(s))||s===x.Highlight||s===x.ShadowHighlight)return null;const i=this._glMaterials.load(e.rctx,n.slot,s);return i==null?void 0:i.beginSlot(n)}render(e,r){const s=this._renderGeometries;if(s.size===0)return;const{bind:n}=e,a=n.slot===V.OCCLUDER_MATERIAL||n.slot===V.TRANSPARENT_OCCLUDER_MATERIAL?n.slot:null,i=e.rctx;i.runAppleAmdDriverHelper(),i.bindTechnique(r,n,this.material.parameters);const o=r.program;for(const[d,u]of s){const{vao:h,localOrigin:l,drawCalls:f}=u;this._drawParameters.origin=l,o.bindDraw(n,this.material.parameters,this._drawParameters),r.ensureAttributeLocations(h),i.bindVAO(h),i.setPipelineState(r.getPipeline(!1,a));for(const w of f)i.drawArrays(r.primitiveType,w.start,w.count)}}initializeRenderContext(e){this._glMaterials=new N(this.material,e.materials),this._vaoCache=e.renderContext.rctx.getVaoCache(this.material.vertexAttributeLocations,Q(this._bufferWriter.vertexBufferLayout))}uninitializeRenderContext(){}addRenderGeometryBuffer(e,r,s,n){this.removeRenderGeometryBuffer(e);const{data:a,elementCount:i}=r,o=this._vaoCache.newVao(a.byteLength);o.vertexBuffers.get("geometry").setSubData(new Uint8Array(a),0,0,a.byteLength);const d={localOrigin:n,numElements:i,buffer:r,items:s,vao:o,drawCalls:this._produceDrawCalls(s)};this._renderGeometries.set(e,d)}updateRenderGeometryBuffer(e,r,s,n){const{data:a,elementCount:i}=r,o=this._renderGeometries.get(e);if(o==null)return;this._vaoCache.deleteVao(o.vao);const d=this._vaoCache.newVao(a.byteLength);d.vertexBuffers.get("geometry").setSubData(new Uint8Array(a),0,0,a.byteLength),o.localOrigin=n,o.numElements=i,o.buffer=r,o.items=s,o.vao=d,o.drawCalls=this._produceDrawCalls(s)}removeRenderGeometryBuffer(e){const r=this._renderGeometries.get(e);r!=null&&(this._vaoCache.deleteVao(r.vao),this._renderGeometries.delete(e))}updateVisibility(e,r){const s=this._renderGeometries.get(e);if(s==null)return;const{items:n}=s;if(n.visibilities.length!==r.length)throw new Error("Unexpected mismatch between old and new visibility flag buffer length.");n.visibilities=r,s.drawCalls=this._produceDrawCalls(n)}hasHighlight(){return!1}_produceDrawCalls(e){const{visibilities:r,ranges:s}=e,n=[];if(me(s)){if(s.numItems===0)return[];const a=s.numVertices;let i=null;for(let o=0;o<s.numItems;++o)r[o]?i==null?(i={start:o*a,count:a},n.push(i)):i.count+=a:i=null}else{const a=s.counts,i=a.length;if(i===0)return[];let o=null,d=0;for(let u=0;u<i;++u){const h=r[u],l=a[u];h?o==null?(o={start:d,count:l},n.push(o)):o.count+=l:o=null,d+=l}}return n}};function me(t){return"numItems"in t}c([p({constructOnly:!0})],F.prototype,"material",void 0),F=c([v("esri.views.3d.layers.graphics.pipeline.rendering.DirectRenderer")],F);let O=class{constructor(t){this._optionalFields=new Array,this._instanceGroupToIndices=new Map,this._instanceIndexToFeatureId=new Map,this._disposeResourceHandles=new Array,this._lodRendererResources=null,this._numFeatures=0,this.layerViewUid=t.layerViewUid,this.view=t.view,this.sharedResources=this.view.sharedSymbolResources,this.scheduler=this.view.resourceController.scheduler}get numFeatures(){return this._numFeatures}get usedMemory(){var r;const t=(r=this._lodRendererResources)==null?void 0:r.lodRenderer,e=t==null?void 0:t.symbol;return((e==null?void 0:e.computeUsedMemory())??0)+16*this._instanceIndexToFeatureId.size}destroy(){this._disposeResourceHandles.forEach((t=>t()))}async doLoad(t,e,r){J("enable-feature:objectAndLayerId-rendering")&&this._optionalFields.push(q.OLIDCOLOR);const s=ye((d=>e(d)),t),n=this.view.stage,a=s.getMaterials(),i=s.getTextures();n.addTextures(i),this._addDisposeResource((()=>{i.forEach((d=>d.unload())),n.removeTextures(i)})),await Promise.all(i.map((d=>this.view.stage.schedule((()=>d.load(n.renderView.renderingContext)),r)))),z(r);const o=await this._createLodRenderer(s,r);this._lodRendererResources={lodRenderer:o,materials:a,textures:i}}addInstances(t,e){const r=this._lodRendererResources;if(r==null)return;const s=r.lodRenderer;if(s==null)return;const{featureIds:n,localTransforms:a,globalTransforms:i,visibility:o}=e,d=new Array,u=s.instanceData,h=n.length,l=this._instanceIndexToFeatureId;for(let f=0;f<h;++f){const w=n[f],y=u.addInstance(),R=u.view,b=16*f;R.localTransform.copyFromTypedBuffer(y,a,b),R.globalTransform.copyFromTypedBuffer(y,i,b),u.updateModelTransform(y),u.setVisible(y,!!o[f]),d.push(y),l.set(y,w)}this._instanceGroupToIndices.set(t,d),this._numFeatures+=h}removeInstances(t){const e=this._instanceGroupToIndices.get(t);if(e==null)return;const r=this._lodRendererResources;if(r==null)return;const s=r.lodRenderer.instanceData,n=this._instanceIndexToFeatureId;for(const a of e)s.removeInstance(a),n.delete(a);this._numFeatures-=e.length,this._instanceGroupToIndices.delete(t)}updateVisibility(t,e){const r=this._instanceGroupToIndices.get(t);if(r==null)return;const s=this._lodRendererResources;if(s==null)return;const n=r.length;if(n!==e.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const a=s.lodRenderer.instanceData;for(let i=0;i<n;++i)a.setVisible(r[i],!!e[i])}updateGlobalTransforms(t,e){const r=this._instanceGroupToIndices.get(t);if(r==null)return;const s=this._lodRendererResources;if(s==null)return;const n=r.length;if(16*n!==e.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const a=s.lodRenderer.instanceData,i=a.view;for(let o=0;o<n;++o){const d=r[o],u=16*o;i.globalTransform.copyFromTypedBuffer(d,e,u),a.updateModelTransform(d)}}_addDisposeResource(t){this._disposeResourceHandles.push(t)}async _createLodRenderer(t,e){const r=this.view.stage,s={layerViewUid:this.layerViewUid,graphicUid:a=>this._instanceIndexToFeatureId.get(a)??-1,notifyGraphicGeometryChanged:a=>1,notifyGraphicVisibilityChanged:a=>1},n=new ue({symbol:t,optionalFields:this._optionalFields,metadata:s,shaderTransformation:null},this.scheduler);return n.slicePlaneEnabled=!1,this._addDisposeResource((()=>{r.removeRenderPlugin(n),n.destroy()})),await r.addRenderPlugin(n,e),n}};function ye(t,e){const r=e.levels.map((s=>{const n=s.components.map((a=>{const i=t(a.materialId);if(!fe(i))throw new Error("LodRenderer only supports DefaultMaterial");const o=new j(i,a.renderGeometryBuffer.data,a.renderGeometryBuffer.elementCount,a.boundingInfo);return new W(o)}));return new Z(n,s.minScreenSpaceRadius)}));return new Y(r)}function fe(t){return t!=null&&"materialType"in t&&t.materialType==="default"}O=c([v("esri.views.3d.layers.graphics.pipeline.rendering.LodRenderer")],O);let C=class extends K{constructor(t){super(),this.view=null,this.layerViewUid=null,this._stage=null,this._materials=new Map,this._textures=new Map,this._directRenderers=new Map,this._lodRenderers=new Map,this.totalFeatures=0,this.view=t.view,this.layerViewUid=t.layerViewUid}initialize(){this._stage=this.view.stage}destroy(){this.removeAllHandles(),this._lodRenderers.forEach((t=>t.destroy()))}async createTexture(t,e){const{_textures:r,_stage:s}=this,n=new X(t,e);return r.set(n.id,n),s&&(n.load(s.renderView.renderingContext),s.addTexture(n)),n.id}async releaseTexture(t){const{_textures:e,_stage:r}=this,s=e.get(t);s&&(r&&(s.unload(),r.removeTexture(s)),e.delete(t))}_destroyTexture(t){const{_textures:e,_stage:r}=this,s=e.get(t);s&&(r&&(s.unload(),r.removeTexture(s)),e.delete(t))}async createMaterial(t){const{view:e}=this,r=e.state.viewingMode===ee.Global;let s=null;switch(t.type){case"default":{const n=t.parameters,a=new re(n,{spherical:r});a.setParameters({cullFace:a.transparent?k.None:k.Back}),s=a;break}case"hud":{const n=t.parameters;s=new H(n,r)}}this._materials.set(t.materialId,s)}async destroyMaterial(t){this._materials.delete(t)}async updateMaterial(t){}async createDirectRenderer(t){if(this._directRenderers.has(t))return;const e=this._materials.get(t);if(e==null)throw new Error(`material not found ${t}`);const{view:r}=this,s=new F({material:e,layerViewUid:this.layerViewUid});this._directRenderers.set(t,s),r.stage.addRenderPlugin(s),r.stage.renderView.renderer.updateHasFlags()}async destroyDirectRenderer(t){const e=this._directRenderers.get(t);if(e==null)return;const r=this.view;r.stage.removeRenderPlugin(e),this._directRenderers.delete(t),r.stage.renderView.renderer.updateHasFlags()}async createLoDRenderer(t,e,r){const s=new O({view:this.view,layerViewUid:this.layerViewUid}),n=a=>this._materials.get(a);if(await s.doLoad(e,n,r),r==null?void 0:r.aborted)throw s.destroy(),te();this._lodRenderers.set(t,s)}async destroyLoDRenderer(t,e){const r=this._lodRenderers.get(t);r!=null&&(r.destroy(),this._lodRenderers.delete(t))}_destroyLodRenderer({rendererId:t}){const e=this._lodRenderers.get(t);e!=null&&(e.destroy(),this._lodRenderers.delete(t))}async executeRenderCommands(t){for(const e of t)switch(e.id){case"destroy-texture":this._destroyTexture(e.textureId);break;case"update-material":this._updateMaterial(e);break;case"destroy-material":this._destroyMaterial(e);break;case"add-direct-renderer-geometry-buffer":this._addDirectRendererGeometryBuffer(e);break;case"update-direct-renderer-geometry-buffer":this._updateDirectRendererGeometryBuffer(e);break;case"remove-direct-renderer-geometry-buffer":this._removeDirectRendererGeometryBuffer(e);break;case"destroy-lod-renderer":this._destroyLodRenderer(e);break;case"add-lod-instances":this._addLodInstances(e);break;case"remove-lod-instances":this._removeLodInstances(e);break;case"update-lod-instance-data":this._updateLodInstanceData(e);break;case"update-visibility":this._updateVisibility(e)}t.length>0&&this._updateFeatureCount()}_updateFeatureCount(){let t=0;for(const e of this._directRenderers.values())t+=e.numFeatures;for(const e of this._lodRenderers.values())t+=e.numFeatures;this._set("totalFeatures",t)}get usedMemory(){let t=0;for(const e of this._directRenderers.values())t+=e.usedMemory;for(const e of this._lodRenderers.values())t+=e.usedMemory;return t}_updateMaterial({materialId:t,parameters:e}){const r=this._materials.get(t);r!=null?r.setParameters(e):console.error("material not found")}_destroyMaterial({materialId:t}){this._materials.get(t)!=null?this._materials.delete(t):console.error("material not found")}_addDirectRendererGeometryBuffer({groupId:t,rendererId:e,renderGeometryBuffer:r,renderGeometryBufferItems:s,localOrigin:n}){const a=this._directRenderers.get(e);a!=null?(a.addRenderGeometryBuffer(t,r,s,n),this.view.stage.renderView.requestRender()):console.error("no renderer assigned to provided material")}_updateDirectRendererGeometryBuffer({groupId:t,rendererId:e,renderGeometryBuffer:r,renderGeometryBufferItems:s,localOrigin:n}){const a=this._directRenderers.get(e);a!=null?(a.updateRenderGeometryBuffer(t,r,s,n),this.view.stage.renderView.requestRender()):console.error("no renderer assigned to provided material")}_removeDirectRendererGeometryBuffer({groupId:t,rendererId:e}){const r=this._directRenderers.get(e);r!=null?(r.removeRenderGeometryBuffer(t),this.view.stage.renderView.requestRender()):console.error("no renderer assigned to provided material")}_addLodInstances({rendererId:t,groupId:e,data:r}){const s=this._lodRenderers.get(t);if(s==null)throw new Error("no lod renderer assigned to provided lod renderer Id");s.addInstances(e,r),this.view.stage.renderView.requestRender()}_removeLodInstances({rendererId:t,groupId:e}){const r=this._lodRenderers.get(t);if(r==null)throw new Error("no lod renderer assigned to provided lod renderer Id");r.removeInstances(e),this.view.stage.renderView.requestRender()}_updateLodInstanceData({rendererId:t,groupId:e,globalTransforms:r}){const s=this._lodRenderers.get(t);if(s==null)throw new Error("No renderer found with the provided id");r!=null&&s.updateGlobalTransforms(e,r),this.view.stage.renderView.requestRender()}_updateVisibility({rendererId:t,groupId:e,visibility:r}){const s=this._directRenderers.get(t)??this._lodRenderers.get(t);if(s==null)throw new Error("No renderer found with the provided id");s.updateVisibility(e,r),this.view.stage.renderView.requestRender()}};c([p({readOnly:!0})],C.prototype,"totalFeatures",void 0),C=c([v("esri.views.3d.layers.graphics.pipeline.rendering.FeaturePipelineRenderManager")],C);let _=class extends G{constructor(t){super(t),this._renderer=null,this.graphicsQuery={queryForSymbologySnapping:(e,r)=>{throw new I("featurelayer:unsupported-symbology-snapping","Symbology snapping not supported")},executeQuery:async(e,r)=>await this._workerHandle.executeQuery(e,r),executeQueryForIds:async(e,r)=>await this._workerHandle.executeQueryForIds(e,r),executeQueryForCount:async(e,r)=>await this._workerHandle.executeQueryForCount(e,r),executeQueryForExtent:async(e,r)=>await this._workerHandle.executeQueryForExtent(e,r),executeQueryForLatestObservations:async(e,r)=>await this._workerHandle.executeQueryForLatestObservations(e,r)},this.maximumNumberOfFeatures=1e3}initialize(){if(this.layerView.layer.geometryType!=="point")throw new I("featurelayer:unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}destroy(){this.removeAllHandles(),this._workerHandle.destroy(),se(this._renderer)}async setup(){const t=this.layerView,{layer:e,view:r,uid:s}=t,{spatialReference:n,renderSpatialReference:a,resourceController:i,renderCoordsHelper:o,elevationProvider:d}=r,u=r.state.viewingMode;if(this._renderer=new C({view:r,layerViewUid:s}),e.type!=="feature")throw new I("featurelayer:unsupported-layertype","Only FeatureLayer is supported");const h=new m({schedule:l=>i.immediate.schedule(l),layer:e,layerView:t,viewSpatialReference:n,renderSpatialReference:a,viewingMode:u,renderer:this._renderer,elevationProvider:d,renderCoordsHelper:o});this._workerHandle=await h.when(),this.addHandles([this.layerView.view.featureTiles.addClient(),ne((()=>this.layerView.view.featureTiles.tiles),"change",(l=>{this._workerHandle.onTileTreeChange(l.target)}),{onListenerAdd:l=>this._workerHandle.onTileTreeChange(l),onListenerRemove:l=>this._workerHandle.onTileTreeChange(l)}),r.elevationProvider.on("elevation-change",(l=>this._workerHandle.onElevationChange(l))),L((()=>this.layerView.fullOpacity),(l=>this._workerHandle.onLayerViewOpacityChange(l)),{sync:!1}),L((()=>e.renderer),(l=>this._workerHandle.onRendererChange(l)),{sync:!1})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return ie.ASYNC}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){var t;return((t=this._renderer)==null?void 0:t.usedMemory)??0}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get totalFeatures(){var t;return((t=this._renderer)==null?void 0:t.totalFeatures)??0}get performanceInfo(){const t=this.totalFeatures;return new de(new ae(this.usedMemory,t,t,this.maximumNumberOfFeatures,0,null),t,t,this.maximumNumberOfFeaturesExceeded,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(t){}findGraphic(t){return null}highlight(t){return ce}maskOccludee(t){return oe()}async whenGraphicBounds(t,e){return null}computeAttachmentOrigin(t,e){return null}elevationAlignPointsInFeatures(t,e){throw new I("featurelayer:unsupported-elevation-alignment","Elevation alignment not supported")}async doRefresh(t){}setVisibility(t,e){}getMissingAttributesForFeature(t){return null}getHydratedGeometry(t){return null}};c([p()],_.prototype,"layerView",void 0),c([p()],_.prototype,"updating",null),c([p()],_.prototype,"totalFeatures",null),_=c([v("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],_);export{_ as Feature3DPipeline};
