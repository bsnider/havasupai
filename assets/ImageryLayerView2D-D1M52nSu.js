import{e as V,ao as w,bW as v,aa as f,r as o,m as n,d as b,bx as $,eb as k,Z as E,ap as x,av as D,a4 as U,ji as z,dA as A,aq as R,ae as S,at as P,dD as F,f as H,cp as I}from"./index-BdmtnMtL.js";import{d as T,f as C,h as G}from"./RasterVFDisplayObject-qJAAAu-1.js";import{S as M}from"./LayerView2D-DLZoA58p.js";import{O}from"./GraphicsView2D-BS0HUrJN.js";import{a as L}from"./HighlightGraphicContainer-BTJNWRPQ.js";import{U as j,m as J}from"./vectorFieldUtils-CgOWmSTv.js";import{r as W}from"./BitmapContainer-BJA0kwyr.js";import{n as N}from"./Container-CwYrMWFN.js";import{l as Q}from"./BitmapTechnique-CPtJzpja.js";import{M as Z}from"./ExportStrategy-BXrsH0Dj.js";import{Q as K}from"./rasterProjectionHelper-B2AiJLNF.js";import{n as X}from"./WGLContainer-CtmUa_qZ.js";import{m as Y}from"./ImageryLayerView-NJrjoje0.js";import{u as tt}from"./LayerView-BKnaPVw2.js";import{i as et}from"./RefreshableLayerView-BFuquIK1.js";import"./utils-DUPmXVSM.js";import"./dataUtils-CBwbMnmE.js";import"./WGLBrushVTLSymbol-C36d7XO0.js";import"./Utils-52W6KtCe.js";import"./BoundingBox-CbW2yTad.js";import"./CIMSymbolHelper-Cz5v8sSu.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-DLJWtkGi.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-D13AKZVv.js";import"./callExpressionWithFeature-BfYS-2sn.js";import"./AttributeStore-Dm0f6JIe.js";import"./UpdateTracking2D-C0-clAWR.js";import"./constants-BFLErLYb.js";import"./queryUtils-15xCNNUM.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Bwa76QPn.js";import"./FeatureCommandQueue-DP7YKic9.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-fbPPdSVe.js";import"./utils-CIoNKDUb.js";import"./heatmapTextureUtils-CV7VDOdf.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CkRTyaRA.js";import"./normalizeUtilsSync-C4gUnRAA.js";import"./AGraphicContainer-D7MK3aMY.js";import"./TechniqueInstance-UINWx7N6.js";import"./TileContainer-CpuO4VSW.js";import"./bitmapUtils-KTaE_uBD.js";import"./ShaderCompiler-C94JGjW7.js";import"./ProgramTemplate-luuzMVSh.js";import"./timeSupport-LzrBd8D8.js";import"./popupUtils-B6p4SpQd.js";let h=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new N,this.updateRequested=!1,this.type="imagery",this._bitmapView=new W}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch((e=>{w(e)||v.getLogger(this).error(e)}))}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new Z({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports((async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}})).catch((t=>{w(t)||v.getLogger(this).error(t)}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map((a=>a.source)).filter((a=>a.extent&&a.extent.intersects(e))).map((a=>({extent:a.extent,pixelBlock:a.originalPixelBlock}))),r=j(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){var l;(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const a=await this.layer.internalFetchImage(t,e,i,r);if(a.imageBitmap)return a.imageBitmap;const s=await this.layer.applyRenderer(a.pixelData,{signal:r.signal}),p=new Q(s.pixelBlock,(l=s.extent)==null?void 0:l.clone(),a.pixelData.pixelBlock);return p.filter=u=>this.layer.applyFilter(u),p}};o([n()],h.prototype,"attached",void 0),o([n()],h.prototype,"container",void 0),o([n()],h.prototype,"layer",void 0),o([n()],h.prototype,"strategy",void 0),o([n()],h.prototype,"timeExtent",void 0),o([n()],h.prototype,"view",void 0),o([n()],h.prototype,"updateRequested",void 0),o([n()],h.prototype,"updating",null),o([n()],h.prototype,"type",void 0),h=o([b("esri.views.2d.layers.imagery.ImageryView2D")],h);class it extends X{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[T],target:()=>this.children,drawPhase:$.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===$.MAP&&this.symbolTypes.forEach((i=>{e.renderPass=i,super.doRender(e)}))}}let c=class extends V{constructor(t){super(t),this._loading=null,this.update=k(((e,i)=>this._update(e,i).catch((r=>{w(r)||v.getLogger(this).error(r)}))))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:a}=t.state,s=new E({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[p,l]=t.state.size;this._loading=this.fetchPixels(s,p,l,i);const u=await this._loading;this._addToDisplay(u,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach((p=>p.destroy())),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=t,s=new C(a);s.offset=[0,0],s.symbolizerParameters=e,s.rawPixelData=t,s.invalidateVAO(),s.x=r.xmin,s.y=r.ymax,s.pixelRatio=i.pixelRatio,s.rotation=i.rotation,s.resolution=i.resolution,s.width=a.width*e.symbolTileSize,s.height=a.height*e.symbolTileSize,this.container.children.forEach((p=>p.destroy())),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(s)}};o([n()],c.prototype,"fetchPixels",void 0),o([n()],c.prototype,"container",void 0),o([n()],c.prototype,"_loading",void 0),o([n()],c.prototype,"updating",null),c=o([b("esri.views.2d.layers.imagery.ImageryVFStrategy")],c);let d=class extends V{constructor(){super(...arguments),this.attached=!1,this.container=new it,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const a=await this._projectFullExtentPromise,{layer:s}=this,{symbolTileSize:p}=s.renderer,{extent:l,width:u,height:B}=J(t,e,i,p,a);if(a!=null&&!a.intersects(t))return{extent:l,pixelBlock:null};const _={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:s.exportImageServiceParameters.version,symbolTileSize:p,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(_)){const m=this.getPixelData();if(m!=null&&`${m.extent.xmin}, ${m.extent.ymin}, ${m.extent.xmax}, ${m.extent.ymax}`===_.bbox)return m}const{pixelBlock:y}=await s.fetchPixels(l,u,B,{timeExtent:this.timeExtent,interpolation:s.interpolation,signal:r});if(this._dataParameters=_,y==null)return{extent:l,pixelBlock:null};const{dataType:q}=s.rasterInfo;return{extent:l,pixelBlock:q==="vector-uv"&&y?await s.convertVectorFieldData(y,"vector-uv",{signal:r}):y}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new c({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(x((()=>this.layer.renderer),(t=>this._updateSymbolizerParams(t)),D),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach((t=>t.destroy())),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){var r;const t=(r=this.container.children[0])==null?void 0:r.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch((e=>{w(e)||v.getLogger(this).error(e)}))}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,a=this._dataParameters.bbox===t.bbox;return e&&i&&r&&a}async _getProjectedFullExtent(t){try{return K(this.layer.fullExtent,t)}catch{try{const i=(await U(this.layer.url,{query:{option:"footprints",outSR:z(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?E.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){(t==null?void 0:t.type)==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};o([n()],d.prototype,"attached",void 0),o([n()],d.prototype,"container",void 0),o([n()],d.prototype,"layer",void 0),o([n()],d.prototype,"timeExtent",void 0),o([n()],d.prototype,"type",void 0),o([n()],d.prototype,"view",void 0),o([n()],d.prototype,"updating",null),d=o([b("esri.views.2d.layers.imagery.VectorFieldView2D")],d);let g=class extends Y(et(M(tt))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new A,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new O({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new L(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([x((()=>this.layer.exportImageServiceParameters.version),(t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())}),R),x((()=>this.timeExtent),(t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())}),R),this.layer.on("redraw",(()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())})),x((()=>this.layer.renderer),(()=>this._setSubView()))])}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:S.isCollection(t)?t.at(0):t)instanceof f))return P();let i=[];Array.isArray(t)||S.isCollection(t)?i=t.map((s=>s.clone())):t instanceof f&&(i=[t.clone()]);const r=i==null?void 0:i.filter(F);if(!(r!=null&&r.length))return P();const a=(e==null?void 0:e.name)??H;return this._addHighlightGraphics(i,a),P((()=>!this.destroyed&&this._removeHighlightGraphics(i,a)))}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map((i=>i.uid)),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((i=>i.uid)),e)}async doRefresh(){this.requestUpdate()}isUpdating(){var e,i;const t=!this.subview||this.subview.updating||!!((e=this._highlightView)!=null&&e.updating);return I("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${(i=this._highlightView)==null?void 0:i.updating}
`),t}_processHighlight(){var e;const t=this._getHighlights();(e=this._highlightView)==null||e.setHighlight(t)}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:a}=this.subview;if(a===e)return this._attachSubview(this.subview),void(a==="flow"?this.subview.redrawOrRefetch():a==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new h({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new d({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new G({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};o([n()],g.prototype,"pixelData",null),o([n()],g.prototype,"subview",void 0),g=o([b("esri.views.2d.layers.ImageryLayerView2D")],g);const Kt=g;export{Kt as default};
