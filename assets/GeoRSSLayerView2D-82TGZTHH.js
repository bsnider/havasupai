import{ap as l,c as h,di as g,ae as w,gr as f,gs as d,gt as n,r as u,d as V}from"./index-DtL3GvY-.js";import{S as b}from"./LayerView2D-CmQvEJbF.js";import{t as S}from"./GraphicContainer-Cey2RPR7.js";import{O as _}from"./GraphicsView2D-DiKn07n3.js";import{u as T}from"./LayerView-K9Vi9Xlh.js";import"./Container-a9FH1wCA.js";import"./AGraphicContainer-DzuWZD3X.js";import"./TechniqueInstance-CZxAVhNo.js";import"./UpdateTracking2D-nTH3N-bg.js";import"./Utils-CNt3DicP.js";import"./BoundingBox-Bq0HnYF9.js";import"./TileContainer-CmTbPvJx.js";import"./WGLContainer-C3g-5PAz.js";import"./WGLBrushVTLSymbol-CejKrYQS.js";import"./ShaderCompiler-C94JGjW7.js";import"./ProgramTemplate-Vr7ZcSVc.js";import"./FeatureCommandQueue-CChwACzx.js";import"./CIMSymbolHelper-CwSE3PYd.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-CJvfbTn1.js";import"./Rect-CUzevAry.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-CUU_3-Ob.js";import"./utils-Cj_QOTBu.js";import"./constants-BFLErLYb.js";import"./heatmapTextureUtils-BGyA77_w.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-2zHZgNJo.js";import"./OverrideHelper-CzPyjFl9.js";import"./callExpressionWithFeature-De1Vi9XY.js";import"./AttributeStore-CI9zGGLW.js";import"./queryUtils-CRjq5Dx4.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DVuQFYEV.js";import"./normalizeUtilsSync-Q7wMTszy.js";let y=class extends b(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap((i=>{const t=this._popupTemplates.get(i),p=i.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=t;return p})).map((i=>({type:"graphic",graphic:i,layer:o,mapPoint:e})))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([l((()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections}),(e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:i}of e){const t=g.fromJSON(o),p=new w(t.features),s=i.drawingInfo,c=r?f.fromJSON(r):null,a=d(s.renderer),m=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new S(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=m,this._popupTemplates.set(m,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}}),h),l((()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol}),(e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})}),h),l((()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol}),(e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})}),h),l((()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol}),(e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})}),h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([V("esri.views.2d.layers.GeoRSSLayerView2D")],y);const se=y;export{se as default};
