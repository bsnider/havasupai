import"./index-BdmtnMtL.js";import{u as k,d as C,a as A}from"./PointCloudUniqueValueRenderer-JVjUhsIi.js";import{U as x,w as I,c as O,D as R}from"./I3SBinaryReader-aq1cfJyF.js";function M(n,o,d,c){const{rendererJSON:i,isRGBRenderer:p}=n;let t=null,s=null;if(o&&p)t=o;else if(o&&(i==null?void 0:i.type)==="pointCloudUniqueValueRenderer"){s=k.fromJSON(i);const e=s.colorUniqueValueInfos;t=new Uint8Array(3*c);const u=m(s.fieldTransformType);for(let r=0;r<c;r++){const a=(u?u(o[r]):o[r])+"";for(let l=0;l<e.length;l++)if(e[l].values.includes(a)){t[3*r]=e[l].color.r,t[3*r+1]=e[l].color.g,t[3*r+2]=e[l].color.b;break}}}else if(o&&(i==null?void 0:i.type)==="pointCloudStretchRenderer"){s=C.fromJSON(i);const e=s.stops;t=new Uint8Array(3*c);const u=m(s.fieldTransformType);for(let r=0;r<c;r++){const a=u?u(o[r]):o[r],l=e.length-1;if(a<e[0].value)t[3*r]=e[0].color.r,t[3*r+1]=e[0].color.g,t[3*r+2]=e[0].color.b;else if(a>=e[l].value)t[3*r]=e[l].color.r,t[3*r+1]=e[l].color.g,t[3*r+2]=e[l].color.b;else for(let f=1;f<e.length;f++)if(a<e[f].value){const b=(a-e[f-1].value)/(e[f].value-e[f-1].value);t[3*r]=e[f].color.r*b+e[f-1].color.r*(1-b),t[3*r+1]=e[f].color.g*b+e[f-1].color.g*(1-b),t[3*r+2]=e[f].color.b*b+e[f-1].color.b*(1-b);break}}}else if(o&&(i==null?void 0:i.type)==="pointCloudClassBreaksRenderer"){s=A.fromJSON(i);const e=s.colorClassBreakInfos;t=new Uint8Array(3*c);const u=m(s.fieldTransformType);for(let r=0;r<c;r++){const a=u?u(o[r]):o[r];for(let l=0;l<e.length;l++)if(a>=e[l].minValue&&a<=e[l].maxValue){t[3*r]=e[l].color.r,t[3*r+1]=e[l].color.g,t[3*r+2]=e[l].color.b;break}}}else t=new Uint8Array(3*c).fill(255);if(d&&(s!=null&&s.colorModulation)){const e=s.colorModulation.minValue,u=s.colorModulation.maxValue,r=.3;for(let a=0;a<c;a++){const l=d[a],f=l>=u?1:l<=e?r:r+(1-r)*(l-e)/(u-e);t[3*a]=f*t[3*a],t[3*a+1]=f*t[3*a+1],t[3*a+2]=f*t[3*a+2]}}return t}function T(n,o){if(n.encoding==null||n.encoding===""){const d=x(o,n);if(d.vertexAttributes.position==null)return;const c=I(o,d.vertexAttributes.position),i=d.header.fields,p=[i.offsetX,i.offsetY,i.offsetZ],t=[i.scaleX,i.scaleY,i.scaleZ],s=c.length/3,e=new Float64Array(3*s);for(let u=0;u<s;u++)e[3*u]=c[3*u]*t[0]+p[0],e[3*u+1]=c[3*u+1]*t[1]+p[1],e[3*u+2]=c[3*u+2]*t[2]+p[2];return e}if(n.encoding==="lepcc-xyz")return O(o).result}function F(n,o,d){return n!=null&&n.attributeInfo.useElevation?o?S(o,d):null:n!=null&&n.attributeInfo.storageInfo?R(n.attributeInfo.storageInfo,n.buffer,d,!0):null}function S(n,o){const d=new Float64Array(o);for(let c=0;c<o;c++)d[c]=n[3*c+2];return d}function J(n,o,d,c,i){const p=n.length/3;let t=0;for(let s=0;s<p;s++){let e=!0;for(let u=0;u<c.length&&e;u++){const{filterJSON:r}=c[u],a=i[u].values[s];switch(r.type){case"pointCloudValueFilter":{const l=r.mode==="exclude";r.values.includes(a)===l&&(e=!1);break}case"pointCloudBitfieldFilter":{const l=v(r.requiredSetBits),f=v(r.requiredClearBits);(a&l)===l&&(a&f)===0||(e=!1);break}case"pointCloudReturnFilter":{const l=15&a,f=a>>>4&15,b=f>1,w=l===1,y=l===f;let h=!1;for(const g of r.includedReturns)if(g==="last"&&y||g==="firstOfMany"&&w&&b||g==="lastOfMany"&&y&&b||g==="single"&&!b){h=!0;break}h||(e=!1);break}}}e&&(d[t]=s,n[3*t]=n[3*s],n[3*t+1]=n[3*s+1],n[3*t+2]=n[3*s+2],o[3*t]=o[3*s],o[3*t+1]=o[3*s+1],o[3*t+2]=o[3*s+2],t++)}return t}function m(n){switch(n){default:case null:case"none":return o=>o;case"low-four-bit":return o=>15&o;case"high-four-bit":return o=>(240&o)>>4;case"absolute-value":return o=>Math.abs(o);case"modulo-ten":return o=>o%10}}function v(n){let o=0;for(const d of n||[])o|=1<<d;return o}export{S as a,F as c,J as f,M as i,T as u};
