import{bm as f,cJ as p,bM as E,dh as q,eM as P,ek as b,bW as y,dM as _,ao as R,eP as I,eh as $,hB as j,hC as N}from"./index-DtL3GvY-.js";import{u as M}from"./executeQueryForSnapping-WRGM643x.js";import{f as O}from"./FeatureStore-Bdbg8eqL.js";import{x as Q,j as k}from"./queryUtils-CRjq5Dx4.js";import{L}from"./QueryEngine-CZT-a_rO.js";import{E as A,N as J}from"./geojson-C0lasKNQ.js";import{d as U}from"./sourceUtils-D_J0Wged.js";import{o as Z,e as v,K as g}from"./wfsUtils-CYjVocYd.js";import"./timeSupport-DVuQFYEV.js";import"./BoundsStore-LWZeXbvz.js";import"./PooledRBush-BlgA9e4V.js";import"./optimizedFeatureQueryEngineAdapter-DtvSySZM.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-BhCViNZx.js";import"./WhereClause-D_85KSno.js";import"./utils-CqBqH-rg.js";import"./utils-DNAQbzzP.js";import"./utils-QelRZs3K.js";import"./ClassBreaksDefinition-CFI1xdAL.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-CaBFLPdG.js";import"./date-Ctp1FiBW.js";import"./xmlUtils-CtUoQO7q.js";const x="esri.layers.WFSLayer";class fe{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:a,getFeatureOutputFormat:s,fields:i,geometryType:u,featureType:o,maxRecordCount:n,maxTotalRecordCount:c,maxPageCount:w,objectIdField:d,customParameters:F}=e,{spatialReference:h,getFeatureSpatialReference:m}=Z(a,o,e.spatialReference);try{await Q(m,h)}catch{throw new f("unsupported-projection","Projection not supported",{inSpatialReference:m,outSpatialReference:h})}p(t),this._customParameters=F,this._featureType=o,this._fieldsIndex=E.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some((T=>T.type==="esriFieldTypeDate"))?{timeZoneIANA:q}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=s,this._getFeatureSpatialReference=m,this._maxRecordCount=n,this._maxTotalRecordCount=c,this._maxPageCount=w,this._objectIdField=d,this._spatialReference=h;let l=await this._snapshotFeatures(t);if(l.errors.length>0&&(this._supportsPagination=!1,l=await this._snapshotFeatures(t),l.errors.length>0))throw l.errors[0];const S={type:"object-id",fieldName:d};return this._queryEngine=new L({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,featureIdInfo:S,spatialReference:h,timeInfo:null,featureStore:new O({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(l.features),{warnings:C(l),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new f("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(e,t.signal)).filter(P)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),M(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){var t;return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,(t=this._snapshotTask)==null||t.abort(),this._snapshotTask=b((a=>this._snapshotFeatures({signal:a}))),this._snapshotTask.promise.then((a=>{var s;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(a.features);for(const i of C(a))y.getLogger(x).warn(new _("wfs-layer:refresh-warning",i.message,i.details));(s=a.errors)!=null&&s.length&&y.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:a.errors}))}),(()=>{this._queryEngine.featureStore.clear()})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e==null?void 0:e.signal,a=this._maxTotalRecordCount,s=this._maxPageCount,i=this._supportsPagination&&s>1?await v(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const o=[];if(i==null)try{u=await this._singleQuery(t)}catch(n){R(n)||o.push(n)}else{const n=Math.min(i,a),c=W(this,I(Math.ceil(n/this._maxRecordCount),1,s),t);await Promise.allSettled(Array.from({length:10}).map((()=>B(c,u,o))))}return p(t),{features:u,totalRecordCount:i,maxTotalRecordCount:a,maxPageCount:s,errors:o}}async _singleQuery(e){const t=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,a=await g(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:t,signal:e});return this._processGeoJSON(a,{signal:e})}async _pageQuery(e,t){const a=e*this._maxRecordCount,s=await g(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:t});return this._processGeoJSON(s,{startIndex:a,signal:t})}_processGeoJSON(e,t){A(e,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:s}=t;p(s);const i=J(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!$(this._spatialReference,this._getFeatureSpatialReference))for(const o of i)o.geometry!=null&&(o.geometry=j(k(N(o.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const o of i){const n={};U(this._fieldsIndex,n,o.attributes,!0),o.attributes=n,n[this._objectIdField]==null&&(o.objectId=n[this._objectIdField]=u++)}return i}}function*W(r,e,t){for(let a=0;a<e;a++)yield r._pageQuery(a,t)}async function B(r,e,t){let a=r.next();for(;!a.done;){try{const s=await a.value;e.push(...s)}catch(s){R(s)||t.push(s)}a=r.next()}}function C(r){const e=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),e}export{fe as default};
