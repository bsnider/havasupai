import{cp as l,ey as p,en as d,c as n,aa as m,r,m as i,dp as u,d as c}from"./index-DtL3GvY-.js";import{P as h}from"./I3SMeshView3D-C5VO1ccW.js";import{l as g}from"./LayerView3D-Bq1aXf6r.js";import{u as y}from"./LayerView-K9Vi9Xlh.js";import"./Transform-DCn9llu6.js";import"./projectBoundingSphere-d4rIaJ1K.js";import"./I3SOverrides-wzDAGApe.js";import"./resourceUtils-Bu34KP4T.js";import"./I3SNode-6t5X_4O3.js";import"./I3SUtil-C98ge0NP.js";import"./featurePopupQueryUtils-B4niRvqf.js";import"./I3SBinaryReader-Cn_XmJzB.js";import"./RenderTexture-DPiYc1uN.js";import"./ReactiveSet-WBi7bpkM.js";import"./SceneModification-DExmEhou.js";import"./ExtentSet-B3A6QCEk.js";import"./optimizedFeatureQueryEngineAdapter-DtvSySZM.js";import"./PooledRBush-BlgA9e4V.js";import"./popupUtils-6HdFWfaZ.js";import"./I3SMeshWorkerHandle-DXa5590q.js";import"./II3SMeshView3D-Cb0TCUgX.js";import"./SceneLayerWorker-y0xKqDSz.js";import"./attributeUtils-Dc8--CBJ.js";import"./highlightUtils-DVMfsVrk.js";const f=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._supportsLabeling=!1,this._applySSAO=!l("disable-feature:im-ssao"),this._shadeNormals=!!l("enable-feature:im-shading"),this.drapeTargetType=p.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??0}get lodFactor(){var e,a,o,s;return((s=(o=(a=(e=this.view)==null?void 0:e.qualitySettings)==null?void 0:a.sceneService)==null?void 0:o.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return d(this.i3slayer.effectiveScaleRange,this.view.scale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add((()=>this.layer.modifications),(()=>this._loadModifications()),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new m({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const e=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange((()=>e),(()=>this._modifications=e.toArray()),n),"modifications")}};r([i()],t.prototype,"layer",void 0),r([i()],t.prototype,"i3slayer",null),r([i(u)],t.prototype,"updatingProgress",void 0),r([i()],t.prototype,"updatingProgressValue",null),r([i()],t.prototype,"lodFactor",null),r([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),r([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=r([c("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const G=t;export{G as default};
