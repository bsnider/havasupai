const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/i3s-B6eJl4rt.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/index-BdmtnMtL.js","assets/index-Bq0sc0Rv.css","assets/projectMeshVertexPositions-CaaticEP.js","assets/vertexSpaceConversion-RE0iNRKJ.js","assets/vec4-C1MDKEa4.js"])))=>i.map(i=>d[i]);
import{_ as x,i9 as G,$ as B,gV as k,lD as q,jG as K,lE as Q,lF as W}from"./index-BdmtnMtL.js";import{n as $,a as X,p as Z}from"./I3SMeshWorkerHandle-RGFuDYrQ.js";import{r as L}from"./I3SNode-Cie-CLXx.js";import"./I3SUtil-FaJMuQYV.js";import"./featurePopupQueryUtils-CSNfJ58c.js";import"./I3SBinaryReader-aq1cfJyF.js";function ee(){return F||(F=new Promise((e=>x(()=>import("./i3s-B6eJl4rt.js"),__vite__mapDeps([0,1])).then((t=>t.i)).then((({default:t})=>{const r=t({locateFile:te,onRuntimeInitialized:()=>e(r)});delete r.then})))).catch((e=>{throw e}))),F}function te(e){return G(`esri/libs/i3s/${e}`)}let F;async function ue(e){n=await g();const t=[e.geometryBuffer];return{result:V(n,e,t),transferList:t}}async function me(e){var p;n=await g();const t=[e.geometryBuffer],{geometryBuffer:r}=e,i=r.byteLength,s=n._malloc(i),l=new Uint8Array(n.HEAPU8.buffer,s,i);l.set(new Uint8Array(r));const a=n.dracoDecompressPointCloudData(s,l.byteLength);if(n._free(s),a.error.length>0)throw new Error(`i3s.wasm: ${a.error}`);const f=((p=a.featureIds)==null?void 0:p.length)>0?a.featureIds.slice():null,m=a.positions.slice();return f&&t.push(f.buffer),t.push(m.buffer),{result:{positions:m,featureIds:f},transferList:t}}async function de(e){await g(),oe(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function ye(e){await g(),ne(e)}async function he(e){n=await g(),n.setLegacySchema(e.context,e.jsonSchema)}async function be(e){const{localMatrix:t,origin:r,positions:i,vertexSpace:s}=e,l=B.fromJSON(e.inSpatialReference),a=B.fromJSON(e.outSpatialReference);let f;const[{projectBuffer:m},{initializeProjection:p}]=await Promise.all([x(()=>import("./index-BdmtnMtL.js").then(c=>c.Jr),__vite__mapDeps([2,3])),x(()=>import("./index-BdmtnMtL.js").then(c=>c.Js),__vite__mapDeps([2,3]))]);await p(l,a);const w=[0,0,0];if(!m(r,l,0,w,a,0))throw new Error("Failed to project");if(s.type==="georeferenced"&&s.origin==null){if(f=new Float64Array(i.length),!m(i,l,0,f,a,0,f.length/3))throw new Error("Failed to project")}else{const c=s.type==="georeferenced"?k.fromJSON(s):q.fromJSON(s),{projectMeshVertexPositions:u}=await x(async()=>{const{projectMeshVertexPositions:y}=await import("./projectMeshVertexPositions-CaaticEP.js");return{projectMeshVertexPositions:y}},__vite__mapDeps([4,2,3,5,6])),d=u({vertexAttributes:{position:i},transform:t?{localMatrix:t}:void 0,vertexSpace:c,spatialReference:l},a);if(!d)throw new Error("Failed to project");f=d}const M=f.length,[E,A,_]=w;for(let c=0;c<M;c+=3)f[c]-=E,f[c+1]-=A,f[c+2]-=_;return{result:{projected:f,original:i,projectedOrigin:w},transferList:[f.buffer,i.buffer]}}async function pe({normalMatrix:e,normals:t}){const r=new Float32Array(t.length);return K(r,t,e),Q(e)&&W(r,r),{result:{transformed:r,original:t},transferList:[r.buffer,t.buffer]}}function ge(e){C(e)}let re,n;function ne(e){if(!n)return;const t=e.modifications,r=n._malloc(8*t.length),i=new Float64Array(n.HEAPU8.buffer,r,t.length);for(let s=0;s<t.length;++s)i[s]=t[s];n.setModifications(e.context,r,t.length,e.isGeodetic),n._free(r)}function V(e,t,r){const{context:i,globalTrafo:s,mbs:l,obbData:a,elevationOffset:f,geometryBuffer:m,geometryDescriptor:p,indexToVertexProjector:w,vertexToRenderProjector:M}=t,E=e._malloc(m.byteLength),A=33,_=e._malloc(A*Float64Array.BYTES_PER_ELEMENT),c=new Uint8Array(e.HEAPU8.buffer,E,m.byteLength);c.set(new Uint8Array(m));const u=new Float64Array(e.HEAPU8.buffer,_,A);P(u,[NaN,NaN,NaN]);let d=u.byteOffset+3*u.BYTES_PER_ELEMENT,y=new Float64Array(u.buffer,d);P(y,s),d+=16*u.BYTES_PER_ELEMENT,y=new Float64Array(u.buffer,d),P(y,l),d+=4*u.BYTES_PER_ELEMENT,a&&(y=new Float64Array(u.buffer,d),P(y,a));const S=p,J={isDraco:!1,isLegacy:!1,color:t.layouts.some((h=>h.some((b=>b.name==="color")))),normal:t.needNormals&&t.layouts.some((h=>h.some((b=>b.name==="normalCompressed")))),uv0:t.layouts.some((h=>h.some((b=>b.name==="uv0")))),uvRegion:t.layouts.some((h=>h.some((b=>b.name==="uvRegion")))),featureIndex:S.featureIndex},o=e.process(i,!!t.obbData,E,c.byteLength,S,J,_,f,w,M,t.normalReferenceFrame);if(e._free(_),e._free(E),o.error.length>0)throw new Error(`i3s.wasm: ${o.error}`);if(o.discarded)return null;const O=o.componentOffsets.length>0?o.componentOffsets.slice():null,T=o.featureIds.length>0?o.featureIds.slice():null,H=o.anchorIds.length>0?Array.from(o.anchorIds):null,Y=o.anchors.length>0?Array.from(o.anchors):null,I=o.interleavedVertedData.slice().buffer,R=o.indicesType===$.Int16?new Uint16Array(o.indices.buffer,o.indices.byteOffset,o.indices.byteLength/2).slice():new Uint32Array(o.indices.buffer,o.indices.byteOffset,o.indices.byteLength/4).slice(),N=o.positions.slice(),{buffer:j,byteOffset:v,byteLength:U}=o.positionIndices,D=o.positionIndicesType===$.Int16?new Uint16Array(j,v,U/2).slice():new Uint32Array(j,v,U/4).slice(),z=new X(t.layouts[0],I,R,o.hasColors,o.hasModifications,{data:N,indices:D});return T&&r.push(T.buffer),O&&r.push(O.buffer),r.push(I),r.push(R.buffer),r.push(N.buffer),r.push(D.buffer),new Z(O,T,H,Y,z,s,o.obb)}function we(e){return e===0?L.Unmodified:e===1?L.PotentiallyModified:e===2?L.Culled:L.Unknown}function oe(e){if(!n)return;const{context:t,buffer:r}=e,i=n._malloc(r.byteLength),s=r.byteLength/Float64Array.BYTES_PER_ELEMENT,l=new Float64Array(n.HEAPU8.buffer,i,s),a=new Float64Array(r);l.set(a),n.filterOBBs(t,i,s),a.set(l),n._free(i)}function C(e){n&&n.destroy(e)===0&&(n=null)}function P(e,t){for(let r=0;r<t.length;++r)e[r]=t[r]}async function Ee(){n||await g()}async function g(){return n||(n=await(re??(re=ee()))),n}const _e={transform:(e,t)=>n&&V(n,e,t),destroy:C};export{ge as destroyContext,me as dracoDecompressPointCloudData,de as filterObbsForModifications,oe as filterObbsForModificationsSync,Ee as initialize,we as interpretObbModificationResults,ue as process,be as project,he as setLegacySchema,ye as setModifications,ne as setModificationsSync,_e as test,pe as transformNormals};
