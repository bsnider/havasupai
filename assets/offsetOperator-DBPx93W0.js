import{k9 as c,dD as j}from"./index-DtL3GvY-.js";import{w as x,j as y}from"./operatorOffset-BmfmUSHk.js";import{getSpatialReference as f,fromGeometry as G,toGeometry as u,fromGeometries as g}from"./jsonConverter-CCE0HW-0.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-oWBTjYTq.js";import"./Envelope2D-zGBO_y2e.js";import"./Point2D-BUVSeX7E.js";import"./Transformation2D-DNNU7gV_.js";import"./OperatorDefinitions-DP7_WWTp.js";const l={round:0,bevel:1,miter:2,square:3};function w(e,t,n={}){const{miterLimit:a=10,flattenError:s=0,joins:p="round",unit:r}=n,o=f(e);r&&o&&(t=c(t,r,o));const m=G(e),i=m.getSpatialReference();return u(x(m.getGeometry(),i,t,l[p],a,s),i)}function B(e,t,n={}){const{miterLimit:a=10,flattenError:s=0,joins:p="round",unit:r}=n,o=f(e);r&&o&&(t=c(t,r,o));const[m,i]=g(e);return y(m,i,t,l[p],a,s).map((d=>u(d,i))).filter(j)}export{w as execute,B as executeMany};
