import{c as d,em as u,cQ as m,u as y,eK as g,ae as c,ap as h,en as f,al as b,f as v,am as w,dt as I,r as i,m as o,d as _}from"./index-CA3J3HgS.js";import{c as S,a as O,S as C,h as G,d as V,f as $,b as E}from"./Stop-K0xYqWtN.js";import{l as P}from"./LayerView3D-JeQQWbeY.js";import{x as H}from"./GraphicsProcessor-Cv4W8b-n.js";import{r as R}from"./EventedSet-DST62ekg.js";import{u as D}from"./LayerView-LfRtBo31.js";import"./networkEnums-BcSLRW4a.js";import"./renderingInfoUtils-BYCrXbyj.js";import"./ExtentSet-DXI8r6hA.js";import"./optimizedFeatureQueryEngineAdapter-D-Nn7S_S.js";import"./PooledRBush-Cb3BoktC.js";import"./popupUtils-DN9oIyBS.js";import"./Graphics3DObjectStates-DF91xPx2.js";import"./highlightUtils-CnlLgv1H.js";function j(e){return e instanceof S||e instanceof O||e instanceof C||e instanceof G||e instanceof V||e instanceof $||e instanceof E}let s=class extends P(D){constructor(){super(...arguments),this.type="route-3d",this.loadedGraphics=new R,this._byObjectID=new Map,this.slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null}initialize(){this._set("processor",new H({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this._updatingHandles.addOnCollectionChange((()=>this._routeItems),(e=>this._routeItemsChanged(e)),d),this.view.viewingMode==="local"&&this.addResolvingPromise((async()=>this.fullExtentInLocalViewSpatialReference=await u(this.layer.fullExtent,this.view.spatialReference))()),this.addHandles(m((()=>{var e,t;return(t=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:t.ready}),(()=>()=>this.notifyChange("updating")),{once:!0}))}destroy(){var e;this._updatingHandles.removeAll(),this._set("processor",y(this.processor)),(e=this._get("_routeItems"))==null||e.destroy()}get _routeItems(){return new g({getCollections:()=>[this.layer.pointBarriers,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.stops,this.layer.directionLines,this.layer.directionPoints,this.layer.routeInfo!=null?new c([this.layer.routeInfo]):null]})}_routeItemsChanged(e){if(e.removed.length){this.loadedGraphics.removeMany(e.removed.map((t=>{const r=this._byObjectID.get(t);return this._byObjectID.delete(t),r})));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this.loadedGraphics.addMany(e.added.map((t=>{const r=t.toGraphic();return this._byObjectID.set(t,r),r})));for(const t of e.added)this.addHandles([h((()=>t.geometry),((r,a)=>{this._updateGraphic(t,"geometry",r,a)})),h((()=>t.symbol),((r,a)=>{this._updateGraphic(t,"symbol",r,a)}))],t)}}get legendEnabled(){var e;return this.canResume()&&!((e=this.processor)!=null&&e.frustumVisibilitySuspended)}get visibleAtCurrentScale(){var e;return b()?f(this.layer.effectiveScaleRange,this.view.scale):!((e=this.processor)!=null&&e.scaleVisibilitySuspended)}getSuspendInfo(){var t;const e=super.getSuspendInfo();return e.outsideOfView=((t=this.processor)==null?void 0:t.frustumVisibilitySuspended)??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){var r;return(r=this.processor)==null?void 0:r.computeAttachmentOrigin(e,t)}getSymbolLayerSize(e,t){return this.processor.getSymbolLayerSize(e,t)}async queryGraphics(){return new c(this.loadedGraphics.toArray())}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e,t){return j(e)&&(e=this._byObjectID.get(e)),this.processor.highlight(e,(t==null?void 0:t.name)??v)}notifyContentGeometryUpdate(){this.emit("visible-geometry-changed")}get updatePolicy(){var e;return((e=this.processor)==null?void 0:e.graphicsCore.effectiveUpdatePolicy)||w.SYNC}isUpdating(){var e,t,r;return!(!((e=this.processor)!=null&&e.updating)&&((r=(t=this.view)==null?void 0:t.basemapTerrain)!=null&&r.ready))}get performanceInfo(){var e,t;return new I(((e=this.processor)==null?void 0:e.graphicsCore.usedMemory)??0,this.loadedGraphics.length,-1,-1,0,((t=this.processor)==null?void 0:t.graphicsCore.performanceInfo)??null)}_updateGraphic(e,t,r,a){var p;const l=this._byObjectID.get(e);l[t]=r,n.graphic=l,n.property=t,n.oldValue=a,n.newValue=r,(p=this.processor)==null||p.graphicsCore.graphicUpdateHandler(n)}};i([o()],s.prototype,"_routeItems",null),i([o()],s.prototype,"loadedGraphics",void 0),i([o({readOnly:!0})],s.prototype,"legendEnabled",null),i([o({readOnly:!0})],s.prototype,"visibleAtCurrentScale",null),i([o()],s.prototype,"layer",void 0),i([o({readOnly:!0})],s.prototype,"processor",void 0),i([o({type:Boolean})],s.prototype,"slicePlaneEnabled",void 0),s=i([_("esri.views.3d.layers.RouteLayerView3D")],s);const n={graphic:null,property:null,oldValue:null,newValue:null},F=s;export{F as default};
