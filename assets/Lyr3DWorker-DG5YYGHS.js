import{id as u}from"./index-Ds3x37R4.js";import{e as f}from"./Lyr3DModule-DtQyuTow.js";let o,e;async function h(n){await d();const s={status:u.Failed,error:"",jobDescJson:"",data:new Uint8Array(0),missingInputUrls:[]};if(n.inputs.length<1)return{result:s,transferList:[]};const i={ptrs:[],sizes:[]};for(const t of n.inputs){const p=e._malloc(t.byteLength);new Uint8Array(e.HEAPU8.buffer,p,t.byteLength).set(new Uint8Array(t)),i.ptrs.push(p),i.sizes.push(t.byteLength)}const r=e.process(n.jobDescJson,n.id,i,n.isMissingResourceCase);s.status=r.status,s.missingInputUrls=r.missingInputUrls.slice();const l=r.status===u.Succeeded&&r.data,c=s.status===u.MissingInputs&&s.missingInputUrls.length>0;s.jobDescJson=r.jobDescJson.slice(),s.error=r.error.slice(),l?s.data=r.data.slice():c&&(s.originalInputs=n.inputs.slice());for(let t=0;t<i.ptrs.length;++t)e._free(i.ptrs[t]);const a=[];if(l)a.push(s.data.buffer);else if(c)for(const t of n.inputs)a.push(t);return{result:s,transferList:a}}function y(){e&&(e.uninitialize_lyr3d_worker_wasm(),e=null)}function d(){return e?Promise.resolve():(o||(o=f().then((n=>{e=n,e.initialize_lyr3d_worker_wasm(),o=null}))),o)}export{y as destroyWasm,d as initialize,h as process};
