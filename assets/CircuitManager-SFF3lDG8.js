const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/createCircuit-7cIJvWXq.js","assets/index-DXVHLZmj.js","assets/index-BXhtsskn.css","assets/EditCircuitsResult-DsNbahvf.js","assets/utils-DTbkSr7n.js","assets/applyEditsUtils-BBzxtI4G.js","assets/MeshTransform-DzRlq1Pf.js","assets/editingSupport-DPQ0KF-S.js","assets/CreateAlterCircuitParameters-CjEK7vbX.js","assets/alterCircuit-DDhJYHYJ.js","assets/deleteCircuits-BFlIQbLn.js","assets/DeleteCircuitsParameters-eyp5tyIU.js","assets/exportCircuits-BUh8puFL.js","assets/ExportCircuitsParameters-DcGW8QnE.js","assets/verifyCircuits-CYL8Vp72.js","assets/VerifyCircuitsParameters-d86GSqz7.js","assets/queryCircuits-DWUkHbvi.js","assets/QueryCircuitsParameters-DTZbZ3mn.js"])))=>i.map(i=>d[i]);
import{Q as v,_ as s,T as l,U as u,V as m,W as h,r as n,m as c,X as w,d as f}from"./index-DXVHLZmj.js";let d=class extends v{constructor(t){super(t),this.telecomDomainNetwork=null,this.utilityNetwork=null}get networkServiceUrl(){var t;return((t=this.utilityNetwork)==null?void 0:t.networkServiceUrl)??null}get featureServiceUrl(){var t;return((t=this.utilityNetwork)==null?void 0:t.featureServiceUrl)??null}get gdbVersion(){var t;return((t=this.utilityNetwork)==null?void 0:t.gdbVersion)??null}get historicMoment(){var t;return((t=this.utilityNetwork)==null?void 0:t.historicMoment)??null}get telecomDomainNetworkName(){var t;return((t=this.telecomDomainNetwork)==null?void 0:t.domainNetworkName)??null}async create(t){const[{createCircuit:o},{default:a}]=await Promise.all([s(()=>import("./createCircuit-7cIJvWXq.js"),__vite__mapDeps([0,1,2,3,4,5,6,7])),s(()=>import("./CreateAlterCircuitParameters-CjEK7vbX.js"),__vite__mapDeps([8,1,2]))]),e=a.from({circuit:t,domainNetworkName:this.telecomDomainNetworkName});l(this.featureServiceUrl,this.gdbVersion||null)?(e.sessionId=u,await m(this.featureServiceUrl,this.gdbVersion,!0)):e.sessionId=null,e.gdbVersion=this.gdbVersion;const i=h(this.featureServiceUrl,null,this.gdbVersion,!1),r=await o(this.networkServiceUrl,e);i.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:r.exceededTransferLimit,historicMoment:r.moment,editedFeatures:r.serviceEdits||void 0})}async alter(t){const[{alterCircuit:o},{default:a}]=await Promise.all([s(()=>import("./alterCircuit-DDhJYHYJ.js"),__vite__mapDeps([9,1,2,3,4,5,6,7])),s(()=>import("./CreateAlterCircuitParameters-CjEK7vbX.js"),__vite__mapDeps([8,1,2]))]),e=a.from({circuit:t,domainNetworkName:this.telecomDomainNetworkName});l(this.featureServiceUrl,this.gdbVersion||null)?(e.sessionId=u,await m(this.featureServiceUrl,this.gdbVersion,!0)):e.sessionId=null,e.gdbVersion=this.gdbVersion;const i=h(this.featureServiceUrl,null,this.gdbVersion,!1),r=await o(this.networkServiceUrl,e);i.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:r.exceededTransferLimit,historicMoment:r.moment,editedFeatures:r.serviceEdits||void 0})}async delete(t){const[{deleteCircuits:o},{default:a}]=await Promise.all([s(()=>import("./deleteCircuits-BFlIQbLn.js"),__vite__mapDeps([10,1,2,3,4,5,6,7])),s(()=>import("./DeleteCircuitsParameters-eyp5tyIU.js"),__vite__mapDeps([11,1,2]))]),e=a.from({circuits:t,domainNetworkName:this.telecomDomainNetworkName});l(this.featureServiceUrl,this.gdbVersion||null)?(e.sessionId=u,await m(this.featureServiceUrl,this.gdbVersion,!0)):e.sessionId=null,e.gdbVersion=this.gdbVersion;const i=h(this.featureServiceUrl,null,this.gdbVersion,!1),r=await o(this.networkServiceUrl,e);i.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:r.exceededTransferLimit,historicMoment:r.moment,editedFeatures:r.serviceEdits||void 0})}async export(t){const[{exportCircuits:o},{default:a}]=await Promise.all([s(()=>import("./exportCircuits-BUh8puFL.js"),__vite__mapDeps([12,1,2,4,5,6,7])),s(()=>import("./ExportCircuitsParameters-DcGW8QnE.js"),__vite__mapDeps([13,1,2]))]),e=a.from(t);l(this.featureServiceUrl,this.gdbVersion||null)?(e.sessionId=u,await m(this.featureServiceUrl,this.gdbVersion,!0)):e.sessionId=null,e.domainNetworkName=this.telecomDomainNetworkName,e.gdbVersion=this.gdbVersion,e.moment=this.historicMoment;const i=h(this.featureServiceUrl,null,this.gdbVersion,!1),r=await o(this.networkServiceUrl,e);return i.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:r.exceededTransferLimit,historicMoment:r.moment,editedFeatures:r.serviceEdits||void 0}),r.circuits}async verify(t,o=!1){const[{verifyCircuits:a},{default:e}]=await Promise.all([s(()=>import("./verifyCircuits-CYL8Vp72.js"),__vite__mapDeps([14,1,2,4,5,6,7])),s(()=>import("./VerifyCircuitsParameters-d86GSqz7.js"),__vite__mapDeps([15,1,2]))]),i=e.from({circuits:t,synthesizeGeometries:o,domainNetworkName:this.telecomDomainNetworkName});l(this.featureServiceUrl,this.gdbVersion||null)?(i.sessionId=u,await m(this.featureServiceUrl,this.gdbVersion,!0)):i.sessionId=null,i.gdbVersion=this.gdbVersion;const r=h(this.featureServiceUrl,null,this.gdbVersion,!1),_=await a(this.networkServiceUrl,i);return r.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:_.exceededTransferLimit,historicMoment:_.moment,editedFeatures:_.serviceEdits||void 0}),_.circuits}async queryCircuits(t){const[{queryCircuits:o},{default:a}]=await Promise.all([s(()=>import("./queryCircuits-DWUkHbvi.js"),__vite__mapDeps([16,1,2])),s(()=>import("./QueryCircuitsParameters-DTZbZ3mn.js"),__vite__mapDeps([17,1,2]))]),e=Array.isArray(t)?{circuits:t}:t,i=a.from(e);return l(this.featureServiceUrl,this.gdbVersion||null)?i.sessionId=u:i.sessionId=null,i.domainNetworkName=this.telecomDomainNetworkName,i.resultTypes=["circuit"],i.gdbVersion=this.gdbVersion,i.moment=this.historicMoment,(await o(this.networkServiceUrl,i)).circuits||[]}async queryCircuitNames(t){const[{queryCircuits:o},{default:a}]=await Promise.all([s(()=>import("./queryCircuits-DWUkHbvi.js"),__vite__mapDeps([16,1,2])),s(()=>import("./QueryCircuitsParameters-DTZbZ3mn.js"),__vite__mapDeps([17,1,2]))]),e=a.from(t);return l(this.featureServiceUrl,this.gdbVersion||null)?e.sessionId=u:e.sessionId=null,e.domainNetworkName=this.telecomDomainNetworkName,e.resultTypes=["name"],e.gdbVersion=this.gdbVersion,e.moment=this.historicMoment,(await o(this.networkServiceUrl,e)).circuitNames||[]}};n([c({constructOnly:!0})],d.prototype,"telecomDomainNetwork",void 0),n([c({type:w,constructOnly:!0})],d.prototype,"utilityNetwork",void 0),n([c()],d.prototype,"networkServiceUrl",null),n([c()],d.prototype,"featureServiceUrl",null),n([c()],d.prototype,"gdbVersion",null),n([c()],d.prototype,"historicMoment",null),n([c()],d.prototype,"telecomDomainNetworkName",null),d=n([f("esri.networks.CircuitManager")],d);const p=d;export{p as default};
