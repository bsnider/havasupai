import{fX as a,Q as l,fY as u,r as i,m as r,aL as p,fZ as s,eU as o,f_ as n,d as h}from"./index-DtL3GvY-.js";let t=class extends a.ClonableMixin(l){constructor(e){super(e),this.type="plane",this.position=null,this.heading=0,this.tilt=0,this.width=10,this.height=10}equals(e){return this.heading===e.heading&&this.tilt===e.tilt&&this.width===e.width&&this.height===e.height&&u(this.position,e.position)}};i([r({type:["plane"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],t.prototype,"type",void 0),i([r({type:p,json:{write:{isRequired:!0}}})],t.prototype,"position",void 0),i([r({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}}),s((e=>o.normalize(n(e),0,!0)))],t.prototype,"heading",void 0),i([r({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}}),s((e=>o.normalize(n(e),0,!0)))],t.prototype,"tilt",void 0),i([r({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],t.prototype,"width",void 0),i([r({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],t.prototype,"height",void 0),t=i([h("esri.analysis.SlicePlane")],t);const m=t;export{m as c};
