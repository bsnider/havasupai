import{dm as d,eT as f,ae as m,bW as n,r as l,m as a,d as u}from"./index-DtL3GvY-.js";import{l as p}from"./LayerView3D-Bq1aXf6r.js";import{p as c}from"./TiledLayerView3D-CTiIpUpX.js";import{i as g}from"./fetchTile-x9JiSh6z.js";import{u as y}from"./LayerView-K9Vi9Xlh.js";import{i as I}from"./RefreshableLayerView-Dbfj4i5w.js";let r=class extends I(c(p(y))){constructor(){super(...arguments),this.type="wmts-3d"}initialize(){this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)));const t=d((()=>{var e,i;return(i=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:i.tilingSchemeLocked})).then((()=>{const e=this._getCompatibleTileInfoMatrixSet((i=>this._getTileInfoError(i.tileInfo,i.fullExtent)));e!=null&&(e.id!==null&&this.layer.activeLayer.tileMatrixSetId!==e.id&&(this.layer.activeLayer.tileMatrixSetId=e.id),e.tileInfo&&(this.tileInfo=e.tileInfo),this.layer.fullExtent=e.fullExtent)}));this.addResolvingPromise(t),this.when((()=>this._postInitialize()))}refresh(){this.emit("data-changed")}canResume(){if(!super.canResume())return!1;const t=this.layer.activeLayer.tileMatrixSet;return t!=null&&!this._getTileInfoError(t.tileInfo,t.fullExtent)}async fetchTile(t,e){return g(this,t,e)}async doRefresh(){this.suspended||this.emit("data-changed")}_postInitialize(){this._updatingHandles.add((()=>{var t,e;return(e=(t=this.layer)==null?void 0:t.activeLayer)==null?void 0:e.styleId}),(()=>this.refresh())),this._updatingHandles.add((()=>{var t;return(t=this.layer)==null?void 0:t.activeLayer}),(t=>{const e=this._getCompatibleTileInfoMatrixSet((i=>this._getTileInfoError(i.tileInfo,i.fullExtent)),!0);e&&e.id!=null&&t.tileMatrixSetId!==e.id&&(this.layer.activeLayer.tileMatrixSetId=e.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()}))}_getCompatibleTileInfoMatrixSet(t,e=!1){const i=f(this.layer);if(i!=null){if(m.isCollection(i))return i.find((h=>{const s=t(h);return s!=null&&(e?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",s):this.addResolvingPromise(Promise.reject(s))),s==null}));const o=t(i);return o!=null&&(e?n.getLogger(this).error("The selected tile matrix set is not compatible with the view",o):this.addResolvingPromise(Promise.reject(o))),i}return null}_getTileInfoError(t,e){return this._getTileInfoSupportError(t,e)||this._getTileInfoCompatibilityError(t,this.view.basemapTerrain.tilingScheme)}};l([a()],r.prototype,"layer",void 0),l([a()],r.prototype,"suspended",void 0),l([a()],r.prototype,"tileInfo",void 0),r=l([u("esri.views.3d.layers.WMTSLayerView3D")],r);const w=r;export{w as default};
