import{eI as v,ay as E,eJ as S,eK as x,eL as m,eM as $,eN as y,eO as R,eP as H,aH as i,eQ as D,eR as P,eS as U,eT as I,eU as G,b4 as h,eV as A,eW as F,eh as M,eX as g,eY as k,eZ as q,e_ as O,e$ as T,f0 as J,f1 as _,aJ as K,aI as L}from"./index-Ds3x37R4.js";import{w as Q}from"./InteractiveToolBase-d26NClg3.js";function z(e,r){return C(e,(()=>r))}function ne(e){return C(e,(r=>r.plane))}function C(e,r){const t=i(),l=i();let s=!1;return n=>{const o=r(n);if(n.action==="start"){const c=m(n.screenStart,$(y.get())),u=R(e.state.camera,c,w);u!=null&&(s=H(o,u,t))}if(!s)return null;const a=m(n.screenEnd,$(y.get())),d=R(e.state.camera,a,w);return d==null?null:H(o,d,l)?{...n,renderStart:t,renderEnd:l,plane:o,ray:d}:null}}function B(e,r,t=0,l=null,s=null){let n=null;return o=>{if(o.action==="start"&&(n=e.sceneIntersectionHelper.intersectElevationFromScreen(S(o.screenStart.x,o.screenStart.y),r,t,s),n!=null&&l!=null&&!x(n,n,l))||n==null)return null;const a=e.sceneIntersectionHelper.intersectElevationFromScreen(S(o.screenEnd.x,o.screenEnd.y),r,t,s);return a!=null&&(l==null||x(a,a,l))?{...o,mapStart:n,mapEnd:a}:null}}function V(e,r,t,l=null,s=null){return B(e,t,v(r,e,t),l,s)}function te(e,r,t,l){const s=t.toMap(e.screenStart);return s!=null?V(r,s,t.elevationInfo,l):null}function W(e,r){const t=N,l=b,s=F();e.renderCoordsHelper.worldUpAtPosition(r,t);const n=M(k(s),t,g(l,r,e.state.camera.eye));return M(n,n,t),q(r,n,s)}function re(e,r,t){let l=null;const s=new Q;return s.next(z(e,W(e,r))).next(X(e,r)).next(Y(e,t)).next((n=>{n.mapEnd.x=n.mapStart.x,n.mapEnd.y=n.mapStart.y,l=n})),n=>(l=null,s.execute(n),l)}function X(e,r){const t=i(),l=O(r);e.renderCoordsHelper.worldUpAtPosition(r,t);const s=i(),n=i(),o=a=>(g(a,a,r),J(t,a,a),e.viewingMode==="global"&&O(a)*Math.sign(_(t,a))<.001-l&&g(a,K(a,t,.001),r),L(a,a,r),a);return a=>(a.renderStart=o(T(s,a.renderStart)),a.renderEnd=o(T(n,a.renderEnd)),a)}function le(e,r){const t=l=>{const s=m(l,$(Z)),n=R(e.state.camera,s,w);if(n==null)return null;const o=A(r,n,N,b);return o==null?void 0:o[0]};return l=>{const s=t(l.screenStart);if(s==null)return null;const n=t(l.screenEnd);return n==null?null:{...l,renderStart:s,renderEnd:n}}}function Y(e,r){const t=e.renderCoordsHelper;return l=>{const s=t.fromRenderCoords(l.renderStart,new E({spatialReference:r})),n=t.fromRenderCoords(l.renderEnd,new E({spatialReference:r}));return s!=null&&n!=null?{...l,mapStart:s,mapEnd:n}:null}}var p;function se(e){let r=null;return t=>{switch(t.action){case"start":r=e.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function ae(e,r=null){const t=new P(e.state.viewingMode);t.options.selectionMode=!0,t.options.store=U.MIN,t.options.hud=!1;const l=S(),s={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},n=i(),o=r??e.spatialReference,a=c=>{e.map.ground&&e.map.ground.opacity<1?s.exclude.add(I):s.exclude.delete(I),e.sceneIntersectionHelper.intersectIntersectorScreen(m(c,l),t,s);const u=t.results.min;let f;if(u.getIntersectionPoint(n))f=u.intersector===G.TERRAIN?p.GROUND:p.OTHER;else{if(!t.results.ground.getIntersectionPoint(n))return null;f=p.GROUND}return{location:e.renderCoordsHelper.fromRenderCoords(n,new E({spatialReference:o})),surfaceType:f}};let d;return c=>{if(c.action==="start"){const f=a(c.screenStart);d=f!=null?f.location:null}if(d==null)return null;const u=a(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:d,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(e){e[e.GROUND=0]="GROUND",e[e.OTHER=1]="OTHER"})(p||(p={}));const Z=h(),N=i(),b=i(),w=D();export{le as A,ae as B,ne as C,Y as F,re as G,V as M,te as N,z as T,p as q,se as z};
