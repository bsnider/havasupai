import{e as u,eb as c,fu as P,eN as _,el as h,c1 as d,r,m as l,d as g}from"./index-BdmtnMtL.js";let a=class extends u{constructor(t){super(t),this.constrainResult=s=>s,this._snapPoints=null,this._frameTask=null,this._abortController=null,this._stagedPoint=null,this._snap=c((async(s,n,e,i)=>{const o=this._frameTask;if(o==null)return;const p=await o.schedule((()=>n.snap({...s,context:e,signal:i})),i);p.valid&&await o.schedule((()=>{this.stagedPoint=p.apply(),s!==this._snapPoints&&this._snapPoints!=null&&(this.stagedPoint=n.update({...this._snapPoints,context:e}))}),i)}))}get stagedPoint(){return this._stagedPoint}set stagedPoint(t){this._stagedPoint=this.constrainResult(t)}initialize(){var s,n;const t=this.view.type==="3d"?(n=(s=this.view)==null?void 0:s.resourceController)==null?void 0:n.scheduler:null;this._frameTask=t!=null?t.registerTask(_.SNAPPING):P}destroy(){this._abortController=h(this._abortController),this._frameTask=d(this._frameTask)}update(t,s,n){this._snapPoints=t;const{point:e,scenePoint:i}=t,o=s.update({point:e,scenePoint:i,context:n});return this.stagedPoint=o,o}async snap(t,s,n){const{point:e,scenePoint:i}=t;return this.stagedPoint=s.update({point:e,scenePoint:i,context:n}),this._snapPoints=t,this._abortController==null&&(this._abortController=new AbortController),this._snap(t,s,n,this._abortController.signal)}async snapAgainNearPreviousMapPoint(t,s){this._snapPoints!=null&&await this.snap(this._snapPoints,t,s)}abort(){this._abortController=h(this._abortController),this._snapPoints=null}};r([l({constructOnly:!0})],a.prototype,"view",void 0),r([l()],a.prototype,"stagedPoint",null),r([l()],a.prototype,"constrainResult",void 0),r([l()],a.prototype,"_stagedPoint",void 0),a=r([g("esri.views.interactive.snapping.SnappingOperation")],a);export{a as p};
