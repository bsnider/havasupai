import{Q as Ct,bm as It,bK as St,bW as J,r as R,m as E,fZ as _t,d as Ft,tc as ct,ea as Nt}from"./index-DXVHLZmj.js";let wt=class{constructor(e=null,n=null,l=null){this.minValue=e,this.maxValue=n,this.noDataValue=l}};const Rt=9999999e31,Et=2e-7,Vt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function Z(t){return Vt[t]??[-34028234663852886e22,34028234663852886e22]}const Dt={u1:1,u2:1,u4:1,u8:1,s8:1,u16:2,s16:2,u32:4,s32:4,f32:4,f64:8,unknown:4,c64:16,c128:32};function Lt(t){return Dt[t]}function oe(t){return Lt(t.pixelType)*t.bandCount}function ae(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function jt(t){return((t==null?void 0:t.startsWith("s"))||(t==null?void 0:t.startsWith("u")))??!1}function he(t,e,n,l){let[r,s]=Z(n);const i=jt(n);return i&&(r-=1e-5,s+=1e-5),i?n.startsWith("u")?Gt(t,e,l,[r,s]):Wt(t,e,l,[r,s]):Ot(t,e,l,[r,s])}function ue(t,e){for(let n=0;n<e.length;n++)e[n]&&isNaN(t[n])&&(e[n]=0,t[n]=0)}function Gt(t,e,n,l){const[r,s]=l;for(let i=0;i<e.length;i++)if(e[i]){const h=t[i];h<r||h>s?e[i]=0:n[i]=h+.5|0}}function Wt(t,e,n,l){const[r,s]=l;for(let i=0;i<e.length;i++)if(e[i]){const h=t[i];h<r||h>s?e[i]=0:n[i]=h+(h>0?.5:-.5)|0}}function Ot(t,e,n,l){const[r,s]=l;for(let i=0;i<e.length;i++)if(e[i]){const h=t[i];h<r||h>s?e[i]=0:n[i]=h}}function ce(t,e,n){var c,p;if(t.depthCount&&t.depthCount>1)return;const{pixels:l,statistics:r,pixelType:s}=t,i=l[0].length,h=t.bandMasks??[],o=t.mask??new Uint8Array(i).fill(255),a=s==="f32"||s==="f64",f=Z(s);let u=!1;for(let g=0;g<l.length;g++){const d=typeof e=="number"?e:e[g];if(d==null)continue;const x=((c=r==null?void 0:r[g])==null?void 0:c.minValue)??f[0],y=((p=r==null?void 0:r[g])==null?void 0:p.maxValue)??f[1];if(x>d+Number.EPSILON||y<d-Number.EPSILON)continue;const k=h[g]||o.slice(),M=l[g],w=n==null?void 0:n.customFloatTolerance;if(a&&w!==0){let A=w;A||(A=Math.abs(d)>=Rt?Et*Math.abs(d):s==="f32"?2**-23:Number.EPSILON);for(let v=0;v<M.length;v++)k[v]&&Math.abs(M[v]-d)<A&&(M[v]=0,k[v]=0,o[v]=0,u=!0)}else for(let A=0;A<M.length;A++)k[A]&&M[A]===d&&(M[A]=0,k[A]=0,o[A]=0,u=!0);h[g]=k}if(u){const g=t.bandMasks||t.pixels.length>1?h:null;n!=null&&n.matchAllNoData?t.mask=g&&g.length>1?m(g):o:(t.bandMasks=g,t.mask=o)}function m(g){if(g.length<2)return g[0];const d=g[0].length,x=new Uint8Array(d).fill(0);for(let y=0;y<g.length;y++){const k=g[y];for(let M=0;M<d;M++)k[M]&&(x[M]=255)}return x}u&&"updateStatistics"in t&&t.updateStatistics()}var j;let C=j=class extends Ct{static createEmptyBand(t,e){return new(j.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let l=0;l<t.length;l++){const r=t[l];for(let s=0;s<e;s++)r[s]||(n[s]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new It("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new wt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((n=>qt(n,this.mask)));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=Z(t),l=this.pixels,r=this.width*this.height,s=l.length;let i,h,o;const a=[];for(let f=0;f<s;f++){o=j.createEmptyBand(t,r),i=l[f];for(let u=0;u<r;u++)h=i[u],o[u]=h>n?n:h<e?e:h;a.push(o)}this.pixels=a,this.pixelType=t}extractBands(t){var u;const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const l=e.length,r=t.some((m=>m>=e.length)),s=l===t.length&&!t.some(((m,c)=>m!==c));if(r||s)return this;const i=((u=this.bandMasks)==null?void 0:u.length)===l?t.map((m=>this.bandMasks[m])):void 0;let{mask:h,validPixelCount:o}=this;const{width:a,height:f}=this;return i!=null&&i.length&&(h=j.combineBandMasks(i),o=h.filter((m=>!!m)).length),new j({pixelType:this.pixelType,width:a,height:f,mask:h,bandMasks:i,validPixelCount:o,maskIsAlpha:this.maskIsAlpha,pixels:t.map((m=>e[m])),statistics:n&&t.map((m=>n[m]))})}clone(){const t=new j({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((l=>new Uint8Array(l))));const n=j.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const l=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=l?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=St(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:l,pixels:r}=this;if(!t||!(r!=null&&r.length))return void J.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,i,h,o;s=i=h=r[0],r.length>=3?(i=r[1],h=r[2]):r.length===2&&(i=r[1]);const a=new Uint32Array(t),f=this.width*this.height;if(s.length===f)if(e!=null&&e.length===f)if(n)for(o=0;o<f;o++){const u=e[o];if(u){const m=u/255;a[o]=l?u<<24|h[o]*m<<16|i[o]*m<<8|s[o]*m:u<<24|h[o]<<16|i[o]<<8|s[o]}}else for(o=0;o<f;o++)e[o]&&(a[o]=255<<24|h[o]<<16|i[o]<<8|s[o]);else for(o=0;o<f;o++)a[o]=255<<24|h[o]<<16|i[o]<<8|s[o];else J.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:l}=this;if(!t||!(e!=null&&e.length))return void J.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const r=this.pixelType;let s=1,i=0,h=1;if(l&&l.length>0){for(const g of l)if(g.minValue!=null&&(i=Math.min(i,g.minValue)),g.maxValue!=null&&g.minValue!=null){const d=g.maxValue-g.minValue;h=Math.max(h,d)}s=255/h}else{let g=255;r==="s8"?(i=-128,g=127):r==="u16"?g=65535:r==="s16"?(i=-32768,g=32767):r==="u32"?g=4294967295:r==="s32"?(i=-2147483648,g=2147483647):r==="f32"?(i=-34e38,g=34e38):r==="f64"&&(i=-Number.MAX_VALUE,g=Number.MAX_VALUE),s=255/(g-i)}const o=new Uint32Array(t),a=this.width*this.height;let f,u,m,c,p;if(f=u=m=e[0],f.length!==a)return J.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(m=e[2]),n!=null&&n.length===a)for(c=0;c<a;c++)n[c]&&(o[c]=255<<24|(m[c]-i)*s<<16|(u[c]-i)*s<<8|(f[c]-i)*s);else for(c=0;c<a;c++)o[c]=255<<24|(m[c]-i)*s<<16|(u[c]-i)*s<<8|(f[c]-i)*s;else if(n!=null&&n.length===a)for(c=0;c<a;c++)p=(f[c]-i)*s,n[c]&&(o[c]=255<<24|p<<16|p<<8|p);else for(c=0;c<a;c++)p=(f[c]-i)*s,o[c]=255<<24|p<<16|p<<8|p}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!(e!=null&&e.length))return J.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,r,s,i;l=r=s=e[0],e.length>=3?(r=e[1],s=e[2]):e.length===2&&(r=e[1]);const h=this.width*this.height;if(l.length!==h)return J.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let o=0;if(n!=null&&n.length===h)for(i=0;i<h;i++)t[o++]=l[i],t[o++]=r[i],t[o++]=s[i],t[o++]=1&n[i];else for(i=0;i<h;i++)t[o++]=l[i],t[o++]=r[i],t[o++]=s[i],t[o++]=1}};function qt(t,e){let n=1/0,l=-1/0;const r=t.length;let s,i=0;if(e!=null)for(s=0;s<r;s++)e[s]&&(i=t[s],n=i<n?i:n,l=i>l?i:l);else for(s=0;s<r;s++)i=t[s],n=i<n?i:n,l=i>l?i:l;return new wt(n,l)}R([E({json:{write:!0}})],C.prototype,"width",void 0),R([E({json:{write:!0}})],C.prototype,"height",void 0),R([E({json:{write:!0}})],C.prototype,"pixelType",void 0),R([_t("pixelType")],C.prototype,"castPixelType",null),R([E({json:{write:!0}})],C.prototype,"validPixelCount",void 0),R([E({json:{write:!0}})],C.prototype,"mask",void 0),R([E({json:{write:!0}})],C.prototype,"maskIsAlpha",void 0),R([E({json:{write:!0}})],C.prototype,"pixels",void 0),R([E()],C.prototype,"premultiplyAlpha",void 0),R([E({json:{write:!0}})],C.prototype,"statistics",void 0),R([E({json:{write:!0}})],C.prototype,"depthCount",void 0),R([E({json:{write:!0}})],C.prototype,"noDataValues",void 0),R([E({json:{write:!0}})],C.prototype,"bandMasks",void 0),C=j=R([Ft("esri.layers.support.PixelBlock")],C);var ft,pt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(ft||(ft={})),(function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"})(pt||(pt={}));const gt=9;function F(t){var e;return t!=null&&((e=t.pixels)==null?void 0:e.length)>0}function fe(t){var f;if(!(t!=null&&t.length)||t.some((u=>!F(u))))return null;if(t.length===1)return((f=t[0])==null?void 0:f.clone())??null;const e=t,{width:n,height:l,pixelType:r}=e[0];if(e.some((u=>u.width!==n||u.height!==l)))return null;const s=e.map((({mask:u})=>u)).filter((u=>u!=null));let i=null;s.length&&(i=new Uint8Array(n*l),i.set(s[0]),s.length>1&&Mt(s.slice(1),i));const h=[];e.forEach((({pixels:u})=>h.push(...u)));const o=e.map((({statistics:u})=>u)).filter((u=>u==null?void 0:u.length)),a=[];return o.forEach((u=>a.push(...u))),new C({pixelType:r,width:n,height:l,mask:i,pixels:h,statistics:a.length?a:null})}function pe(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort(((o,a)=>o[0]-a[0])),l=n[0][0]<0?n[0][0]:0,r=Math.max(256,n[n.length-1][0]-l+1),s=new Uint8Array(4*r),i=[],h=n[0].length===5;if(r>65536)return n.forEach((o=>{i[o[0]-l]=h?o.slice(1):o.slice(1).concat([255])})),{indexed2DColormap:i,offset:l,alphaSpecified:h};if(t.fillUnspecified){let o=n[0];for(let a=o[0]-l,f=0;a<r;a++)s[4*a]=o[1],s[4*a+1]=o[2],s[4*a+2]=o[3],s[4*a+3]=h?o[4]:255,a===o[0]-l&&(o=f===n.length-1?o:n[++f])}else for(let o=0;o<n.length;o++){const a=n[o],f=4*(a[0]-l);s[f]=a[1],s[f+1]=a[2],s[f+2]=a[3],s[f+3]=h?a[4]:255}return{indexedColormap:s,offset:l,alphaSpecified:h}}function ge(t,e){if(!F(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let r=n.mask;const s=n.width*n.height;if(l.length!==1)return t;const{indexedColormap:i,indexed2DColormap:h,offset:o,alphaSpecified:a}=e,f=l[0],u=new Uint8Array(f.length),m=new Uint8Array(f.length),c=new Uint8Array(f.length);let p,g=0;if(i){const d=i.length-1;if(r!=null)for(let x=0;x<s;x++)r[x]&&(g=4*(f[x]-o),g<o||g>d?r[x]=0:(u[x]=i[g],m[x]=i[g+1],c[x]=i[g+2],r[x]=i[g+3]));else{r=new Uint8Array(s);for(let x=0;x<s;x++)g=4*(f[x]-o),g<o||g>d?r[x]=0:(u[x]=i[g],m[x]=i[g+1],c[x]=i[g+2],r[x]=i[g+3]);n.mask=r}}else if(h)if(r!=null)for(let d=0;d<s;d++)r[d]&&(p=h[f[d]],u[d]=p[0],m[d]=p[1],c[d]=p[2],r[d]=p[3]);else{r=new Uint8Array(s);for(let d=0;d<s;d++)p=h[f[d]],u[d]=p[0],m[d]=p[1],c[d]=p[2],r[d]=p[3];n.mask=r}return n.pixels=[u,m,c],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=a,n}function me(t,e){if(!F(t))return null;const{pixels:n,mask:l}=t,r=n.length;let s=e.lut;const{offset:i}=e;s&&s[0].length===1&&(s=n.map((()=>s)));const h=[],o=e.outputPixelType||"u8";for(let f=0;f<r;f++){const u=kt(n[f],l,s[f],i||0,o);h.push(u)}const a=new C({width:t.width,height:t.height,pixels:h,mask:l,pixelType:o});return a.updateStatistics(),a}function kt(t,e,n,l,r){const s=t.length,i=C.createEmptyBand(r,s);if(e)for(let h=0;h<s;h++)e[h]&&(i[h]=n[t[h]-l]);else for(let h=0;h<s;h++)i[h]=n[t[h]-l];return i}function de(t,e){if(!F(t))return null;const n=t.clone(),{pixels:l}=n,r=n.width*n.height,s=e.length,i=Math.floor(s/2),h=e[Math.floor(i)],o=l[0],a=new Uint8Array(r),f=new Uint8Array(r),u=new Uint8Array(r);let m=n.mask;const c=e[0].mappedColor.length===4;m||(m=new Uint8Array(r),m.fill(c?255:1),n.mask=m);for(let p=0;p<r;p++)if(m[p]){const g=o[p];let d=!1,x=i,y=h,k=0,M=s-1;for(;M-k>1;){if(g===y.value){d=!0;break}g>y.value?k=x:M=x,x=Math.floor((k+M)/2),y=e[Math.floor(x)]}d||(g===e[k].value?(y=e[k],d=!0):g===e[M].value?(y=e[M],d=!0):g<e[k].value?d=!1:g>e[k].value&&(g<e[M].value?(y=e[k],d=!0):M===s-1?d=!1:(y=e[M],d=!0))),d?(a[p]=y.mappedColor[0],f[p]=y.mappedColor[1],u[p]=y.mappedColor[2],m[p]=y.mappedColor[3]):a[p]=f[p]=u[p]=m[p]=0}return n.pixels=[a,f,u],n.mask=m,n.pixelType="u8",n.maskIsAlpha=c,n}function xe(t,e,n=!1){const r=new Float32Array(3*gt),s=e.length;for(let i=0;i<gt;i++)r[3*i]=t[2*i]??ct-1,r[3*i+1]=t[2*i+1]??ct,r[3*i+2]=e[i]??0,i<s&&(i>0&&(r[3*i]-=1e-5),t[2*i+1]!==t[2*i]&&(i<s-1||!n)&&(r[3*i+1]-=1e-5));return r}function ye(t,e){if(!F(t))return null;const{width:n,height:l}=t,{inputRanges:r,outputValues:s,outputPixelType:i,noDataRanges:h,allowUnmatched:o,replacementValue:a,isLastInputRangeInclusive:f}=e,u=t.pixels[0],m=C.createEmptyBand(i,u.length),c=t.mask,p=new Uint8Array(n*l);c?p.set(c):p.fill(255);const g=t.pixelType.startsWith("f")?1e-6:0,d=r.map((w=>w-g));d[0]=r[0],d[d.length-1]=r[r.length-1]+(f?1e-6:0);const x=r.length/2,[y,k]=Z(i);for(let w=0;w<l;w++)for(let A=0;A<n;A++){const v=w*n+A;if(p[v]){const U=u[v];let B=!1;for(let P=x-1;P>=0;P--)if(U===r[2*P]||U>d[2*P]&&U<d[2*P+1]){m[v]=s[P],B=!0;break}B||(o?m[v]=U>k?k:U<y?y:a??U:p[v]=0)}}const M=h==null?void 0:h.length;if(M)for(let w=0;w<l;w++)for(let A=0;A<n;A++){const v=w*n+A;if(!c||c[v]){const U=u[v];for(let B=0;B<M;B+=2)if(U>=h[B]&&U<=h[B+1]){m[v]=0,p[v]=0;break}}}return new C({width:n,height:l,pixelType:i,pixels:[m],mask:p})}function mt(t,e,n,l){const r=n!=null&&n.length>=2?new Set(n):null,s=(n==null?void 0:n.length)===1?n[0]:null,i=!!(e!=null&&e.length);for(let h=0;h<t.length;h++)if(l[h]){const o=t[h];if(i){let a=!1;for(let f=0;f<e.length;f+=2)if(o>=e[f]&&o<=e[f+1]){a=!0;break}a||(l[h]=0)}l[h]&&(o===s||r!=null&&r.has(o))&&(l[h]=0)}}function dt(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let r=!1;for(let s=0;s<t.length;s++)if(t[s][l]){r=!0;break}r||(e[l]=0)}}function Mt(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let r=!1;for(let s=0;s<t.length;s++)if(t[s][l]===0){r=!0;break}r&&(e[l]=0)}}function we(t,e){if(!F(t))return null;const{width:n,height:l,pixels:r}=t,s=n*l,i=new Uint8Array(s);t.mask?i.set(t.mask):i.fill(255);const h=r.length,{includedRanges:o,noDataValues:a,outputPixelType:f,matchAll:u,lookups:m}=e;if(m){const c=[];for(let p=0;p<h;p++){const g=m[p],d=kt(r[p],i,g.lut,g.offset||0,"u8");c.push(d)}c.length===1?i.set(c[0]):u?dt(c,i):Mt(c,i)}else if(u){const c=[];for(let p=0;p<h;p++){const g=new Uint8Array(s);g.set(i),mt(r[p],o==null?void 0:o.slice(2*p,2*p+2),a==null?void 0:a[p],g),c.push(g)}c.length===1?i.set(c[0]):dt(c,i)}else for(let c=0;c<h;c++)mt(r[c],o==null?void 0:o.slice(2*c,2*c+2),a==null?void 0:a[c],i);return new C({width:n,height:l,pixelType:f,pixels:r,mask:i})}function ke(t){const{srcPixelType:e,inputRanges:n,outputValues:l,allowUnmatched:r,noDataRanges:s,isLastInputRangeInclusive:i,outputPixelType:h}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const o=e.includes("16")?65536:256,a=e.includes("s")?-o/2:0,f=C.createEmptyBand(h,o),u=new Uint8Array(o);r&&u.fill(255);const[m,c]=Z(h);if(n!=null&&n.length&&(l!=null&&l.length)){const g=n.map((d=>d-1e-6));g[0]=n[0],i&&(g[g.length-1]=n[n.length-1]);for(let d=0;d<g.length;d++){const x=l[d]>c?c:l[d]<m?m:l[d],y=Math.ceil(g[2*d]-a),k=n[2*d+1]===n[2*d]?y:Math.floor(g[2*d+1]-a);for(let M=y;M<=k;M++)f[M]=x,u[M]=255}}if(s!=null&&s.length)for(let p=0;p<s.length;p++){const g=Math.ceil(s[2*p]-a),d=Math.floor(s[2*p+1]-a);for(let x=g;x<=d;x++)u[x]=0}return{lut:f,offset:a,mask:u}}function Me(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const l=t.includes("16")?65536:256,r=t.includes("s")?-l/2:0,s=new Uint8Array(l);if(e)for(let i=0;i<e.length;i++){const h=Math.ceil(e[2*i]-r),o=Math.floor(e[2*i+1]-r);for(let a=h;a<=o;a++)s[a]=255}else s.fill(255);if(n)for(let i=0;i<n.length;i++)s[n[i]-r]=0;return{lut:s,offset:r}}function Xt(t,e,n,l,r,s,i,h){return{xmin:r<=n*t?0:r<n*t+t?r-n*t:t,ymin:s<=l*e?0:s<l*e+e?s-l*e:e,xmax:r+i<=n*t?0:r+i<n*t+t?r+i-n*t:t,ymax:s+h<=l*e?0:s+h<l*e+e?s+h-l*e:e}}function Ae(t,e){if(!t||t.length===0)return null;const n=t.find((p=>p.pixelBlock));if((n==null?void 0:n.pixelBlock)==null)return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,r=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(l,r),i=t.sort(((p,g)=>Math.abs(p.extent.ymax-g.extent.ymax)>s?g.extent.ymax-p.extent.ymax:Math.abs(p.extent.xmin-g.extent.xmin)>s?p.extent.xmin-g.extent.xmin:0)),h=Math.min.apply(null,i.map((p=>p.extent.xmin))),o=Math.min.apply(null,i.map((p=>p.extent.ymin))),a=Math.max.apply(null,i.map((p=>p.extent.xmax))),f=Math.max.apply(null,i.map((p=>p.extent.ymax))),u={x:Math.round((e.xmin-h)/l),y:Math.round((f-e.ymax)/r)},m={width:Math.round((a-h)/l),height:Math.round((f-o)/r)},c={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/r)};return Math.round(m.width/n.pixelBlock.width)*Math.round(m.height/n.pixelBlock.height)!==i.length||u.x<0||u.y<0||m.width<c.width||m.height<c.height?null:{extent:e,pixelBlock:zt(i.map((p=>p.pixelBlock)),m,{clipOffset:u,clipSize:c})}}function rt(t,e,n,l,r,s){const{width:i,height:h}=n.block,{x:o,y:a}=n.offset,{width:f,height:u}=n.mosaic,m=Xt(i,h,l,r,o,a,f,u);let c=0,p=0;if(s){const g=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,d=i*s.resolutionX,x=s.startX+l*d;x<g&&x+d>g?p=s.rightPadding:x>=g&&(c=s.leftMargin-s.rightPadding,p=0)}if(m.xmax-=p,typeof e!="number")for(let g=m.ymin;g<m.ymax;g++){const d=(r*h+g-a)*f+(l*i-o)+c,x=g*i;for(let y=m.xmin;y<m.xmax;y++)t[d+y]=e[x+y]}else for(let g=m.ymin;g<m.ymax;g++){const d=(r*h+g-a)*f+(l*i-o)+c;for(let x=m.xmin;x<m.xmax;x++)t[d+x]=e}}function zt(t,e,n={}){var P;const{clipOffset:l,clipSize:r,alignmentInfo:s,blockWidths:i}=n;if(i)return Jt(t,e,{blockWidths:i});const h=t.find((T=>F(T)));if(h==null)return null;const o=r?r.width:e.width,a=r?r.height:e.height,f=h.width,u=h.height,m=e.width/f,c=e.height/u,p={offset:l||{x:0,y:0},mosaic:r||e,block:{width:f,height:u}},g=h.pixelType,d=C.getPixelArrayConstructor(g),x=h.pixels.length,y=[];let k,M;for(let T=0;T<x;T++){M=new d(o*a);for(let b=0;b<c;b++)for(let $=0;$<m;$++){const S=t[b*m+$];F(S)&&(k=S.pixels[T],rt(M,k,p,$,b,s))}y.push(M)}const w=t.some((T=>T==null||T.mask!=null&&T.mask.length>0)),A=t.some((T=>(T==null?void 0:T.bandMasks)&&T.bandMasks.length>1)),v=w?new Uint8Array(o*a):void 0,U=A?[]:void 0;if(v){for(let T=0;T<c;T++)for(let b=0;b<m;b++){const $=t[T*m+b],S=$!=null?$.mask:null;rt(v,S??($?255:0),p,b,T,s)}if(U)for(let T=0;T<x;T++){const b=new Uint8Array(o*a);for(let $=0;$<c;$++)for(let S=0;S<m;S++){const _=t[$*m+S],I=((P=_==null?void 0:_.bandMasks)==null?void 0:P[T])??(_==null?void 0:_.mask);rt(b,I??(_?255:0),p,S,$,s)}U.push(b)}}const B=new C({width:o,height:a,pixels:y,pixelType:g,bandMasks:U,mask:v});return B.updateStatistics(),B}function Jt(t,e,n){var d;const l=t.find((x=>x!=null));if(l==null)return null;const r=t.some((x=>x==null||!!x.mask)),{width:s,height:i}=e,h=r?new Uint8Array(s*i):null,{blockWidths:o}=n,a=[],f=l.getPlaneCount(),u=C.getPixelArrayConstructor(l.pixelType);if(r)for(let x=0,y=0;x<t.length;y+=o[x],x++){const k=t[x];if(!F(k))continue;const M=k.mask;for(let w=0;w<i;w++)for(let A=0;A<o[x];A++)h[w*s+A+y]=M==null?255:M[w*k.width+A]}const m=t.some((x=>(x==null?void 0:x.bandMasks)&&x.bandMasks.length>1)),c=m?[]:void 0,p=s*i;for(let x=0;x<f;x++){const y=new u(p),k=m?new Uint8Array(p):void 0;for(let M=0,w=0;M<t.length;w+=o[M],M++){const A=t[M];if(!F(A))continue;const v=A.pixels[x];if(v!=null){for(let U=0;U<i;U++)for(let B=0;B<o[M];B++)y[U*s+B+w]=v[U*A.width+B];if(k){const U=((d=A.bandMasks)==null?void 0:d[x])??A.mask;for(let B=0;B<i;B++)for(let P=0;P<o[M];P++)k[B*s+P+w]=U?U[B*A.width+P]:255}}}a.push(y),c&&k&&c.push(k)}const g=new C({width:s,height:i,mask:h,bandMasks:c,pixels:a,pixelType:l.pixelType});return g.updateStatistics(),g}function be(t,e,n){if(!F(t))return null;const{width:l,height:r}=t,s=e.x,i=e.y,h=n.width+s,o=n.height+i;if(s<0||i<0||h>l||o>r||s===0&&i===0&&h===l&&o===r)return t;t.mask||(t.mask=new Uint8Array(l*r));const a=t.mask;for(let f=0;f<r;f++){const u=f*l;for(let m=0;m<l;m++)a[u+m]=f<i||f>=o||m<s||m>=h?0:1}return t.updateStatistics(),t}function Ht(t){if(!F(t))return null;const e=t.clone(),{width:n,height:l,pixels:r}=t,s=r[0],i=e.pixels[0],h=t.mask;for(let o=2;o<l-1;o++){const a=new Map;for(let u=o-2;u<o+2;u++)for(let m=0;m<4;m++){const c=u*n+m;Q(a,s[c],h?h[c]:1)}i[o*n]=xt(a),i[o*n+1]=i[o*n+2]=i[o*n];let f=3;for(;f<n-1;f++){let u=(o-2)*n+f+1;Q(a,s[u],h?h[u]:1),u=(o-1)*n+f+1,Q(a,s[u],h?h[u]:1),u=o*n+f+1,Q(a,s[u],h?h[u]:1),u=(o+1)*n+f+1,Q(a,s[u],h?h[u]:1),u=(o-2)*n+f-3,tt(a,s[u],h?h[u]:1),u=(o-1)*n+f-3,tt(a,s[u],h?h[u]:1),u=o*n+f-3,tt(a,s[u],h?h[u]:1),u=(o+1)*n+f-3,tt(a,s[u],h?h[u]:1),i[o*n+f]=xt(a)}i[o*n+f+1]=i[o*n+f]}for(let o=0;o<n;o++)i[o]=i[n+o]=i[2*n+o],i[(l-1)*n+o]=i[(l-2)*n+o];return e.updateStatistics(),e}function xt(t){if(t.size===0)return 0;let e=0,n=-1,l=0;const r=t.keys();let s=r.next();for(;!s.done;)l=t.get(s.value),l>e&&(n=s.value,e=l),s=r.next();return n}function tt(t,e,n){if(n===0)return;const l=t.get(e);l===1?t.delete(e):t.set(e,l-1)}function Q(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function At(t,e,n){let{x:l,y:r}=e;const{width:s,height:i}=n;if(l===0&&r===0&&i===t.height&&s===t.width)return t;const{width:h,height:o}=t,a=Math.max(0,r),f=Math.max(0,l),u=Math.min(l+s,h),m=Math.min(r+i,o);if(u<0||m<0||!F(t))return null;l=Math.max(0,-l),r=Math.max(0,-r);const{pixels:c}=t,p=s*i,g=c.length,d=[];for(let M=0;M<g;M++){const w=c[M],A=C.createEmptyBand(t.pixelType,p);for(let v=a;v<m;v++){const U=v*h;let B=(v+r-a)*s+l;for(let P=f;P<u;P++)A[B++]=w[U+P]}d.push(A)}const x=new Uint8Array(p),y=t.mask;for(let M=a;M<m;M++){const w=M*h;let A=(M+r-a)*s+l;for(let v=f;v<u;v++)x[A++]=y?y[w+v]:1}const k=new C({width:n.width,height:n.height,pixelType:t.pixelType,pixels:d,mask:x});return k.updateStatistics(),k}function bt(t,e=!0){if(!F(t))return null;const{pixels:n,width:l,height:r,mask:s,pixelType:i}=t,h=[],o=Math.round(l/2),a=Math.round(r/2),f=r-1,u=l-1;for(let c=0;c<n.length;c++){const p=n[c],g=C.createEmptyBand(i,o*a);let d=0;for(let x=0;x<r;x+=2)for(let y=0;y<l;y+=2){const k=p[x*l+y];if(e){const M=y===u?k:p[x*l+y+1],w=x===f?k:p[x*l+y+l],A=y===u?w:x===f?M:p[x*l+y+l+1];g[d++]=(k+M+w+A)/4}else g[d++]=k}h.push(g)}let m=null;if(s!=null){m=new Uint8Array(o*a);let c=0;for(let p=0;p<r;p+=2)for(let g=0;g<l;g+=2){const d=s[p*l+g];if(e){const x=g===u?d:s[p*l+g+1],y=p===f?d:s[p*l+g+l],k=g===u?y:p===f?x:s[p*l+g+l+1];m[c++]=d*x*y*k?1:0}else m[c++]=d}}return new C({width:o,height:a,pixelType:i,pixels:h,mask:m})}function ve(t,e,n=0,l=!0){if(!F(t))return null;const{width:r,height:s}=e;let{width:i,height:h}=t;const o=new Map,a={x:0,y:0},f=1+n;let u=t;for(let m=0;m<f;m++){const c=Math.ceil(i/r),p=Math.ceil(h/s);for(let g=0;g<p;g++){a.y=g*s;for(let d=0;d<c;d++){a.x=d*r;const x=At(u,a,e);o.set(`${m}/${g}/${d}`,x)}}m<f-1&&(u=bt(u,l)),i=Math.round(i/2),h=Math.round(h/2)}return o}function Ue(t){const{pixelBlock:e,tileSize:n,level:l,row:r,col:s,useBilinear:i}=t;if(!F(e))return null;const{width:h,height:o}=n,a=2**l,f=a*h,u=a*o;let m=At(e,{y:r*u,x:s*f},{width:f,height:u});if(!m)return null;for(let c=l;c>0;c--)m=bt(m,i);return m}function vt(t,e,n,l,r=0){const{width:s,height:i}=t,{width:h,height:o}=e,a=l.cols,f=l.rows,u=Math.ceil(h/a-.1/a),m=Math.ceil(o/f-.1/f);let c,p,g,d,x,y,k;const M=u*a,w=M*m*f,A=new Float32Array(w),v=new Float32Array(w),U=new Uint32Array(w),B=new Uint32Array(w);let P,T,b=0;for(let $=0;$<m;$++)for(let S=0;S<u;S++){c=12*($*u+S),p=n[c],g=n[c+1],d=n[c+2],x=n[c+3],y=n[c+4],k=n[c+5];for(let _=0;_<f;_++){b=($*f+_)*M+S*a,T=(_+.5)/f;for(let I=0;I<_;I++)P=(I+.5)/a,A[b+I]=(p*P+g*T+d)*s+r,v[b+I]=(x*P+y*T+k)*i+r,U[b+I]=Math.floor(A[b+I]),B[b+I]=Math.floor(v[b+I])}c+=6,p=n[c],g=n[c+1],d=n[c+2],x=n[c+3],y=n[c+4],k=n[c+5];for(let _=0;_<f;_++){b=($*f+_)*M+S*a,T=(_+.5)/f;for(let I=_;I<a;I++)P=(I+.5)/a,A[b+I]=(p*P+g*T+d)*s+r,v[b+I]=(x*P+y*T+k)*i+r,U[b+I]=Math.floor(A[b+I]),B[b+I]=Math.floor(v[b+I])}}return{offsets_x:A,offsets_y:v,offsets_xi:U,offsets_yi:B,gridWidth:M}}function Pe(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:r,offsets_y:s,gridWidth:i}=vt(t,t,n,{rows:l[0],cols:l[1]}),{width:h,height:o}=t,a=new Float32Array(h*o),f=180/Math.PI;for(let u=0;u<o;u++)for(let m=0;m<h;m++){const c=u*i+m,p=u===0?c:c-i,g=u===o-1?c:c+i,d=r[p]-r[g],x=s[g]-s[p];if(isNaN(d)||isNaN(x))a[u*h+m]=90;else{let y=Math.atan2(x,d)*f;y=(360+y)%360,a[u*h+m]=y}}return a}function Te(t,e,n,l,r="nearest"){if(!F(t))return null;r==="majority"&&(t=Ht(t));const{pixels:s,mask:i,bandMasks:h,pixelType:o}=t,a=t.width,f=t.height,u=C.getPixelArrayConstructor(o),m=s.length,{width:c,height:p}=e;let g=!1;for(let b=0;b<n.length;b+=3)n[b]===-1&&n[b+1]===-1&&n[b+2]===-1&&(g=!0);const{offsets_x:d,offsets_y:x,offsets_xi:y,offsets_yi:k,gridWidth:M}=vt({width:a,height:f},e,n,l,r==="majority"?.5:0);let w;const A=(b,$,S,_)=>{const I=b instanceof Float32Array||b instanceof Float64Array?0:.5;for(let V=0;V<p;V++){w=V*M;for(let D=0;D<c;D++){if(d[w]<0||x[w]<0)b[V*c+D]=0;else if(_)b[V*c+D]=$[y[w]+k[w]*a];else{const G=Math.floor(d[w]),W=Math.floor(x[w]),X=Math.ceil(d[w]),z=Math.ceil(x[w]),L=d[w]-G,H=x[w]-W;if(!S||S[G+W*a]&&S[X+W*a]&&S[G+z*a]&&S[X+z*a]){const Y=(1-L)*$[G+W*a]+L*$[X+W*a],K=(1-L)*$[G+z*a]+L*$[X+z*a];b[V*c+D]=(1-H)*Y+H*K+I}else b[V*c+D]=$[y[w]+k[w]*a]}w++}}},v=[];let U;const B=(h==null?void 0:h.length)===m,P=[];for(let b=0;b<m;b++){if(B){const $=new Uint8Array(c*p);A($,h[b],h[b],!0),P.push($)}U=new u(c*p),A(U,s[b],B?h[b]:i,r==="nearest"||r==="majority"),v.push(U)}const T=new C({width:c,height:p,pixelType:o,pixels:v,bandMasks:B?P:void 0});if(i!=null)T.mask=new Uint8Array(c*p),A(T.mask,i,i,!0);else if(g){T.mask=new Uint8Array(c*p);for(let b=0;b<c*p;b++)T.mask[b]=d[b]<0||x[b]<0?0:1}return T.updateStatistics(),T}const q=new Map;q.set("meter-per-second",1),q.set("kilometer-per-hour",.277778),q.set("knots",.514444),q.set("feet-per-second",.3048),q.set("mile-per-hour",.44704);const at=180/Math.PI,ht=5,nt=new Nt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function ut(t,e){return q.get(t)/q.get(e)||1}function Ut(t){return(450-t)%360}function Pt(t,e="geographic"){const[n,l]=t,r=Math.sqrt(n*n+l*l);let s=Math.atan2(l,n)*at;return s=(360+s)%360,e==="geographic"&&(s=Ut(s)),[r,s]}function Kt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=Ut(n)),n%=360;const l=t[0];return[l*Math.cos(n/at),l*Math.sin(n/at)]}function $e(t,e,n,l="geographic"){if(!F(t)||n==null)return t;const r=e==="vector-magdir"?t.clone():yt(t,e),s=r.pixels[1];for(let i=0;i<s.length;i++)s[i]=l==="geographic"?(s[i]+n[i]+270)%360:(s[i]+360-n[i])%360;return e==="vector-magdir"?r:yt(r,"vector-magdir")}function yt(t,e,n="geographic",l=1){if(!F(t))return t;const{pixels:r,width:s,height:i}=t,h=s*i,o=r[0],a=r[1],f=t.pixelType.startsWith("f")?t.pixelType:"f32",u=C.createEmptyBand(f,h),m=C.createEmptyBand(f,h);let c=0;for(let g=0;g<i;g++)for(let d=0;d<s;d++)e==="vector-uv"?([u[c],m[c]]=Pt([o[c],a[c]],n),u[c]*=l):([u[c],m[c]]=Kt([o[c],a[c]],n),u[c]*=l,m[c]*=l),c++;const p=new C({pixelType:f,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,m]});return p.updateStatistics(),p}function Be(t,e,n=1){if(n===1||!F(t))return t;const l=t.clone(),{pixels:r,width:s,height:i}=l,h=r[0];r[1];let o=0;for(let a=0;a<i;a++)for(let f=0;f<s;f++)h[o]*=n,o++;return l.updateStatistics(),l}function Ce(t,e,n,l,r){if(r==null||!r.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/l),height:Math.round(n/l),resolution:t.width/e};const s=r.xmin,i=r.ymax,h=(t.xmax-t.xmin)/e*l,o=(t.ymax-t.ymin)/n*l,a=(h+o)/2;return t.xmin=s+Math.floor((t.xmin-s)/h)*h,t.xmax=s+Math.ceil((t.xmax-s)/h)*h,t.ymin=i+Math.floor((t.ymin-i)/o)*o,t.ymax=i+Math.ceil((t.ymax-i)/o)*o,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/o),resolution:a}}const Qt=Tt(0,0,0);function Tt(t=0,e=0,n=Math.PI,l=!0){l&&(n=(2*Math.PI-n)%(2*Math.PI));const r=l?-1:1,s=13*r,i=-7*r,h=-2*r,o=-16*r,a=21.75,[f,u]=N(0,e+s,n,a),[m,c]=N(t-5.5,e+i,n,a),[p,g]=N(t+5.5,e+i,n,a),[d,x]=N(t-1.5,e+h,n,a),[y,k]=N(t+1.5,e+h,n,a),[M,w]=N(t-1.5,e+o,n,a),[A,v]=N(t+1.5,e+o,n,a);return[f,u,m,c,d,x,y,k,p,g,M,w,A,v]}function Zt(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const l=10,r=n?-1:1,s=5*r,i=20*r,h=25*r,o=45,a=0,f=0,u=2,m=0,c=u*r,p=n?1:-1,g=l/2*p;let[d,x]=[a+g,f-i],[y,k]=[d+u*p,x],[M,w]=[y-m*p,k+c],[A,v]=[a-g,f-h],[U,B]=[A+m*p,v-c],P=Math.ceil(t/ht),T=Math.floor(P/10);P-=8*T;const b=[],$=[];for(let L=0;L<P/2;L++,T--){T<=0&&P%2==1&&L===(P-1)/2&&(A=a,U=A+m*p,v=(v+x)/2,B=v-c);const[H,Y]=N(A,v,e,o);if(T>0){const[K,it]=N(y,v,e,o),[st,lt]=N(d,x,e,o);b.push(K),b.push(it),b.push(H),b.push(Y),b.push(st),b.push(lt)}else{const[K,it]=N(y,k,e,o),[st,lt]=N(M,w,e,o),[$t,Bt]=N(U,B,e,o);$.push(H),$.push(Y),$.push($t),$.push(Bt),$.push(st),$.push(lt),$.push(K),$.push(it)}v+=s,x+=s,k+=s,w+=s,B+=s}const[S,_]=N(a+g,f+i,e,o),I=(l/2+u)*p,[V,D]=N(a+I,f+i,e,o),[G,W]=N(a+g,f-h,e,o),[X,z]=N(a+I,f-h,e,o);return{pennants:b,barbs:$,shaft:[S,_,V,D,G,W,X,z]}}function N(t,e,n,l=1){const r=Math.sqrt(t*t+e*e)/l,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[r,(2*Math.PI+s-n)%(2*Math.PI)]}const et=[0,1,3,6,10,16,21,27,33,40,47,55,63],Yt=[0,.5,1,1.5,2],te=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function O(t,e,n,l){const r=ut(l||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*r)break}else if(t<=e[s]*r)break;return Math.min(s-1,e.length-2)}function ee(t,e,n,l,r){let s=0;switch(e){case"beaufort_kn":s=O(t,et,"knots",n);break;case"beaufort_km":s=O(t,et,"kilometer-per-hour",n);break;case"beaufort_ft":s=O(t,et,"feet-per-second",n);break;case"beaufort_m":s=O(t,et,"meter-per-second",n);break;case"classified_arrow":s=O(t,r??[],l,n);break;case"ocean_current_m":s=O(t,Yt,"meter-per-second",n);break;case"ocean_current_kn":s=O(t,te,"knots",n)}return s}function ne(t,e){const{style:n,inputUnit:l,outputUnit:r,breakValues:s}=e,i=nt.fromJSON(l),h=nt.fromJSON(r),o=42,a=15;let f=0,u=0;const{width:m,height:c,mask:p}=t,g=t.pixels[0],d=t.pixels[1],x=p!=null?p.filter((w=>w>0)).length:m*c,y=new Float32Array(x*o),k=new Uint32Array(a*x),M=e.invertDirection?Tt(0,0,0,!1):Qt;for(let w=0;w<c;w++)for(let A=0;A<m;A++){const v=w*m+A;if(!p||p[w*m+A]){const U=(d[v]+360)%360/180*Math.PI,B=ee(g[v],n,i,h,s);for(let T=0;T<M.length;T+=2)y[f++]=(A+.5)/m,y[f++]=(w+.5)/c,y[f++]=M[T],y[f++]=M[T+1]+U,y[f++]=B,y[f++]=g[v];const P=7*(f/o-1);k[u++]=P,k[u++]=P+1,k[u++]=P+2,k[u++]=P+0,k[u++]=P+4,k[u++]=P+3,k[u++]=P+0,k[u++]=P+2,k[u++]=P+3,k[u++]=P+2,k[u++]=P+5,k[u++]=P+3,k[u++]=P+5,k[u++]=P+6,k[u++]=P+3}}return{vertexData:y,indexData:k}}const ot=[];function ie(t,e){if(ot.length===0)for(let c=0;c<30;c++)ot.push(Zt(5*c,0,!e.invertDirection));const n=ut(nt.fromJSON(e.inputUnit),"knots"),{width:l,height:r,mask:s}=t,i=t.pixels[0],h=t.pixels[1],o=6,a=[],f=[];let u=0,m=0;for(let c=0;c<r;c++)for(let p=0;p<l;p++){const g=c*l+p,d=i[g]*n;if((!s||s[c*l+p])&&d>=ht){const x=(h[g]+360)%360/180*Math.PI,{pennants:y,barbs:k,shaft:M}=ot[Math.min(Math.floor(d/5),29)];if(y.length+k.length===0)continue;let w=a.length/o;const A=(p+.5)/l,v=(c+.5)/r;for(let U=0;U<y.length;U+=2)a[u++]=A,a[u++]=v,a[u++]=y[U],a[u++]=y[U+1]+x,a[u++]=0,a[u++]=d;for(let U=0;U<k.length;U+=2)a[u++]=A,a[u++]=v,a[u++]=k[U],a[u++]=k[U+1]+x,a[u++]=0,a[u++]=d;for(let U=0;U<M.length;U+=2)a[u++]=A,a[u++]=v,a[u++]=M[U],a[u++]=M[U+1]+x,a[u++]=0,a[u++]=d;for(let U=0;U<y.length/6;U++)f[m++]=w,f[m++]=w+1,f[m++]=w+2,w+=3;for(let U=0;U<k.length/8;U++)f[m++]=w,f[m++]=w+1,f[m++]=w+2,f[m++]=w+1,f[m++]=w+2,f[m++]=w+3,w+=4;f[m++]=w+0,f[m++]=w+1,f[m++]=w+2,f[m++]=w+1,f[m++]=w+3,f[m++]=w+2,w+=4}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(f)}}function se(t,e){let l=0,r=0;const{width:s,height:i,mask:h}=t,o=t.pixels[0],a=[],f=[],u=ut(nt.fromJSON(e.inputUnit),"knots"),m=e.style==="wind_speed"?ht:Number.MAX_VALUE;for(let c=0;c<i;c++)for(let p=0;p<s;p++){const g=o[c*s+p]*u;if((!h||h[c*s+p])&&g<m){for(let x=0;x<4;x++)a[l++]=(p+.5)/s,a[l++]=(c+.5)/i,a[l++]=x<2?-.5:.5,a[l++]=x%2==0?-.5:.5,a[l++]=0,a[l++]=g;const d=4*(l/24-1);f[r++]=d,f[r++]=d+1,f[r++]=d+2,f[r++]=d+1,f[r++]=d+2,f[r++]=d+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(f)}}function Ie(t,e){return e.style==="simple_scalar"?se(t,e):e.style==="wind_speed"?ie(t,e):ne(t,e)}function Se(t,e,n,l=[0,0],r=.5){const{width:s,height:i,mask:h}=t,[o,a]=t.pixels,[f,u]=l,m=Math.round((s-f)/n),c=Math.round((i-u)/n),p=m*c,g=new Float32Array(p),d=new Float32Array(p),x=new Uint8Array(p);for(let k=0;k<c;k++)for(let M=0;M<m;M++){let w=0;const A=k*m+M,v=Math.max(0,k*n+u),U=Math.max(0,M*n+f),B=Math.min(i,v+n),P=Math.min(s,U+n);for(let T=v;T<B;T++)for(let b=U;b<P;b++){const $=T*s+b;if(!h||h[$]){w++;const S=[o[$],a[$]],[_,I]=S;g[A]+=_,d[A]+=I}}if(w>=(B-v)*(P-U)*(1-r)){x[A]=1;const[T,b]=Pt([g[A]/w,d[A]/w]);g[A]=T,d[A]=b}else x[A]=0,g[A]=0,d[A]=0}const y=new C({width:m,height:c,pixels:[g,d],mask:x});return y.updateStatistics(),y}export{we as A,be as B,ke as C,Te as D,kt as E,ye as F,xe as G,oe as H,ve as I,Me as M,Ue as R,Se as S,zt as T,Ae as U,At as W,se as _,Ie as a,ut as b,C as c,wt as d,Z as e,yt as f,ce as g,ge as h,ae as i,Pe as j,de as k,Pt as l,Ce as m,me as n,pe as o,Be as p,ue as q,F as r,nt as s,he as t,$e as u,jt as v,fe as w,pt as x,ft as y,gt as z};
