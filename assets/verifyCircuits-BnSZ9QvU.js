import{r as t,m as s,k2 as h,d as y,l as a,T as j,v as w,y as x,x as O,H as S}from"./index-Ds3x37R4.js";import{t as g}from"./utils-BhX6cf6D.js";import"./applyEditsUtils-BAvR-1q6.js";import"./MeshTransform-BB-6Anqp.js";import"./editingSupport-CN3_P2Q8.js";let o=class extends a{constructor(i){super(i),this.error=null,this.geometry=null,this.name=null}};t([s({type:Object})],o.prototype,"error",void 0),t([s({type:h})],o.prototype,"geometry",void 0),t([s({type:String})],o.prototype,"name",void 0),o=t([y("esri.rest.networks.circuits.support.CircuitVerifyResult")],o);const u=o;let r=class extends a{constructor(e){super(e),this.circuits=[],this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,c){return g(e)}};t([s({type:[u],json:{type:[u],write:!0}})],r.prototype,"circuits",void 0),t([s({type:Date,json:{type:Number,write:{writer:(i,e)=>{e.moment=i?i.getTime():null}}}})],r.prototype,"moment",void 0),t([s({type:Boolean,json:{type:Boolean,write:!0}})],r.prototype,"exceededTransferLimit",void 0),t([s({type:[Object],json:{type:[Object],write:!0}})],r.prototype,"serviceEdits",void 0),t([j("serviceEdits")],r.prototype,"readServiceEdits",null),r=t([y("esri.rest.networks.circuits.support.VerifyCircuitsResult")],r);async function C(i,e,c){const p=w(i),n=e.toJSON();e.circuits&&(n.circuits=JSON.stringify(e.circuits));const l={...n,f:"json"},m=x({...p.query,...l}),d=O(m,{...c,method:"post"}),f=`${p.path}/circuits/verify`,{data:v}=await S(f,d);return r.fromJSON(v)}export{C as verifyCircuits};
