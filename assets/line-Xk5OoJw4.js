import{a$ as h,bj as m,a_ as $,bk as E,bl as f}from"./index-BdmtnMtL.js";import{p as a,a as g}from"./triangulationUtils-BQabTsG9.js";function N(n,l,i,p){const t=n.type==="polygon"?a.CCW_IS_HOLE:a.NONE,s=n.type==="polygon"?n.rings:n.paths,{position:o,outlines:e}=g(s,!!n.hasZ,t,n.spatialReference),r=$(o.length),c=E(o,n.spatialReference,0,r,0,o,0,o.length/3,l,i,p),u=c!=null;return{lines:u?y(e,o,r):[],projectionSuccess:u,sampledElevation:c}}function O(n,l){const i=n.type==="polygon"?a.CCW_IS_HOLE:a.NONE,p=n.type==="polygon"?n.rings:n.paths,{position:t,outlines:s}=g(p,!1,i),o=h(t,n.spatialReference,0,t,l,0);for(let e=2;e<t.length;e+=3)t[e]=m;return{lines:o?y(s,t):[],projectionSuccess:o}}function y(n,l,i=null){const p=new Array;for(const{index:t,count:s}of n){if(s<=1)continue;const o=3*t,e=3*s;p.push({position:f(l,3*t,3*s),mapPositions:i!=null?f(i,o,e):void 0})}return p}export{O as l,N as p};
